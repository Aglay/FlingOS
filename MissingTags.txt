Namespace	Drivers.Compiler	<summary>
Type	Drivers.Compiler.CompileResult	<summary>
Type	Drivers.Compiler.CompileResult	<remarks>
Type	Drivers.Compiler.DebugDataManager	<summary>
Type	Drivers.Compiler.DebugDataManager	<remarks>
Type	Drivers.Compiler.Errors	<summary>
Type	Drivers.Compiler.Errors	<remarks>
Method	Drivers.Compiler.Errors.#cctor	<remarks>
Field	Drivers.Compiler.Errors.ASMCompiler_CompileFailed_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.ASMCompiler_CompileFailed_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.ASMCompiler_NASMException_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.ASMCompiler_NASMException_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.ASMCompiler_UnexpectedException_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.ASMCompiler_UnexpectedException_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.ErrorMessages	<summary>
Field	Drivers.Compiler.Errors.ErrorMessages	<remarks>
Field	Drivers.Compiler.Errors.ILCompiler_CompileFailed_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.ILCompiler_CompileFailed_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.ILCompiler_LoadTargetArchError_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.ILCompiler_LoadTargetArchError_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.ILCompiler_NullRefException_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.ILCompiler_NullRefException_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.ILCompiler_ScanILOpCustomWarning_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.ILCompiler_ScanILOpCustomWarning_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.ILCompiler_ScanILOpFailure_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.ILCompiler_ScanILOpFailure_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.ILCompiler_UnexpectedException_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.ILCompiler_UnexpectedException_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.Linker_LinkFailed_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.Linker_LinkFailed_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.Linker_UnexpectedException_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.Linker_UnexpectedException_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.Loader_LibraryFileDoesntExist_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.Loader_LibraryFileDoesntExist_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.Loader_LibraryPathNullOrEmpty_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.Loader_LibraryPathNullOrEmpty_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.Loader_UnexpectedError_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.Loader_UnexpectedError_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.PreReqs_OptionsInvalid_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.PreReqs_OptionsInvalid_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.PreReqs_UnexpectedError_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.PreReqs_UnexpectedError_ErrorCode	<remarks>
Field	Drivers.Compiler.Errors.Utilities_ExternalError_ErrorCode	<summary>
Field	Drivers.Compiler.Errors.Utilities_ExternalError_ErrorCode	<remarks>
Type	Drivers.Compiler.LibraryLoader	<summary>
Type	Drivers.Compiler.LibraryLoader	<remarks>
Method	Drivers.Compiler.LibraryLoader.#cctor	<remarks>
Method	Drivers.Compiler.LibraryLoader.IsAssemblyFullNameIgnored(System.String)	<summary>
Method	Drivers.Compiler.LibraryLoader.IsAssemblyFullNameIgnored(System.String)	<remarks>
Method	Drivers.Compiler.LibraryLoader.IsAssemblyFullNameIgnored(System.String)	<returns>
Method	Drivers.Compiler.LibraryLoader.IsAssemblyFullNameIgnored(System.String)	"<param name=""fullName""/>"
Field	Drivers.Compiler.LibraryLoader.LibraryCache	<summary>
Field	Drivers.Compiler.LibraryLoader.LibraryCache	<remarks>
Method	Drivers.Compiler.LibraryLoader.LoadDependencies(Drivers.Compiler.IL.ILLibrary)	<summary>
Method	Drivers.Compiler.LibraryLoader.LoadDependencies(Drivers.Compiler.IL.ILLibrary)	<remarks>
Method	Drivers.Compiler.LibraryLoader.LoadDependencies(Drivers.Compiler.IL.ILLibrary)	<returns>
Method	Drivers.Compiler.LibraryLoader.LoadDependencies(Drivers.Compiler.IL.ILLibrary)	"<param name=""aLibrary""/>"
Method	Drivers.Compiler.LibraryLoader.LoadILLibrary(System.String)	<summary>
Method	Drivers.Compiler.LibraryLoader.LoadILLibrary(System.String)	<remarks>
Method	Drivers.Compiler.LibraryLoader.LoadILLibrary(System.String)	<returns>
Method	Drivers.Compiler.LibraryLoader.LoadILLibrary(System.String)	"<param name=""FilePath""/>"
Method	Drivers.Compiler.LibraryLoader.LoadILLibraryFromFile(System.String)	<summary>
Method	Drivers.Compiler.LibraryLoader.LoadILLibraryFromFile(System.String)	<remarks>
Method	Drivers.Compiler.LibraryLoader.LoadILLibraryFromFile(System.String)	<returns>
Method	Drivers.Compiler.LibraryLoader.LoadILLibraryFromFile(System.String)	"<param name=""FilePath""/>"
Type	Drivers.Compiler.LinkManager	<summary>
Type	Drivers.Compiler.LinkManager	<remarks>
Method	"Drivers.Compiler.LinkManager.CopyDirectory(System.String,System.String,System.Boolean)"	<summary>
Method	"Drivers.Compiler.LinkManager.CopyDirectory(System.String,System.String,System.Boolean)"	<remarks>
Method	"Drivers.Compiler.LinkManager.CopyDirectory(System.String,System.String,System.Boolean)"	"<param name=""sourceDirName""/>"
Method	"Drivers.Compiler.LinkManager.CopyDirectory(System.String,System.String,System.Boolean)"	"<param name=""destDirName""/>"
Method	"Drivers.Compiler.LinkManager.CopyDirectory(System.String,System.String,System.Boolean)"	"<param name=""copySubDirs""/>"
Method	"Drivers.Compiler.LinkManager.GetOrder(Drivers.Compiler.ASM.ASMBlock,Drivers.Compiler.ASM.ASMBlock)"	<summary>
Method	"Drivers.Compiler.LinkManager.GetOrder(Drivers.Compiler.ASM.ASMBlock,Drivers.Compiler.ASM.ASMBlock)"	<remarks>
Method	"Drivers.Compiler.LinkManager.GetOrder(Drivers.Compiler.ASM.ASMBlock,Drivers.Compiler.ASM.ASMBlock)"	<returns>
Method	"Drivers.Compiler.LinkManager.GetOrder(Drivers.Compiler.ASM.ASMBlock,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""a""/>"
Method	"Drivers.Compiler.LinkManager.GetOrder(Drivers.Compiler.ASM.ASMBlock,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""b""/>"
Method	Drivers.Compiler.LinkManager.Link(Drivers.Compiler.IL.ILLibrary)	<summary>
Method	Drivers.Compiler.LinkManager.Link(Drivers.Compiler.IL.ILLibrary)	<remarks>
Method	Drivers.Compiler.LinkManager.Link(Drivers.Compiler.IL.ILLibrary)	<returns>
Method	Drivers.Compiler.LinkManager.Link(Drivers.Compiler.IL.ILLibrary)	"<param name=""TheLibrary""/>"
Method	Drivers.Compiler.LinkManager.SortBlocks(System.Collections.Generic.List{Drivers.Compiler.ASM.ASMBlock})	<summary>
Method	Drivers.Compiler.LinkManager.SortBlocks(System.Collections.Generic.List{Drivers.Compiler.ASM.ASMBlock})	<remarks>
Method	Drivers.Compiler.LinkManager.SortBlocks(System.Collections.Generic.List{Drivers.Compiler.ASM.ASMBlock})	"<param name=""AllBlocks""/>"
Type	Drivers.Compiler.Logger	<summary>
Type	Drivers.Compiler.Logger	<remarks>
Method	"Drivers.Compiler.Logger.LogError(System.String,System.String,System.Int32,System.String)"	<summary>
Method	"Drivers.Compiler.Logger.LogError(System.String,System.String,System.Int32,System.String)"	<remarks>
Method	"Drivers.Compiler.Logger.LogError(System.String,System.String,System.Int32,System.String)"	"<param name=""errorCode""/>"
Method	"Drivers.Compiler.Logger.LogError(System.String,System.String,System.Int32,System.String)"	"<param name=""file""/>"
Method	"Drivers.Compiler.Logger.LogError(System.String,System.String,System.Int32,System.String)"	"<param name=""lineNumber""/>"
Method	"Drivers.Compiler.Logger.LogError(System.String,System.String,System.Int32,System.String)"	"<param name=""message""/>"
Method	"Drivers.Compiler.Logger.LogMessage(System.String,System.Int32,System.String)"	<summary>
Method	"Drivers.Compiler.Logger.LogMessage(System.String,System.Int32,System.String)"	<remarks>
Method	"Drivers.Compiler.Logger.LogMessage(System.String,System.Int32,System.String)"	"<param name=""file""/>"
Method	"Drivers.Compiler.Logger.LogMessage(System.String,System.Int32,System.String)"	"<param name=""lineNumber""/>"
Method	"Drivers.Compiler.Logger.LogMessage(System.String,System.Int32,System.String)"	"<param name=""message""/>"
Method	"Drivers.Compiler.Logger.LogWarning(System.String,System.String,System.Int32,System.String)"	<summary>
Method	"Drivers.Compiler.Logger.LogWarning(System.String,System.String,System.Int32,System.String)"	<remarks>
Method	"Drivers.Compiler.Logger.LogWarning(System.String,System.String,System.Int32,System.String)"	"<param name=""warningCode""/>"
Method	"Drivers.Compiler.Logger.LogWarning(System.String,System.String,System.Int32,System.String)"	"<param name=""file""/>"
Method	"Drivers.Compiler.Logger.LogWarning(System.String,System.String,System.Int32,System.String)"	"<param name=""lineNumber""/>"
Method	"Drivers.Compiler.Logger.LogWarning(System.String,System.String,System.Int32,System.String)"	"<param name=""message""/>"
E	Drivers.Compiler.Logger.OnLogError	<summary>
E	Drivers.Compiler.Logger.OnLogError	<remarks>
E	Drivers.Compiler.Logger.OnLogMessage	<summary>
E	Drivers.Compiler.Logger.OnLogMessage	<remarks>
E	Drivers.Compiler.Logger.OnLogWarning	<summary>
E	Drivers.Compiler.Logger.OnLogWarning	<remarks>
Type	Drivers.Compiler.Logger.LogErrorEventHandler	<summary>
Type	Drivers.Compiler.Logger.LogErrorEventHandler	<remarks>
Type	Drivers.Compiler.Logger.LogMessageEventHandler	<summary>
Type	Drivers.Compiler.Logger.LogMessageEventHandler	<remarks>
Type	Drivers.Compiler.Logger.LogWarningEventHandler	<summary>
Type	Drivers.Compiler.Logger.LogWarningEventHandler	<remarks>
Type	Drivers.Compiler.Options	<summary>
Type	Drivers.Compiler.Options	<remarks>
Method	Drivers.Compiler.Options.#cctor	<remarks>
Property	Drivers.Compiler.Options.AddressSizeInBytes	<summary>
Property	Drivers.Compiler.Options.AddressSizeInBytes	<remarks>
Property	Drivers.Compiler.Options.AddressSizeInBytes	<value>
Property	Drivers.Compiler.Options.BuildMode	<summary>
Property	Drivers.Compiler.Options.BuildMode	<remarks>
Property	Drivers.Compiler.Options.BuildMode	<value>
Method	Drivers.Compiler.Options.Format	<summary>
Method	Drivers.Compiler.Options.Format	<remarks>
Field	Drivers.Compiler.Options.ignoreAssemblies	<summary>
Field	Drivers.Compiler.Options.ignoreAssemblies	<remarks>
Property	Drivers.Compiler.Options.IgnoreAssemblies	<summary>
Property	Drivers.Compiler.Options.IgnoreAssemblies	<remarks>
Property	Drivers.Compiler.Options.IgnoreAssemblies	<value>
Property	Drivers.Compiler.Options.LibraryPath	<summary>
Property	Drivers.Compiler.Options.LibraryPath	<remarks>
Property	Drivers.Compiler.Options.LibraryPath	<value>
Property	Drivers.Compiler.Options.LinkMode	<summary>
Property	Drivers.Compiler.Options.LinkMode	<remarks>
Property	Drivers.Compiler.Options.LinkMode	<value>
Property	Drivers.Compiler.Options.OutputPath	<summary>
Property	Drivers.Compiler.Options.OutputPath	<remarks>
Property	Drivers.Compiler.Options.OutputPath	<value>
Property	Drivers.Compiler.Options.TargetArchitecture	<summary>
Property	Drivers.Compiler.Options.TargetArchitecture	<remarks>
Property	Drivers.Compiler.Options.TargetArchitecture	<value>
Property	Drivers.Compiler.Options.ToolsPath	<summary>
Property	Drivers.Compiler.Options.ToolsPath	<remarks>
Property	Drivers.Compiler.Options.ToolsPath	<value>
Method	Drivers.Compiler.Options.Validate	<summary>
Method	Drivers.Compiler.Options.Validate	<remarks>
Method	Drivers.Compiler.Options.Validate	<returns>
Field	Drivers.Compiler.Options.ValidTargetArchitectures	<summary>
Field	Drivers.Compiler.Options.ValidTargetArchitectures	<remarks>
Type	Drivers.Compiler.Options.BuildModes	<summary>
Type	Drivers.Compiler.Options.BuildModes	<remarks>
Type	Drivers.Compiler.Options.LinkModes	<summary>
Type	Drivers.Compiler.Options.LinkModes	<remarks>
Type	Drivers.Compiler.Utilities	<summary>
Type	Drivers.Compiler.Utilities	<remarks>
Method	Drivers.Compiler.Utilities.#cctor	<remarks>
Field	Drivers.Compiler.Utilities.CallbacksLock	<summary>
Field	Drivers.Compiler.Utilities.CallbacksLock	<remarks>
Method	Drivers.Compiler.Utilities.CleanFileName(System.String)	<summary>
Method	Drivers.Compiler.Utilities.CleanFileName(System.String)	<remarks>
Method	Drivers.Compiler.Utilities.CleanFileName(System.String)	<returns>
Method	Drivers.Compiler.Utilities.CleanFileName(System.String)	"<param name=""filename""/>"
Method	"Drivers.Compiler.Utilities.ExecuteProcess(System.String,System.String,System.String,System.String,System.Boolean,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	<summary>
Method	"Drivers.Compiler.Utilities.ExecuteProcess(System.String,System.String,System.String,System.String,System.Boolean,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	<remarks>
Method	"Drivers.Compiler.Utilities.ExecuteProcess(System.String,System.String,System.String,System.String,System.Boolean,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	<returns>
Method	"Drivers.Compiler.Utilities.ExecuteProcess(System.String,System.String,System.String,System.String,System.Boolean,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""workingDir""/>"
Method	"Drivers.Compiler.Utilities.ExecuteProcess(System.String,System.String,System.String,System.String,System.Boolean,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""processFile""/>"
Method	"Drivers.Compiler.Utilities.ExecuteProcess(System.String,System.String,System.String,System.String,System.Boolean,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""args""/>"
Method	"Drivers.Compiler.Utilities.ExecuteProcess(System.String,System.String,System.String,System.String,System.Boolean,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""displayName""/>"
Method	"Drivers.Compiler.Utilities.ExecuteProcess(System.String,System.String,System.String,System.String,System.Boolean,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""ignoreErrors""/>"
Method	"Drivers.Compiler.Utilities.ExecuteProcess(System.String,System.String,System.String,System.String,System.Boolean,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""outputMessagesToFileName""/>"
Method	"Drivers.Compiler.Utilities.ExecuteProcess(System.String,System.String,System.String,System.String,System.Boolean,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""OnComplete""/>"
Method	"Drivers.Compiler.Utilities.ExecuteProcess(System.String,System.String,System.String,System.String,System.Boolean,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""state""/>"
Method	Drivers.Compiler.Utilities.FilterIdentifierForInvalidChars(System.String)	<summary>
Method	Drivers.Compiler.Utilities.FilterIdentifierForInvalidChars(System.String)	<remarks>
Method	Drivers.Compiler.Utilities.FilterIdentifierForInvalidChars(System.String)	<returns>
Method	Drivers.Compiler.Utilities.FilterIdentifierForInvalidChars(System.String)	"<param name=""x""/>"
Field	Drivers.Compiler.Utilities.IllegalIdentifierChars	<summary>
Field	Drivers.Compiler.Utilities.IllegalIdentifierChars	<remarks>
Method	Drivers.Compiler.Utilities.IsFloat(System.Type)	<summary>
Method	Drivers.Compiler.Utilities.IsFloat(System.Type)	<remarks>
Method	Drivers.Compiler.Utilities.IsFloat(System.Type)	<returns>
Method	Drivers.Compiler.Utilities.IsFloat(System.Type)	"<param name=""aType""/>"
Field	Drivers.Compiler.Utilities.OnCompleteCallbacks	<summary>
Field	Drivers.Compiler.Utilities.OnCompleteCallbacks	<remarks>
Field	Drivers.Compiler.Utilities.Processes	<summary>
Field	Drivers.Compiler.Utilities.Processes	<remarks>
Method	"Drivers.Compiler.Utilities.ReadFloat32(System.Byte[],System.Int32)"	<summary>
Method	"Drivers.Compiler.Utilities.ReadFloat32(System.Byte[],System.Int32)"	<remarks>
Method	"Drivers.Compiler.Utilities.ReadFloat32(System.Byte[],System.Int32)"	<returns>
Method	"Drivers.Compiler.Utilities.ReadFloat32(System.Byte[],System.Int32)"	"<param name=""bytes""/>"
Method	"Drivers.Compiler.Utilities.ReadFloat32(System.Byte[],System.Int32)"	"<param name=""offset""/>"
Method	"Drivers.Compiler.Utilities.ReadFloat64(System.Byte[],System.Int32)"	<summary>
Method	"Drivers.Compiler.Utilities.ReadFloat64(System.Byte[],System.Int32)"	<remarks>
Method	"Drivers.Compiler.Utilities.ReadFloat64(System.Byte[],System.Int32)"	<returns>
Method	"Drivers.Compiler.Utilities.ReadFloat64(System.Byte[],System.Int32)"	"<param name=""bytes""/>"
Method	"Drivers.Compiler.Utilities.ReadFloat64(System.Byte[],System.Int32)"	"<param name=""offset""/>"
Method	"Drivers.Compiler.Utilities.ReadInt16(System.Byte[],System.Int32)"	<summary>
Method	"Drivers.Compiler.Utilities.ReadInt16(System.Byte[],System.Int32)"	<remarks>
Method	"Drivers.Compiler.Utilities.ReadInt16(System.Byte[],System.Int32)"	<returns>
Method	"Drivers.Compiler.Utilities.ReadInt16(System.Byte[],System.Int32)"	"<param name=""bytes""/>"
Method	"Drivers.Compiler.Utilities.ReadInt16(System.Byte[],System.Int32)"	"<param name=""offset""/>"
Method	"Drivers.Compiler.Utilities.ReadInt32(System.Byte[],System.Int32)"	<summary>
Method	"Drivers.Compiler.Utilities.ReadInt32(System.Byte[],System.Int32)"	<remarks>
Method	"Drivers.Compiler.Utilities.ReadInt32(System.Byte[],System.Int32)"	<returns>
Method	"Drivers.Compiler.Utilities.ReadInt32(System.Byte[],System.Int32)"	"<param name=""bytes""/>"
Method	"Drivers.Compiler.Utilities.ReadInt32(System.Byte[],System.Int32)"	"<param name=""offset""/>"
Method	"Drivers.Compiler.Utilities.ReadInt64(System.Byte[],System.Int32)"	<summary>
Method	"Drivers.Compiler.Utilities.ReadInt64(System.Byte[],System.Int32)"	<remarks>
Method	"Drivers.Compiler.Utilities.ReadInt64(System.Byte[],System.Int32)"	<returns>
Method	"Drivers.Compiler.Utilities.ReadInt64(System.Byte[],System.Int32)"	"<param name=""bytes""/>"
Method	"Drivers.Compiler.Utilities.ReadInt64(System.Byte[],System.Int32)"	"<param name=""offset""/>"
Method	"Drivers.Compiler.Utilities.ReadUInt32(System.Byte[],System.Int32)"	<summary>
Method	"Drivers.Compiler.Utilities.ReadUInt32(System.Byte[],System.Int32)"	<remarks>
Method	"Drivers.Compiler.Utilities.ReadUInt32(System.Byte[],System.Int32)"	<returns>
Method	"Drivers.Compiler.Utilities.ReadUInt32(System.Byte[],System.Int32)"	"<param name=""bytes""/>"
Method	"Drivers.Compiler.Utilities.ReadUInt32(System.Byte[],System.Int32)"	"<param name=""offset""/>"
Type	Drivers.Compiler.VoidDelegate	<summary>
Type	Drivers.Compiler.VoidDelegate	<remarks>
Namespace	Drivers.Compiler.App	<summary>
Type	Drivers.Compiler.App.CompilerProcess	<summary>
Type	Drivers.Compiler.App.CompilerProcess	<remarks>
Method	Drivers.Compiler.App.CompilerProcess.#ctor	<remarks>
Method	"Drivers.Compiler.App.CompilerProcess.Execute(Drivers.Compiler.Logger.LogMessageEventHandler,Drivers.Compiler.Logger.LogWarningEventHandler,Drivers.Compiler.Logger.LogErrorEventHandler)"	<summary>
Method	"Drivers.Compiler.App.CompilerProcess.Execute(Drivers.Compiler.Logger.LogMessageEventHandler,Drivers.Compiler.Logger.LogWarningEventHandler,Drivers.Compiler.Logger.LogErrorEventHandler)"	<remarks>
Method	"Drivers.Compiler.App.CompilerProcess.Execute(Drivers.Compiler.Logger.LogMessageEventHandler,Drivers.Compiler.Logger.LogWarningEventHandler,Drivers.Compiler.Logger.LogErrorEventHandler)"	<returns>
Method	"Drivers.Compiler.App.CompilerProcess.Execute(Drivers.Compiler.Logger.LogMessageEventHandler,Drivers.Compiler.Logger.LogWarningEventHandler,Drivers.Compiler.Logger.LogErrorEventHandler)"	"<param name=""messageHandler""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Execute(Drivers.Compiler.Logger.LogMessageEventHandler,Drivers.Compiler.Logger.LogWarningEventHandler,Drivers.Compiler.Logger.LogErrorEventHandler)"	"<param name=""warningHandler""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Execute(Drivers.Compiler.Logger.LogMessageEventHandler,Drivers.Compiler.Logger.LogWarningEventHandler,Drivers.Compiler.Logger.LogErrorEventHandler)"	"<param name=""errorHandler""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogError(System.String,System.String,System.Int32,System.String)"	<summary>
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogError(System.String,System.String,System.Int32,System.String)"	<remarks>
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogError(System.String,System.String,System.Int32,System.String)"	"<param name=""errorCode""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogError(System.String,System.String,System.Int32,System.String)"	"<param name=""file""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogError(System.String,System.String,System.Int32,System.String)"	"<param name=""lineNumber""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogError(System.String,System.String,System.Int32,System.String)"	"<param name=""message""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogMessage(System.String,System.Int32,System.String)"	<summary>
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogMessage(System.String,System.Int32,System.String)"	<remarks>
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogMessage(System.String,System.Int32,System.String)"	"<param name=""file""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogMessage(System.String,System.Int32,System.String)"	"<param name=""lineNumber""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogMessage(System.String,System.Int32,System.String)"	"<param name=""message""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogWarning(System.String,System.String,System.Int32,System.String)"	<summary>
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogWarning(System.String,System.String,System.Int32,System.String)"	<remarks>
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogWarning(System.String,System.String,System.Int32,System.String)"	"<param name=""warningCode""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogWarning(System.String,System.String,System.Int32,System.String)"	"<param name=""file""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogWarning(System.String,System.String,System.Int32,System.String)"	"<param name=""lineNumber""/>"
Method	"Drivers.Compiler.App.CompilerProcess.Logger_OnLogWarning(System.String,System.String,System.Int32,System.String)"	"<param name=""message""/>"
Method	Drivers.Compiler.App.CompilerProcess.Main(System.String[])	<summary>
Method	Drivers.Compiler.App.CompilerProcess.Main(System.String[])	<remarks>
Method	Drivers.Compiler.App.CompilerProcess.Main(System.String[])	<returns>
Method	Drivers.Compiler.App.CompilerProcess.Main(System.String[])	"<param name=""args""/>"
Method	Drivers.Compiler.App.CompilerProcess.ValidateArguments(System.String[])	<summary>
Method	Drivers.Compiler.App.CompilerProcess.ValidateArguments(System.String[])	<remarks>
Method	Drivers.Compiler.App.CompilerProcess.ValidateArguments(System.String[])	<returns>
Method	Drivers.Compiler.App.CompilerProcess.ValidateArguments(System.String[])	"<param name=""args""/>"
Type	Drivers.Compiler.App.CompilerProcess.ErrorCode	<summary>
Type	Drivers.Compiler.App.CompilerProcess.ErrorCode	<remarks>
Namespace	Drivers.Compiler.Architectures.x86	<summary>
Type	Drivers.Compiler.Architectures.x86.Add	<summary>
Type	Drivers.Compiler.Architectures.x86.Add	<remarks>
Method	Drivers.Compiler.Architectures.x86.Add.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Add.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Add.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Add.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Add.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Add.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Add.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Add.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Add.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.And	<summary>
Type	Drivers.Compiler.Architectures.x86.And	<remarks>
Method	Drivers.Compiler.Architectures.x86.And.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.And.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.And.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.And.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.And.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.And.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.And.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.And.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.And.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Br	<summary>
Type	Drivers.Compiler.Architectures.x86.Br	<remarks>
Method	Drivers.Compiler.Architectures.x86.Br.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Br.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Br.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Br.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Br.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Br.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Br.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Br.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Br.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Br.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Br.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Br.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""preprocessState""/>"
Method	"Drivers.Compiler.Architectures.x86.Br.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Call	<summary>
Type	Drivers.Compiler.Architectures.x86.Call	<remarks>
Method	Drivers.Compiler.Architectures.x86.Call.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Call.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Call.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Call.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Call.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Call.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Call.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Call.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Call.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Callvirt	<summary>
Type	Drivers.Compiler.Architectures.x86.Callvirt	<remarks>
Method	Drivers.Compiler.Architectures.x86.Callvirt.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Callvirt.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Callvirt.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Callvirt.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Callvirt.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Callvirt.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Callvirt.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Callvirt.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Callvirt.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ceq	<summary>
Type	Drivers.Compiler.Architectures.x86.Ceq	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ceq.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ceq.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ceq.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ceq.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ceq.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ceq.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ceq.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ceq.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ceq.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Cgt	<summary>
Type	Drivers.Compiler.Architectures.x86.Cgt	<remarks>
Method	Drivers.Compiler.Architectures.x86.Cgt.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Cgt.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Cgt.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Cgt.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Cgt.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Cgt.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Cgt.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Cgt.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Cgt.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Clt	<summary>
Type	Drivers.Compiler.Architectures.x86.Clt	<remarks>
Method	Drivers.Compiler.Architectures.x86.Clt.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Clt.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Clt.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Clt.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Clt.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Clt.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Clt.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Clt.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Clt.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Convi	<summary>
Type	Drivers.Compiler.Architectures.x86.Convi	<remarks>
Method	Drivers.Compiler.Architectures.x86.Convi.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Convi.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Convi.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Convi.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Convi.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Convi.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Convi.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Convi.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Convi.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Convu	<summary>
Type	Drivers.Compiler.Architectures.x86.Convu	<remarks>
Method	Drivers.Compiler.Architectures.x86.Convu.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Convu.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Convu.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Convu.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Convu.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Convu.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Convu.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Convu.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Convu.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Div	<summary>
Type	Drivers.Compiler.Architectures.x86.Div	<remarks>
Method	Drivers.Compiler.Architectures.x86.Div.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Div.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Div.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Div.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Div.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Div.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Div.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Div.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Div.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Dup	<summary>
Type	Drivers.Compiler.Architectures.x86.Dup	<remarks>
Method	Drivers.Compiler.Architectures.x86.Dup.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Dup.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Dup.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Dup.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Dup.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Dup.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Dup.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Dup.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Dup.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.GlobalMethods	<summary>
Type	Drivers.Compiler.Architectures.x86.GlobalMethods	<remarks>
Method	Drivers.Compiler.Architectures.x86.GlobalMethods.#cctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.GlobalMethods.InsertPageFaultDetection(Drivers.Compiler.IL.ILConversionState,System.String,System.Int32,Drivers.Compiler.IL.ILOp.OpCodes)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.GlobalMethods.InsertPageFaultDetection(Drivers.Compiler.IL.ILConversionState,System.String,System.Int32,Drivers.Compiler.IL.ILOp.OpCodes)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.GlobalMethods.InsertPageFaultDetection(Drivers.Compiler.IL.ILConversionState,System.String,System.Int32,Drivers.Compiler.IL.ILOp.OpCodes)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.GlobalMethods.InsertPageFaultDetection(Drivers.Compiler.IL.ILConversionState,System.String,System.Int32,Drivers.Compiler.IL.ILOp.OpCodes)"	"<param name=""reg""/>"
Method	"Drivers.Compiler.Architectures.x86.GlobalMethods.InsertPageFaultDetection(Drivers.Compiler.IL.ILConversionState,System.String,System.Int32,Drivers.Compiler.IL.ILOp.OpCodes)"	"<param name=""offset""/>"
Method	"Drivers.Compiler.Architectures.x86.GlobalMethods.InsertPageFaultDetection(Drivers.Compiler.IL.ILConversionState,System.String,System.Int32,Drivers.Compiler.IL.ILOp.OpCodes)"	"<param name=""opCode""/>"
Field	Drivers.Compiler.Architectures.x86.GlobalMethods.PageFaultDetectionEnabled	<summary>
Field	Drivers.Compiler.Architectures.x86.GlobalMethods.PageFaultDetectionEnabled	<remarks>
Field	Drivers.Compiler.Architectures.x86.GlobalMethods.PageFaultDetectionMethod	<summary>
Field	Drivers.Compiler.Architectures.x86.GlobalMethods.PageFaultDetectionMethod	<remarks>
Type	Drivers.Compiler.Architectures.x86.Initobj	<summary>
Type	Drivers.Compiler.Architectures.x86.Initobj	<remarks>
Method	Drivers.Compiler.Architectures.x86.Initobj.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Initobj.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Initobj.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Initobj.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Initobj.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Initobj.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Initobj.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Initobj.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Initobj.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Isinst	<summary>
Type	Drivers.Compiler.Architectures.x86.Isinst	<remarks>
Method	Drivers.Compiler.Architectures.x86.Isinst.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Isinst.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Isinst.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Isinst.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Isinst.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Isinst.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Isinst.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Isinst.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Isinst.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldarg	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldarg	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldarg.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldarg.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldarg.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldarg.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldarg.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldarg.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldarg.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldarg.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldarg.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldc	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldc	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldc.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldc.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldc.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldc.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldc.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldc.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldc.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldc.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldc.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldelem	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldelem	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldelem.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldelem.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldelem.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldelem.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldelem.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldelem.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldelem.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldelem.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldelem.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldfld	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldfld	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldfld.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldftn	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldftn	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldftn.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldftn.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldftn.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldftn.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldftn.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldftn.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldftn.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldftn.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldftn.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldftn.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldftn.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldftn.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""preprocessState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldftn.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldind	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldind	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldind.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldind.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldind.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldind.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldind.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldind.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldind.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldind.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldind.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldlen	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldlen	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldlen.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldlen.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldlen.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldlen.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldlen.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldlen.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldlen.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldlen.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldlen.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldloc	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldloc	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldloc.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldloc.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldloc.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldloc.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldloc.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldloc.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldloc.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldloc.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldloc.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldnull	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldnull	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldnull.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldnull.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldnull.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldnull.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldnull.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldnull.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldnull.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldnull.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldnull.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldobj	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldobj	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldobj.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldobj.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldobj.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldobj.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldobj.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldobj.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldobj.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldobj.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldobj.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldsfld	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldsfld	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldsfld.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldsfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldsfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldsfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldsfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldsfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldsfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldsfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldsfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldstr	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldstr	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldstr.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldstr.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldstr.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldstr.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldstr.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldstr.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldstr.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldstr.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldstr.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ldtoken	<summary>
Type	Drivers.Compiler.Architectures.x86.Ldtoken	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ldtoken.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldtoken.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldtoken.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldtoken.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldtoken.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldtoken.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ldtoken.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ldtoken.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ldtoken.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.MethodEnd	<summary>
Type	Drivers.Compiler.Architectures.x86.MethodEnd	<remarks>
Method	Drivers.Compiler.Architectures.x86.MethodEnd.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.MethodEnd.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.MethodEnd.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.MethodEnd.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.MethodEnd.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.MethodEnd.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.MethodEnd.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.MethodEnd.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.MethodEnd.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.MethodStart	<summary>
Type	Drivers.Compiler.Architectures.x86.MethodStart	<remarks>
Method	Drivers.Compiler.Architectures.x86.MethodStart.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.MethodStart.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.MethodStart.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.MethodStart.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.MethodStart.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.MethodStart.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.MethodStart.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.MethodStart.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.MethodStart.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Mul	<summary>
Type	Drivers.Compiler.Architectures.x86.Mul	<remarks>
Method	Drivers.Compiler.Architectures.x86.Mul.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Mul.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Mul.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Mul.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Mul.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Mul.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Mul.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Mul.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Mul.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Neg	<summary>
Type	Drivers.Compiler.Architectures.x86.Neg	<remarks>
Method	Drivers.Compiler.Architectures.x86.Neg.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Neg.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Neg.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Neg.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Neg.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Neg.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Neg.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Neg.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Neg.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Newarr	<summary>
Type	Drivers.Compiler.Architectures.x86.Newarr	<remarks>
Method	Drivers.Compiler.Architectures.x86.Newarr.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Newarr.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Newarr.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Newarr.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Newarr.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Newarr.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Newarr.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Newarr.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Newarr.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Newobj	<summary>
Type	Drivers.Compiler.Architectures.x86.Newobj	<remarks>
Method	Drivers.Compiler.Architectures.x86.Newobj.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Newobj.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Newobj.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Newobj.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Newobj.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Newobj.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Newobj.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Newobj.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Newobj.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Nop	<summary>
Type	Drivers.Compiler.Architectures.x86.Nop	<remarks>
Method	Drivers.Compiler.Architectures.x86.Nop.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Nop.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Nop.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Nop.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Nop.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Nop.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Nop.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Nop.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Nop.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Not	<summary>
Type	Drivers.Compiler.Architectures.x86.Not	<remarks>
Method	Drivers.Compiler.Architectures.x86.Not.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Not.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Not.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Not.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Not.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Not.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Not.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Not.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Not.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Or	<summary>
Type	Drivers.Compiler.Architectures.x86.Or	<remarks>
Method	Drivers.Compiler.Architectures.x86.Or.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Or.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Or.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Or.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Or.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Or.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Or.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Or.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Or.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Pop	<summary>
Type	Drivers.Compiler.Architectures.x86.Pop	<remarks>
Method	Drivers.Compiler.Architectures.x86.Pop.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Pop.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Pop.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Pop.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Pop.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Pop.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Pop.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Pop.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Pop.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Rem	<summary>
Type	Drivers.Compiler.Architectures.x86.Rem	<remarks>
Method	Drivers.Compiler.Architectures.x86.Rem.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Rem.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Rem.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Rem.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Rem.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Rem.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Rem.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Rem.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Rem.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Ret	<summary>
Type	Drivers.Compiler.Architectures.x86.Ret	<remarks>
Method	Drivers.Compiler.Architectures.x86.Ret.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ret.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ret.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ret.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ret.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Ret.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Ret.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Ret.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Ret.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Shl	<summary>
Type	Drivers.Compiler.Architectures.x86.Shl	<remarks>
Method	Drivers.Compiler.Architectures.x86.Shl.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Shl.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Shl.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Shl.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Shl.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Shl.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Shl.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Shl.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Shl.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Shr	<summary>
Type	Drivers.Compiler.Architectures.x86.Shr	<remarks>
Method	Drivers.Compiler.Architectures.x86.Shr.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Shr.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Shr.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Shr.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Shr.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Shr.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Shr.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Shr.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Shr.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Sizeof	<summary>
Type	Drivers.Compiler.Architectures.x86.Sizeof	<remarks>
Method	Drivers.Compiler.Architectures.x86.Sizeof.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Sizeof.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Sizeof.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Sizeof.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Sizeof.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Sizeof.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Sizeof.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Sizeof.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Sizeof.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.StackSwitch	<summary>
Type	Drivers.Compiler.Architectures.x86.StackSwitch	<remarks>
Method	Drivers.Compiler.Architectures.x86.StackSwitch.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.rotateStackItems(Drivers.Compiler.IL.ILConversionState,System.Int32,System.Int32)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.rotateStackItems(Drivers.Compiler.IL.ILConversionState,System.Int32,System.Int32)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.rotateStackItems(Drivers.Compiler.IL.ILConversionState,System.Int32,System.Int32)"	"<param name=""state""/>"
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.rotateStackItems(Drivers.Compiler.IL.ILConversionState,System.Int32,System.Int32)"	"<param name=""items""/>"
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.rotateStackItems(Drivers.Compiler.IL.ILConversionState,System.Int32,System.Int32)"	"<param name=""distance""/>"
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.rotateStackItems(Drivers.Compiler.IL.ILPreprocessState,System.Int32,System.Int32)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.rotateStackItems(Drivers.Compiler.IL.ILPreprocessState,System.Int32,System.Int32)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.rotateStackItems(Drivers.Compiler.IL.ILPreprocessState,System.Int32,System.Int32)"	"<param name=""state""/>"
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.rotateStackItems(Drivers.Compiler.IL.ILPreprocessState,System.Int32,System.Int32)"	"<param name=""items""/>"
Method	"Drivers.Compiler.Architectures.x86.StackSwitch.rotateStackItems(Drivers.Compiler.IL.ILPreprocessState,System.Int32,System.Int32)"	"<param name=""distance""/>"
Type	Drivers.Compiler.Architectures.x86.Starg	<summary>
Type	Drivers.Compiler.Architectures.x86.Starg	<remarks>
Method	Drivers.Compiler.Architectures.x86.Starg.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Starg.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Starg.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Starg.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Starg.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Starg.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Starg.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Starg.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Starg.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Stelem	<summary>
Type	Drivers.Compiler.Architectures.x86.Stelem	<remarks>
Method	Drivers.Compiler.Architectures.x86.Stelem.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stelem.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Stelem.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stelem.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Stelem.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Stelem.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Stelem.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stelem.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Stelem.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Stfld	<summary>
Type	Drivers.Compiler.Architectures.x86.Stfld	<remarks>
Method	Drivers.Compiler.Architectures.x86.Stfld.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Stfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Stfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Stfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Stfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Stfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Stind	<summary>
Type	Drivers.Compiler.Architectures.x86.Stind	<remarks>
Method	Drivers.Compiler.Architectures.x86.Stind.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stind.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Stind.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stind.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Stind.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Stind.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Stind.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stind.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Stind.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Stloc	<summary>
Type	Drivers.Compiler.Architectures.x86.Stloc	<remarks>
Method	Drivers.Compiler.Architectures.x86.Stloc.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stloc.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Stloc.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stloc.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Stloc.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Stloc.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Stloc.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stloc.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Stloc.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Stsfld	<summary>
Type	Drivers.Compiler.Architectures.x86.Stsfld	<remarks>
Method	Drivers.Compiler.Architectures.x86.Stsfld.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stsfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Stsfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stsfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Stsfld.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Stsfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Stsfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Stsfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Stsfld.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Sub	<summary>
Type	Drivers.Compiler.Architectures.x86.Sub	<remarks>
Method	Drivers.Compiler.Architectures.x86.Sub.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Sub.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Sub.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Sub.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Sub.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Sub.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Sub.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Sub.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Sub.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Switch	<summary>
Type	Drivers.Compiler.Architectures.x86.Switch	<remarks>
Method	Drivers.Compiler.Architectures.x86.Switch.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Switch.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Switch.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Switch.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Switch.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Switch.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Switch.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Switch.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Switch.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Switch.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Switch.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Switch.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""preprocessState""/>"
Method	"Drivers.Compiler.Architectures.x86.Switch.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Type	Drivers.Compiler.Architectures.x86.Xor	<summary>
Type	Drivers.Compiler.Architectures.x86.Xor	<remarks>
Method	Drivers.Compiler.Architectures.x86.Xor.#ctor	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Xor.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Xor.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Xor.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Xor.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.Architectures.x86.Xor.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.Architectures.x86.Xor.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.Architectures.x86.Xor.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.Architectures.x86.Xor.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Namespace	Drivers.Compiler.Architectures.x86.ASMOps	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Add	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Add	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Add.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Add.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Add.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Add.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Add.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Add.Dest	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Add.Dest	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Add.Src	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Add.Src	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Add.WithCarry	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Add.WithCarry	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.And	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.And	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.And.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.And.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.And.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.And.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.And.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.And.Dest	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.And.Dest	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.And.Src	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.And.Src	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.ASMUtilities	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.ASMUtilities	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.ASMUtilities.GetOpSizeStr(Drivers.Compiler.Architectures.x86.ASMOps.OperandSize)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.ASMUtilities.GetOpSizeStr(Drivers.Compiler.Architectures.x86.ASMOps.OperandSize)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.ASMUtilities.GetOpSizeStr(Drivers.Compiler.Architectures.x86.ASMOps.OperandSize)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.ASMUtilities.GetOpSizeStr(Drivers.Compiler.Architectures.x86.ASMOps.OperandSize)	"<param name=""Size""/>"
Type	Drivers.Compiler.Architectures.x86.ASMOps.Call	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Call	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Call.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Call.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Call.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Call.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Call.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Call.Target	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Call.Target	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Cdq	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Cdq	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cdq.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cdq.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cdq.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cdq.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cdq.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Type	Drivers.Compiler.Architectures.x86.ASMOps.Cmp	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Cmp	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cmp.#ctor	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Cmp.Arg1	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Cmp.Arg1	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Cmp.Arg2	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Cmp.Arg2	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cmp.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cmp.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cmp.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cmp.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Type	Drivers.Compiler.Architectures.x86.ASMOps.Comment	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Comment	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Comment.#ctor	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Cwde	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Cwde	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cwde.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cwde.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cwde.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cwde.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Cwde.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Type	Drivers.Compiler.Architectures.x86.ASMOps.Div	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Div	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Div.#ctor	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Div.Arg	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Div.Arg	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Div.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Div.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Div.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Div.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Div.Signed	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Div.Signed	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Int	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Int	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Int.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Int.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Int.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Int.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Int.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Int.IntNum	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Int.IntNum	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Jmp	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Jmp	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.DestILPosition	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.DestILPosition	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.Extension	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.Extension	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.JumpType	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.JumpType	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.UnsignedTest	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Jmp.UnsignedTest	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.JmpOp	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.JmpOp	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Label	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Label	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Label.#ctor	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Loop	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Loop	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Loop.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Loop.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Loop.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Loop.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Loop.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Loop.Extension	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Loop.Extension	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Loop.ILPosition	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Loop.ILPosition	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Mov	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Mov	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Mov.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Mov.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Mov.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Mov.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Mov.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mov.Dest	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mov.Dest	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mov.Size	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mov.Size	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mov.Src	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mov.Src	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Mul	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Mul	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Mul.#ctor	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mul.Arg	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mul.Arg	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mul.Aux	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mul.Aux	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Mul.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Mul.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Mul.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Mul.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mul.Signed	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mul.Signed	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mul.Src	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Mul.Src	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Neg	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Neg	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Neg.#ctor	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Neg.Arg	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Neg.Arg	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Neg.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Neg.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Neg.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Neg.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Type	Drivers.Compiler.Architectures.x86.ASMOps.Nop	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Nop	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Nop.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Nop.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Nop.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Nop.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Nop.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Type	Drivers.Compiler.Architectures.x86.ASMOps.Not	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Not	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Not.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Not.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Not.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Not.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Not.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Not.Dest	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Not.Dest	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.OperandSize	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.OperandSize	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Or	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Or	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Or.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Or.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Or.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Or.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Or.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Or.Dest	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Or.Dest	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Or.Src	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Or.Src	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Pop	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Pop	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Pop.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Pop.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Pop.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Pop.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Pop.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Pop.Dest	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Pop.Dest	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Pop.Size	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Pop.Size	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Push	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Push	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Push.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Push.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Push.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Push.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Push.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Push.Size	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Push.Size	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Push.Src	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Push.Src	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Ret	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Ret	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Ret.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Ret.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Ret.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Ret.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Ret.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Type	Drivers.Compiler.Architectures.x86.ASMOps.Shl	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Shl	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Shl.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Shl.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Shl.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Shl.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Shl.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shl.Count	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shl.Count	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shl.Dest	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shl.Dest	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shl.Src	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shl.Src	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Shr	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Shr	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Shr.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Shr.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Shr.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Shr.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Shr.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shr.Count	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shr.Count	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shr.Dest	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shr.Dest	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shr.Signed	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shr.Signed	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shr.Src	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Shr.Src	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Sub	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Sub	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Sub.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Sub.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Sub.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Sub.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Sub.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Sub.Dest	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Sub.Dest	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Sub.Src	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Sub.Src	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Sub.WithBorrow	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Sub.WithBorrow	<remarks>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Test	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Test	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Test.#ctor	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Test.Arg1	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Test.Arg1	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Test.Arg2	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Test.Arg2	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Test.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Test.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Test.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Test.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Type	Drivers.Compiler.Architectures.x86.ASMOps.Xor	<summary>
Type	Drivers.Compiler.Architectures.x86.ASMOps.Xor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Xor.#ctor	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Xor.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Xor.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Xor.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.Architectures.x86.ASMOps.Xor.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.Architectures.x86.ASMOps.Xor.Dest	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Xor.Dest	<remarks>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Xor.Src	<summary>
Field	Drivers.Compiler.Architectures.x86.ASMOps.Xor.Src	<remarks>
Namespace	Drivers.Compiler.ASM	<summary>
Type	Drivers.Compiler.ASM.ASMBlock	<summary>
Type	Drivers.Compiler.ASM.ASMBlock	<remarks>
Method	Drivers.Compiler.ASM.ASMBlock.#ctor	<remarks>
Method	Drivers.Compiler.ASM.ASMBlock.AddExternalLabel(System.String)	<summary>
Method	Drivers.Compiler.ASM.ASMBlock.AddExternalLabel(System.String)	<remarks>
Method	Drivers.Compiler.ASM.ASMBlock.AddExternalLabel(System.String)	"<param name=""label""/>"
Method	Drivers.Compiler.ASM.ASMBlock.AddGlobalLabel(System.String)	<summary>
Method	Drivers.Compiler.ASM.ASMBlock.AddGlobalLabel(System.String)	<remarks>
Method	Drivers.Compiler.ASM.ASMBlock.AddGlobalLabel(System.String)	"<param name=""label""/>"
Method	Drivers.Compiler.ASM.ASMBlock.Append(Drivers.Compiler.ASM.ASMOp)	<summary>
Method	Drivers.Compiler.ASM.ASMBlock.Append(Drivers.Compiler.ASM.ASMOp)	<remarks>
Method	Drivers.Compiler.ASM.ASMBlock.Append(Drivers.Compiler.ASM.ASMOp)	"<param name=""anOp""/>"
Field	Drivers.Compiler.ASM.ASMBlock.ASMOps	<summary>
Field	Drivers.Compiler.ASM.ASMBlock.ASMOps	<remarks>
Field	Drivers.Compiler.ASM.ASMBlock.ExternalLabels	<summary>
Field	Drivers.Compiler.ASM.ASMBlock.ExternalLabels	<remarks>
Method	"Drivers.Compiler.ASM.ASMBlock.GenerateILOpLabel(System.Int32,System.String)"	<summary>
Method	"Drivers.Compiler.ASM.ASMBlock.GenerateILOpLabel(System.Int32,System.String)"	<remarks>
Method	"Drivers.Compiler.ASM.ASMBlock.GenerateILOpLabel(System.Int32,System.String)"	<returns>
Method	"Drivers.Compiler.ASM.ASMBlock.GenerateILOpLabel(System.Int32,System.String)"	"<param name=""ILPosition""/>"
Method	"Drivers.Compiler.ASM.ASMBlock.GenerateILOpLabel(System.Int32,System.String)"	"<param name=""Extension""/>"
Method	"Drivers.Compiler.ASM.ASMBlock.GenerateLabel(System.String,System.Int32,System.String)"	<summary>
Method	"Drivers.Compiler.ASM.ASMBlock.GenerateLabel(System.String,System.Int32,System.String)"	<remarks>
Method	"Drivers.Compiler.ASM.ASMBlock.GenerateLabel(System.String,System.Int32,System.String)"	<returns>
Method	"Drivers.Compiler.ASM.ASMBlock.GenerateLabel(System.String,System.Int32,System.String)"	"<param name=""MethodID""/>"
Method	"Drivers.Compiler.ASM.ASMBlock.GenerateLabel(System.String,System.Int32,System.String)"	"<param name=""ILPosition""/>"
Method	"Drivers.Compiler.ASM.ASMBlock.GenerateLabel(System.String,System.Int32,System.String)"	"<param name=""Extension""/>"
Method	Drivers.Compiler.ASM.ASMBlock.GenerateMethodLabel	<summary>
Method	Drivers.Compiler.ASM.ASMBlock.GenerateMethodLabel	<remarks>
Method	Drivers.Compiler.ASM.ASMBlock.GenerateMethodLabel	<returns>
Field	Drivers.Compiler.ASM.ASMBlock.GlobalLabels	<summary>
Field	Drivers.Compiler.ASM.ASMBlock.GlobalLabels	<remarks>
Field	Drivers.Compiler.ASM.ASMBlock.OriginMethodInfo	<summary>
Field	Drivers.Compiler.ASM.ASMBlock.OriginMethodInfo	<remarks>
Field	Drivers.Compiler.ASM.ASMBlock.OutputFilePath	<summary>
Field	Drivers.Compiler.ASM.ASMBlock.OutputFilePath	<remarks>
Property	Drivers.Compiler.ASM.ASMBlock.Plugged	<summary>
Property	Drivers.Compiler.ASM.ASMBlock.Plugged	<remarks>
Property	Drivers.Compiler.ASM.ASMBlock.Plugged	<value>
Field	Drivers.Compiler.ASM.ASMBlock.PlugPath	<summary>
Field	Drivers.Compiler.ASM.ASMBlock.PlugPath	<remarks>
Field	Drivers.Compiler.ASM.ASMBlock.Priority	<summary>
Field	Drivers.Compiler.ASM.ASMBlock.Priority	<remarks>
Type	Drivers.Compiler.ASM.ASMComment	<summary>
Type	Drivers.Compiler.ASM.ASMComment	<remarks>
Method	Drivers.Compiler.ASM.ASMComment.#ctor	<remarks>
Method	Drivers.Compiler.ASM.ASMComment.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.ASM.ASMComment.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.ASM.ASMComment.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.ASM.ASMComment.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.ASM.ASMComment.Text	<summary>
Field	Drivers.Compiler.ASM.ASMComment.Text	<remarks>
Type	Drivers.Compiler.ASM.ASMCompiler	<summary>
Type	Drivers.Compiler.ASM.ASMCompiler	<remarks>
Method	Drivers.Compiler.ASM.ASMCompiler.Compile(Drivers.Compiler.IL.ILLibrary)	<summary>
Method	Drivers.Compiler.ASM.ASMCompiler.Compile(Drivers.Compiler.IL.ILLibrary)	<remarks>
Method	Drivers.Compiler.ASM.ASMCompiler.Compile(Drivers.Compiler.IL.ILLibrary)	<returns>
Method	Drivers.Compiler.ASM.ASMCompiler.Compile(Drivers.Compiler.IL.ILLibrary)	"<param name=""TheILLibrary""/>"
Method	Drivers.Compiler.ASM.ASMCompiler.ExecuteASMPreprocessor(Drivers.Compiler.ASM.ASMLibrary)	<summary>
Method	Drivers.Compiler.ASM.ASMCompiler.ExecuteASMPreprocessor(Drivers.Compiler.ASM.ASMLibrary)	<remarks>
Method	Drivers.Compiler.ASM.ASMCompiler.ExecuteASMPreprocessor(Drivers.Compiler.ASM.ASMLibrary)	<returns>
Method	Drivers.Compiler.ASM.ASMCompiler.ExecuteASMPreprocessor(Drivers.Compiler.ASM.ASMLibrary)	"<param name=""TheLibrary""/>"
Method	Drivers.Compiler.ASM.ASMCompiler.ExecuteASMProcessor(Drivers.Compiler.ASM.ASMLibrary)	<summary>
Method	Drivers.Compiler.ASM.ASMCompiler.ExecuteASMProcessor(Drivers.Compiler.ASM.ASMLibrary)	<remarks>
Method	Drivers.Compiler.ASM.ASMCompiler.ExecuteASMProcessor(Drivers.Compiler.ASM.ASMLibrary)	<returns>
Method	Drivers.Compiler.ASM.ASMCompiler.ExecuteASMProcessor(Drivers.Compiler.ASM.ASMLibrary)	"<param name=""TheLibrary""/>"
Type	Drivers.Compiler.ASM.ASMExternalLabel	<summary>
Type	Drivers.Compiler.ASM.ASMExternalLabel	<remarks>
Method	Drivers.Compiler.ASM.ASMExternalLabel.#ctor	<remarks>
Method	Drivers.Compiler.ASM.ASMExternalLabel.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.ASM.ASMExternalLabel.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.ASM.ASMExternalLabel.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.ASM.ASMExternalLabel.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Method	Drivers.Compiler.ASM.ASMExternalLabel.Equals(System.Object)	<summary>
Method	Drivers.Compiler.ASM.ASMExternalLabel.Equals(System.Object)	<remarks>
Method	Drivers.Compiler.ASM.ASMExternalLabel.Equals(System.Object)	<returns>
Method	Drivers.Compiler.ASM.ASMExternalLabel.Equals(System.Object)	"<param name=""obj""/>"
Method	Drivers.Compiler.ASM.ASMExternalLabel.GetHashCode	<summary>
Method	Drivers.Compiler.ASM.ASMExternalLabel.GetHashCode	<remarks>
Method	Drivers.Compiler.ASM.ASMExternalLabel.GetHashCode	<returns>
Field	Drivers.Compiler.ASM.ASMExternalLabel.Label	<summary>
Field	Drivers.Compiler.ASM.ASMExternalLabel.Label	<remarks>
Type	Drivers.Compiler.ASM.ASMGeneric	<summary>
Type	Drivers.Compiler.ASM.ASMGeneric	<remarks>
Method	Drivers.Compiler.ASM.ASMGeneric.#ctor	<remarks>
Method	Drivers.Compiler.ASM.ASMGeneric.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.ASM.ASMGeneric.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.ASM.ASMGeneric.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.ASM.ASMGeneric.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.ASM.ASMGeneric.Text	<summary>
Field	Drivers.Compiler.ASM.ASMGeneric.Text	<remarks>
Type	Drivers.Compiler.ASM.ASMGlobalLabel	<summary>
Type	Drivers.Compiler.ASM.ASMGlobalLabel	<remarks>
Method	Drivers.Compiler.ASM.ASMGlobalLabel.#ctor	<remarks>
Method	Drivers.Compiler.ASM.ASMGlobalLabel.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.ASM.ASMGlobalLabel.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.ASM.ASMGlobalLabel.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.ASM.ASMGlobalLabel.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Method	Drivers.Compiler.ASM.ASMGlobalLabel.Equals(System.Object)	<summary>
Method	Drivers.Compiler.ASM.ASMGlobalLabel.Equals(System.Object)	<remarks>
Method	Drivers.Compiler.ASM.ASMGlobalLabel.Equals(System.Object)	<returns>
Method	Drivers.Compiler.ASM.ASMGlobalLabel.Equals(System.Object)	"<param name=""obj""/>"
Method	Drivers.Compiler.ASM.ASMGlobalLabel.GetHashCode	<summary>
Method	Drivers.Compiler.ASM.ASMGlobalLabel.GetHashCode	<remarks>
Method	Drivers.Compiler.ASM.ASMGlobalLabel.GetHashCode	<returns>
Field	Drivers.Compiler.ASM.ASMGlobalLabel.Label	<summary>
Field	Drivers.Compiler.ASM.ASMGlobalLabel.Label	<remarks>
Field	Drivers.Compiler.ASM.ASMGlobalLabel.LabelType	<summary>
Field	Drivers.Compiler.ASM.ASMGlobalLabel.LabelType	<remarks>
Type	Drivers.Compiler.ASM.ASMLabel	<summary>
Type	Drivers.Compiler.ASM.ASMLabel	<remarks>
Method	Drivers.Compiler.ASM.ASMLabel.#ctor	<remarks>
Method	Drivers.Compiler.ASM.ASMLabel.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.ASM.ASMLabel.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.ASM.ASMLabel.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.ASM.ASMLabel.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.ASM.ASMLabel.Extension	<summary>
Field	Drivers.Compiler.ASM.ASMLabel.Extension	<remarks>
Field	Drivers.Compiler.ASM.ASMLabel.ILPosition	<summary>
Field	Drivers.Compiler.ASM.ASMLabel.ILPosition	<remarks>
Field	Drivers.Compiler.ASM.ASMLabel.MethodLabel	<summary>
Field	Drivers.Compiler.ASM.ASMLabel.MethodLabel	<remarks>
Type	Drivers.Compiler.ASM.ASMLibrary	<summary>
Type	Drivers.Compiler.ASM.ASMLibrary	<remarks>
Method	Drivers.Compiler.ASM.ASMLibrary.#ctor	<remarks>
Field	Drivers.Compiler.ASM.ASMLibrary.ASMBlocks	<summary>
Field	Drivers.Compiler.ASM.ASMLibrary.ASMBlocks	<remarks>
Field	Drivers.Compiler.ASM.ASMLibrary.ASMPreprocessed	<summary>
Field	Drivers.Compiler.ASM.ASMLibrary.ASMPreprocessed	<remarks>
Field	Drivers.Compiler.ASM.ASMLibrary.ASMProcessed	<summary>
Field	Drivers.Compiler.ASM.ASMLibrary.ASMProcessed	<remarks>
Type	Drivers.Compiler.ASM.ASMOp	<summary>
Type	Drivers.Compiler.ASM.ASMOp	<remarks>
Method	Drivers.Compiler.ASM.ASMOp.#ctor	<remarks>
Method	Drivers.Compiler.ASM.ASMOp.Convert(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.ASM.ASMOp.Convert(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.ASM.ASMOp.Convert(Drivers.Compiler.ASM.ASMBlock)	<returns>
Method	Drivers.Compiler.ASM.ASMOp.Convert(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Field	Drivers.Compiler.ASM.ASMOp.ILLabelPosition	<summary>
Field	Drivers.Compiler.ASM.ASMOp.ILLabelPosition	<remarks>
Field	Drivers.Compiler.ASM.ASMOp.RequiresILLabel	<summary>
Field	Drivers.Compiler.ASM.ASMOp.RequiresILLabel	<remarks>
Type	Drivers.Compiler.ASM.ASMPreprocessor	<summary>
Type	Drivers.Compiler.ASM.ASMPreprocessor	<remarks>
Method	Drivers.Compiler.ASM.ASMPreprocessor.Preprocess(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.ASM.ASMPreprocessor.Preprocess(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.ASM.ASMPreprocessor.Preprocess(Drivers.Compiler.ASM.ASMBlock)	"<param name=""theBlock""/>"
Method	Drivers.Compiler.ASM.ASMPreprocessor.Preprocess(Drivers.Compiler.ASM.ASMLibrary)	<summary>
Method	Drivers.Compiler.ASM.ASMPreprocessor.Preprocess(Drivers.Compiler.ASM.ASMLibrary)	<remarks>
Method	Drivers.Compiler.ASM.ASMPreprocessor.Preprocess(Drivers.Compiler.ASM.ASMLibrary)	<returns>
Method	Drivers.Compiler.ASM.ASMPreprocessor.Preprocess(Drivers.Compiler.ASM.ASMLibrary)	"<param name=""TheLibrary""/>"
Type	Drivers.Compiler.ASM.ASMProcessor	<summary>
Type	Drivers.Compiler.ASM.ASMProcessor	<remarks>
Method	Drivers.Compiler.ASM.ASMProcessor.#cctor	<remarks>
Field	Drivers.Compiler.ASM.ASMProcessor.CleanedASMOutputFolder	<summary>
Field	Drivers.Compiler.ASM.ASMProcessor.CleanedASMOutputFolder	<remarks>
Field	Drivers.Compiler.ASM.ASMProcessor.CleanedObjectsOutputFolder	<summary>
Field	Drivers.Compiler.ASM.ASMProcessor.CleanedObjectsOutputFolder	<remarks>
Method	"Drivers.Compiler.ASM.ASMProcessor.ExecuteNASM(System.String,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	<summary>
Method	"Drivers.Compiler.ASM.ASMProcessor.ExecuteNASM(System.String,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	<remarks>
Method	"Drivers.Compiler.ASM.ASMProcessor.ExecuteNASM(System.String,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	<returns>
Method	"Drivers.Compiler.ASM.ASMProcessor.ExecuteNASM(System.String,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""inputFilePath""/>"
Method	"Drivers.Compiler.ASM.ASMProcessor.ExecuteNASM(System.String,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""outputFilePath""/>"
Method	"Drivers.Compiler.ASM.ASMProcessor.ExecuteNASM(System.String,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""OnComplete""/>"
Method	"Drivers.Compiler.ASM.ASMProcessor.ExecuteNASM(System.String,System.String,Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""state""/>"
Method	"Drivers.Compiler.ASM.ASMProcessor.ExecuteNASMAsync(System.Collections.Generic.List{Drivers.Compiler.ASM.ASMBlock},Drivers.Compiler.VoidDelegate,System.Object)"	<summary>
Method	"Drivers.Compiler.ASM.ASMProcessor.ExecuteNASMAsync(System.Collections.Generic.List{Drivers.Compiler.ASM.ASMBlock},Drivers.Compiler.VoidDelegate,System.Object)"	<remarks>
Method	"Drivers.Compiler.ASM.ASMProcessor.ExecuteNASMAsync(System.Collections.Generic.List{Drivers.Compiler.ASM.ASMBlock},Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""Blocks""/>"
Method	"Drivers.Compiler.ASM.ASMProcessor.ExecuteNASMAsync(System.Collections.Generic.List{Drivers.Compiler.ASM.ASMBlock},Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""OnComplete""/>"
Method	"Drivers.Compiler.ASM.ASMProcessor.ExecuteNASMAsync(System.Collections.Generic.List{Drivers.Compiler.ASM.ASMBlock},Drivers.Compiler.VoidDelegate,System.Object)"	"<param name=""aState""/>"
Method	Drivers.Compiler.ASM.ASMProcessor.ExecuteNASMSync(System.Collections.Generic.List{Drivers.Compiler.ASM.ASMBlock})	<summary>
Method	Drivers.Compiler.ASM.ASMProcessor.ExecuteNASMSync(System.Collections.Generic.List{Drivers.Compiler.ASM.ASMBlock})	<remarks>
Method	Drivers.Compiler.ASM.ASMProcessor.ExecuteNASMSync(System.Collections.Generic.List{Drivers.Compiler.ASM.ASMBlock})	"<param name=""Blocks""/>"
Method	Drivers.Compiler.ASM.ASMProcessor.GetASMOutputPath	<summary>
Method	Drivers.Compiler.ASM.ASMProcessor.GetASMOutputPath	<remarks>
Method	Drivers.Compiler.ASM.ASMProcessor.GetASMOutputPath	<returns>
Method	Drivers.Compiler.ASM.ASMProcessor.GetObjectsOutputPath	<summary>
Method	Drivers.Compiler.ASM.ASMProcessor.GetObjectsOutputPath	<remarks>
Method	Drivers.Compiler.ASM.ASMProcessor.GetObjectsOutputPath	<returns>
Method	Drivers.Compiler.ASM.ASMProcessor.Process(Drivers.Compiler.ASM.ASMLibrary)	<summary>
Method	Drivers.Compiler.ASM.ASMProcessor.Process(Drivers.Compiler.ASM.ASMLibrary)	<remarks>
Method	Drivers.Compiler.ASM.ASMProcessor.Process(Drivers.Compiler.ASM.ASMLibrary)	<returns>
Method	Drivers.Compiler.ASM.ASMProcessor.Process(Drivers.Compiler.ASM.ASMLibrary)	"<param name=""TheLibrary""/>"
Method	Drivers.Compiler.ASM.ASMProcessor.ProcessBlock(Drivers.Compiler.ASM.ASMBlock)	<summary>
Method	Drivers.Compiler.ASM.ASMProcessor.ProcessBlock(Drivers.Compiler.ASM.ASMBlock)	<remarks>
Method	Drivers.Compiler.ASM.ASMProcessor.ProcessBlock(Drivers.Compiler.ASM.ASMBlock)	"<param name=""TheBlock""/>"
Namespace	Drivers.Compiler.Attributes	<summary>
Type	Drivers.Compiler.Attributes.AddExceptionHandlerInfoMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.AddExceptionHandlerInfoMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.AddExceptionHandlerInfoMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.ArrayClassAttribute	<summary>
Type	Drivers.Compiler.Attributes.ArrayClassAttribute	<remarks>
Method	Drivers.Compiler.Attributes.ArrayClassAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.CallStaticConstructorsMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.CallStaticConstructorsMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.CallStaticConstructorsMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.DecrementRefCountMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.DecrementRefCountMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.DecrementRefCountMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.ExceptionsHandleEndFinallyMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.ExceptionsHandleEndFinallyMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.ExceptionsHandleEndFinallyMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.ExceptionsHandleLeaveMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.ExceptionsHandleLeaveMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.ExceptionsHandleLeaveMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.FieldInfoStructAttribute	<summary>
Type	Drivers.Compiler.Attributes.FieldInfoStructAttribute	<remarks>
Method	Drivers.Compiler.Attributes.FieldInfoStructAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.HaltMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.HaltMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.HaltMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.HandleExceptionMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.HandleExceptionMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.HandleExceptionMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.IncrementRefCountMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.IncrementRefCountMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.IncrementRefCountMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.MainMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.MainMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.MainMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.MethodInfoStructAttribute	<summary>
Type	Drivers.Compiler.Attributes.MethodInfoStructAttribute	<remarks>
Method	Drivers.Compiler.Attributes.MethodInfoStructAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.NewArrMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.NewArrMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.NewArrMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.NewObjMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.NewObjMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.NewObjMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.NoDebugAttribute	<summary>
Type	Drivers.Compiler.Attributes.NoDebugAttribute	<remarks>
Method	Drivers.Compiler.Attributes.NoDebugAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.NoGCAttribute	<summary>
Type	Drivers.Compiler.Attributes.NoGCAttribute	<remarks>
Method	Drivers.Compiler.Attributes.NoGCAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.PluggedClassAttribute	<summary>
Type	Drivers.Compiler.Attributes.PluggedClassAttribute	<remarks>
Method	Drivers.Compiler.Attributes.PluggedClassAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.PluggedMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.PluggedMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.PluggedMethodAttribute.#ctor	<remarks>
Property	Drivers.Compiler.Attributes.PluggedMethodAttribute.ASMFilePath	<summary>
Property	Drivers.Compiler.Attributes.PluggedMethodAttribute.ASMFilePath	<remarks>
Property	Drivers.Compiler.Attributes.PluggedMethodAttribute.ASMFilePath	<value>
Type	Drivers.Compiler.Attributes.SequencePriorityAttribute	<summary>
Type	Drivers.Compiler.Attributes.SequencePriorityAttribute	<remarks>
Method	Drivers.Compiler.Attributes.SequencePriorityAttribute.#ctor	<remarks>
Property	Drivers.Compiler.Attributes.SequencePriorityAttribute.Priority	<summary>
Property	Drivers.Compiler.Attributes.SequencePriorityAttribute.Priority	<remarks>
Property	Drivers.Compiler.Attributes.SequencePriorityAttribute.Priority	<value>
Type	Drivers.Compiler.Attributes.StringClassAttribute	<summary>
Type	Drivers.Compiler.Attributes.StringClassAttribute	<remarks>
Method	Drivers.Compiler.Attributes.StringClassAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.ThrowIndexOutOfRangeExceptionMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.ThrowIndexOutOfRangeExceptionMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.ThrowIndexOutOfRangeExceptionMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.ThrowNullReferenceExceptionMethodAttribute	<summary>
Type	Drivers.Compiler.Attributes.ThrowNullReferenceExceptionMethodAttribute	<remarks>
Method	Drivers.Compiler.Attributes.ThrowNullReferenceExceptionMethodAttribute.#ctor	<remarks>
Type	Drivers.Compiler.Attributes.TypeClassAttribute	<summary>
Type	Drivers.Compiler.Attributes.TypeClassAttribute	<remarks>
Method	Drivers.Compiler.Attributes.TypeClassAttribute.#ctor	<remarks>
Namespace	Drivers.Compiler.IL	<summary>
Type	Drivers.Compiler.IL.CatchBlock	<summary>
Type	Drivers.Compiler.IL.CatchBlock	<remarks>
Method	Drivers.Compiler.IL.CatchBlock.#ctor	<remarks>
Field	Drivers.Compiler.IL.CatchBlock.FilterType	<summary>
Field	Drivers.Compiler.IL.CatchBlock.FilterType	<remarks>
Field	Drivers.Compiler.IL.CatchBlock.Length	<summary>
Field	Drivers.Compiler.IL.CatchBlock.Length	<remarks>
Field	Drivers.Compiler.IL.CatchBlock.Offset	<summary>
Field	Drivers.Compiler.IL.CatchBlock.Offset	<remarks>
Type	Drivers.Compiler.IL.ExceptionHandledBlock	<summary>
Type	Drivers.Compiler.IL.ExceptionHandledBlock	<remarks>
Method	Drivers.Compiler.IL.ExceptionHandledBlock.#ctor	<remarks>
Field	Drivers.Compiler.IL.ExceptionHandledBlock.CatchBlocks	<summary>
Field	Drivers.Compiler.IL.ExceptionHandledBlock.CatchBlocks	<remarks>
Field	Drivers.Compiler.IL.ExceptionHandledBlock.FinallyBlocks	<summary>
Field	Drivers.Compiler.IL.ExceptionHandledBlock.FinallyBlocks	<remarks>
Field	Drivers.Compiler.IL.ExceptionHandledBlock.Length	<summary>
Field	Drivers.Compiler.IL.ExceptionHandledBlock.Length	<remarks>
Field	Drivers.Compiler.IL.ExceptionHandledBlock.Offset	<summary>
Field	Drivers.Compiler.IL.ExceptionHandledBlock.Offset	<remarks>
Type	Drivers.Compiler.IL.FinallyBlock	<summary>
Type	Drivers.Compiler.IL.FinallyBlock	<remarks>
Method	Drivers.Compiler.IL.FinallyBlock.#ctor	<remarks>
Field	Drivers.Compiler.IL.FinallyBlock.Length	<summary>
Field	Drivers.Compiler.IL.FinallyBlock.Length	<remarks>
Field	Drivers.Compiler.IL.FinallyBlock.Offset	<summary>
Field	Drivers.Compiler.IL.FinallyBlock.Offset	<remarks>
Type	Drivers.Compiler.IL.ILBlock	<summary>
Type	Drivers.Compiler.IL.ILBlock	<remarks>
Method	Drivers.Compiler.IL.ILBlock.#ctor	<remarks>
Method	Drivers.Compiler.IL.ILBlock.At(System.Int32)	<summary>
Method	Drivers.Compiler.IL.ILBlock.At(System.Int32)	<remarks>
Method	Drivers.Compiler.IL.ILBlock.At(System.Int32)	<returns>
Method	Drivers.Compiler.IL.ILBlock.At(System.Int32)	"<param name=""offset""/>"
Field	Drivers.Compiler.IL.ILBlock.ExceptionHandledBlocks	<summary>
Field	Drivers.Compiler.IL.ILBlock.ExceptionHandledBlocks	<remarks>
Method	Drivers.Compiler.IL.ILBlock.GetExactExceptionHandledBlock(System.Int32)	<summary>
Method	Drivers.Compiler.IL.ILBlock.GetExactExceptionHandledBlock(System.Int32)	<remarks>
Method	Drivers.Compiler.IL.ILBlock.GetExactExceptionHandledBlock(System.Int32)	<returns>
Method	Drivers.Compiler.IL.ILBlock.GetExactExceptionHandledBlock(System.Int32)	"<param name=""Offset""/>"
Method	Drivers.Compiler.IL.ILBlock.GetExceptionHandledBlock(System.Int32)	<summary>
Method	Drivers.Compiler.IL.ILBlock.GetExceptionHandledBlock(System.Int32)	<remarks>
Method	Drivers.Compiler.IL.ILBlock.GetExceptionHandledBlock(System.Int32)	<returns>
Method	Drivers.Compiler.IL.ILBlock.GetExceptionHandledBlock(System.Int32)	"<param name=""Offset""/>"
Field	Drivers.Compiler.IL.ILBlock.ILOps	<summary>
Field	Drivers.Compiler.IL.ILBlock.ILOps	<remarks>
Property	Drivers.Compiler.IL.ILBlock.Plugged	<summary>
Property	Drivers.Compiler.IL.ILBlock.Plugged	<remarks>
Property	Drivers.Compiler.IL.ILBlock.Plugged	<value>
Field	Drivers.Compiler.IL.ILBlock.PlugPath	<summary>
Field	Drivers.Compiler.IL.ILBlock.PlugPath	<remarks>
Method	Drivers.Compiler.IL.ILBlock.PositionOf(Drivers.Compiler.IL.ILOp)	<summary>
Method	Drivers.Compiler.IL.ILBlock.PositionOf(Drivers.Compiler.IL.ILOp)	<remarks>
Method	Drivers.Compiler.IL.ILBlock.PositionOf(Drivers.Compiler.IL.ILOp)	<returns>
Method	Drivers.Compiler.IL.ILBlock.PositionOf(Drivers.Compiler.IL.ILOp)	"<param name=""anOp""/>"
Field	Drivers.Compiler.IL.ILBlock.TheMethodInfo	<summary>
Field	Drivers.Compiler.IL.ILBlock.TheMethodInfo	<remarks>
Type	Drivers.Compiler.IL.ILCompiler	<summary>
Type	Drivers.Compiler.IL.ILCompiler	<remarks>
Method	Drivers.Compiler.IL.ILCompiler.Compile(Drivers.Compiler.IL.ILLibrary)	<summary>
Method	Drivers.Compiler.IL.ILCompiler.Compile(Drivers.Compiler.IL.ILLibrary)	<remarks>
Method	Drivers.Compiler.IL.ILCompiler.Compile(Drivers.Compiler.IL.ILLibrary)	<returns>
Method	Drivers.Compiler.IL.ILCompiler.Compile(Drivers.Compiler.IL.ILLibrary)	"<param name=""TheLibrary""/>"
Method	Drivers.Compiler.IL.ILCompiler.ExecuteILPreprocessor(Drivers.Compiler.IL.ILLibrary)	<summary>
Method	Drivers.Compiler.IL.ILCompiler.ExecuteILPreprocessor(Drivers.Compiler.IL.ILLibrary)	<remarks>
Method	Drivers.Compiler.IL.ILCompiler.ExecuteILPreprocessor(Drivers.Compiler.IL.ILLibrary)	<returns>
Method	Drivers.Compiler.IL.ILCompiler.ExecuteILPreprocessor(Drivers.Compiler.IL.ILLibrary)	"<param name=""TheLibrary""/>"
Method	Drivers.Compiler.IL.ILCompiler.ExecuteILReader(Drivers.Compiler.IL.ILLibrary)	<summary>
Method	Drivers.Compiler.IL.ILCompiler.ExecuteILReader(Drivers.Compiler.IL.ILLibrary)	<remarks>
Method	Drivers.Compiler.IL.ILCompiler.ExecuteILReader(Drivers.Compiler.IL.ILLibrary)	<returns>
Method	Drivers.Compiler.IL.ILCompiler.ExecuteILReader(Drivers.Compiler.IL.ILLibrary)	"<param name=""TheLibrary""/>"
Method	Drivers.Compiler.IL.ILCompiler.ExecuteILScanner(Drivers.Compiler.IL.ILLibrary)	<summary>
Method	Drivers.Compiler.IL.ILCompiler.ExecuteILScanner(Drivers.Compiler.IL.ILLibrary)	<remarks>
Method	Drivers.Compiler.IL.ILCompiler.ExecuteILScanner(Drivers.Compiler.IL.ILLibrary)	<returns>
Method	Drivers.Compiler.IL.ILCompiler.ExecuteILScanner(Drivers.Compiler.IL.ILLibrary)	"<param name=""TheLibrary""/>"
Type	Drivers.Compiler.IL.ILConversionState	<summary>
Type	Drivers.Compiler.IL.ILConversionState	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.#ctor	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.AddExternalLabel(System.String)	<summary>
Method	Drivers.Compiler.IL.ILConversionState.AddExternalLabel(System.String)	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.AddExternalLabel(System.String)	"<param name=""label""/>"
Method	Drivers.Compiler.IL.ILConversionState.Append(Drivers.Compiler.ASM.ASMOp)	<summary>
Method	Drivers.Compiler.IL.ILConversionState.Append(Drivers.Compiler.ASM.ASMOp)	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.Append(Drivers.Compiler.ASM.ASMOp)	"<param name=""anOp""/>"
Field	Drivers.Compiler.IL.ILConversionState.CurrentStackFrame	<summary>
Field	Drivers.Compiler.IL.ILConversionState.CurrentStackFrame	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.GetArrayTypeInfo	<summary>
Method	Drivers.Compiler.IL.ILConversionState.GetArrayTypeInfo	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.GetArrayTypeInfo	<returns>
Method	Drivers.Compiler.IL.ILConversionState.GetDecrementRefCountMethodInfo	<summary>
Method	Drivers.Compiler.IL.ILConversionState.GetDecrementRefCountMethodInfo	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.GetDecrementRefCountMethodInfo	<returns>
Method	"Drivers.Compiler.IL.ILConversionState.GetFieldInfo(System.Type,System.String)"	<summary>
Method	"Drivers.Compiler.IL.ILConversionState.GetFieldInfo(System.Type,System.String)"	<remarks>
Method	"Drivers.Compiler.IL.ILConversionState.GetFieldInfo(System.Type,System.String)"	<returns>
Method	"Drivers.Compiler.IL.ILConversionState.GetFieldInfo(System.Type,System.String)"	"<param name=""aType""/>"
Method	"Drivers.Compiler.IL.ILConversionState.GetFieldInfo(System.Type,System.String)"	"<param name=""FieldName""/>"
Method	Drivers.Compiler.IL.ILConversionState.GetHaltMethodInfo	<summary>
Method	Drivers.Compiler.IL.ILConversionState.GetHaltMethodInfo	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.GetHaltMethodInfo	<returns>
Method	Drivers.Compiler.IL.ILConversionState.GetNewArrMethodInfo	<summary>
Method	Drivers.Compiler.IL.ILConversionState.GetNewArrMethodInfo	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.GetNewArrMethodInfo	<returns>
Method	Drivers.Compiler.IL.ILConversionState.GetNewObjMethodInfo	<summary>
Method	Drivers.Compiler.IL.ILConversionState.GetNewObjMethodInfo	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.GetNewObjMethodInfo	<returns>
Method	Drivers.Compiler.IL.ILConversionState.GetThrowIndexOutOfRangeExceptionMethodInfo	<summary>
Method	Drivers.Compiler.IL.ILConversionState.GetThrowIndexOutOfRangeExceptionMethodInfo	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.GetThrowIndexOutOfRangeExceptionMethodInfo	<returns>
Method	Drivers.Compiler.IL.ILConversionState.GetThrowNullReferenceExceptionMethodInfo	<summary>
Method	Drivers.Compiler.IL.ILConversionState.GetThrowNullReferenceExceptionMethodInfo	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.GetThrowNullReferenceExceptionMethodInfo	<returns>
Method	Drivers.Compiler.IL.ILConversionState.GetTypeFieldOffset(System.String)	<summary>
Method	Drivers.Compiler.IL.ILConversionState.GetTypeFieldOffset(System.String)	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.GetTypeFieldOffset(System.String)	<returns>
Method	Drivers.Compiler.IL.ILConversionState.GetTypeFieldOffset(System.String)	"<param name=""FieldName""/>"
Field	Drivers.Compiler.IL.ILConversionState.Input	<summary>
Field	Drivers.Compiler.IL.ILConversionState.Input	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.PositionOf(Drivers.Compiler.IL.ILOp)	<summary>
Method	Drivers.Compiler.IL.ILConversionState.PositionOf(Drivers.Compiler.IL.ILOp)	<remarks>
Method	Drivers.Compiler.IL.ILConversionState.PositionOf(Drivers.Compiler.IL.ILOp)	<returns>
Method	Drivers.Compiler.IL.ILConversionState.PositionOf(Drivers.Compiler.IL.ILOp)	"<param name=""anOp""/>"
Field	Drivers.Compiler.IL.ILConversionState.Result	<summary>
Field	Drivers.Compiler.IL.ILConversionState.Result	<remarks>
Field	Drivers.Compiler.IL.ILConversionState.TheILLibrary	<summary>
Field	Drivers.Compiler.IL.ILConversionState.TheILLibrary	<remarks>
Type	Drivers.Compiler.IL.ILLibrary	<summary>
Type	Drivers.Compiler.IL.ILLibrary	<remarks>
Method	Drivers.Compiler.IL.ILLibrary.#ctor	<remarks>
Method	Drivers.Compiler.IL.ILLibrary.#cctor	<remarks>
Method	Drivers.Compiler.IL.ILLibrary.AddStringLiteral(System.String)	<summary>
Method	Drivers.Compiler.IL.ILLibrary.AddStringLiteral(System.String)	<remarks>
Method	Drivers.Compiler.IL.ILLibrary.AddStringLiteral(System.String)	<returns>
Method	Drivers.Compiler.IL.ILLibrary.AddStringLiteral(System.String)	"<param name=""value""/>"
Field	Drivers.Compiler.IL.ILLibrary.Dependencies	<summary>
Field	Drivers.Compiler.IL.ILLibrary.Dependencies	<remarks>
Method	Drivers.Compiler.IL.ILLibrary.Equals(System.Object)	<summary>
Method	Drivers.Compiler.IL.ILLibrary.Equals(System.Object)	<remarks>
Method	Drivers.Compiler.IL.ILLibrary.Equals(System.Object)	<returns>
Method	Drivers.Compiler.IL.ILLibrary.Equals(System.Object)	"<param name=""obj""/>"
Method	Drivers.Compiler.IL.ILLibrary.Flatten	<summary>
Method	Drivers.Compiler.IL.ILLibrary.Flatten	<remarks>
Method	Drivers.Compiler.IL.ILLibrary.Flatten	<returns>
Method	"Drivers.Compiler.IL.ILLibrary.GetFieldInfo(Drivers.Compiler.Types.TypeInfo,System.String)"	<summary>
Method	"Drivers.Compiler.IL.ILLibrary.GetFieldInfo(Drivers.Compiler.Types.TypeInfo,System.String)"	<remarks>
Method	"Drivers.Compiler.IL.ILLibrary.GetFieldInfo(Drivers.Compiler.Types.TypeInfo,System.String)"	<returns>
Method	"Drivers.Compiler.IL.ILLibrary.GetFieldInfo(Drivers.Compiler.Types.TypeInfo,System.String)"	"<param name=""aTypeInfo""/>"
Method	"Drivers.Compiler.IL.ILLibrary.GetFieldInfo(Drivers.Compiler.Types.TypeInfo,System.String)"	"<param name=""FieldName""/>"
Method	Drivers.Compiler.IL.ILLibrary.GetHashCode	<summary>
Method	Drivers.Compiler.IL.ILLibrary.GetHashCode	<remarks>
Method	Drivers.Compiler.IL.ILLibrary.GetHashCode	<returns>
Method	"Drivers.Compiler.IL.ILLibrary.GetILBlock(Drivers.Compiler.Types.MethodInfo,System.Boolean)"	<summary>
Method	"Drivers.Compiler.IL.ILLibrary.GetILBlock(Drivers.Compiler.Types.MethodInfo,System.Boolean)"	<remarks>
Method	"Drivers.Compiler.IL.ILLibrary.GetILBlock(Drivers.Compiler.Types.MethodInfo,System.Boolean)"	<returns>
Method	"Drivers.Compiler.IL.ILLibrary.GetILBlock(Drivers.Compiler.Types.MethodInfo,System.Boolean)"	"<param name=""theInfo""/>"
Method	"Drivers.Compiler.IL.ILLibrary.GetILBlock(Drivers.Compiler.Types.MethodInfo,System.Boolean)"	"<param name=""checkDepLibs""/>"
Method	Drivers.Compiler.IL.ILLibrary.GetMethodInfo(System.Reflection.MethodBase)	<summary>
Method	Drivers.Compiler.IL.ILLibrary.GetMethodInfo(System.Reflection.MethodBase)	<remarks>
Method	Drivers.Compiler.IL.ILLibrary.GetMethodInfo(System.Reflection.MethodBase)	<returns>
Method	Drivers.Compiler.IL.ILLibrary.GetMethodInfo(System.Reflection.MethodBase)	"<param name=""theMethod""/>"
Method	"Drivers.Compiler.IL.ILLibrary.GetTypeInfo(System.Type,System.Boolean)"	<summary>
Method	"Drivers.Compiler.IL.ILLibrary.GetTypeInfo(System.Type,System.Boolean)"	<remarks>
Method	"Drivers.Compiler.IL.ILLibrary.GetTypeInfo(System.Type,System.Boolean)"	<returns>
Method	"Drivers.Compiler.IL.ILLibrary.GetTypeInfo(System.Type,System.Boolean)"	"<param name=""theType""/>"
Method	"Drivers.Compiler.IL.ILLibrary.GetTypeInfo(System.Type,System.Boolean)"	"<param name=""FullyProcess""/>"
Method	"Drivers.Compiler.IL.ILLibrary.GetTypeInfo(System.Type,System.Boolean,System.Boolean)"	<summary>
Method	"Drivers.Compiler.IL.ILLibrary.GetTypeInfo(System.Type,System.Boolean,System.Boolean)"	<remarks>
Method	"Drivers.Compiler.IL.ILLibrary.GetTypeInfo(System.Type,System.Boolean,System.Boolean)"	<returns>
Method	"Drivers.Compiler.IL.ILLibrary.GetTypeInfo(System.Type,System.Boolean,System.Boolean)"	"<param name=""theType""/>"
Method	"Drivers.Compiler.IL.ILLibrary.GetTypeInfo(System.Type,System.Boolean,System.Boolean)"	"<param name=""topLevel""/>"
Method	"Drivers.Compiler.IL.ILLibrary.GetTypeInfo(System.Type,System.Boolean,System.Boolean)"	"<param name=""FullyProcess""/>"
Field	Drivers.Compiler.IL.ILLibrary.ILBlocks	<summary>
Field	Drivers.Compiler.IL.ILLibrary.ILBlocks	<remarks>
Field	Drivers.Compiler.IL.ILLibrary.ILPreprocessed	<summary>
Field	Drivers.Compiler.IL.ILLibrary.ILPreprocessed	<remarks>
Field	Drivers.Compiler.IL.ILLibrary.ILRead	<summary>
Field	Drivers.Compiler.IL.ILLibrary.ILRead	<remarks>
Field	Drivers.Compiler.IL.ILLibrary.ILScanned	<summary>
Field	Drivers.Compiler.IL.ILLibrary.ILScanned	<remarks>
Field	Drivers.Compiler.IL.ILLibrary.SpecialClasses	<summary>
Field	Drivers.Compiler.IL.ILLibrary.SpecialClasses	<remarks>
Field	Drivers.Compiler.IL.ILLibrary.SpecialMethods	<summary>
Field	Drivers.Compiler.IL.ILLibrary.SpecialMethods	<remarks>
Field	Drivers.Compiler.IL.ILLibrary.StringLiterals	<summary>
Field	Drivers.Compiler.IL.ILLibrary.StringLiterals	<remarks>
Field	Drivers.Compiler.IL.ILLibrary.TheASMLibrary	<summary>
Field	Drivers.Compiler.IL.ILLibrary.TheASMLibrary	<remarks>
Field	Drivers.Compiler.IL.ILLibrary.TheAssembly	<summary>
Field	Drivers.Compiler.IL.ILLibrary.TheAssembly	<remarks>
Field	Drivers.Compiler.IL.ILLibrary.TheStaticConstructorDependencyTree	<summary>
Field	Drivers.Compiler.IL.ILLibrary.TheStaticConstructorDependencyTree	<remarks>
Method	Drivers.Compiler.IL.ILLibrary.ToString	<summary>
Method	Drivers.Compiler.IL.ILLibrary.ToString	<remarks>
Method	Drivers.Compiler.IL.ILLibrary.ToString	<returns>
Field	Drivers.Compiler.IL.ILLibrary.TypeInfos	<summary>
Field	Drivers.Compiler.IL.ILLibrary.TypeInfos	<remarks>
Type	Drivers.Compiler.IL.ILOp	<summary>
Type	Drivers.Compiler.IL.ILOp	<remarks>
Method	Drivers.Compiler.IL.ILOp.#ctor	<remarks>
Field	Drivers.Compiler.IL.ILOp.BytesSize	<summary>
Field	Drivers.Compiler.IL.ILOp.BytesSize	<remarks>
Method	"Drivers.Compiler.IL.ILOp.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.IL.ILOp.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.IL.ILOp.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.IL.ILOp.Convert(Drivers.Compiler.IL.ILConversionState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Field	Drivers.Compiler.IL.ILOp.IsDebugOp	<summary>
Field	Drivers.Compiler.IL.ILOp.IsDebugOp	<remarks>
Field	Drivers.Compiler.IL.ILOp.LabelRequired	<summary>
Field	Drivers.Compiler.IL.ILOp.LabelRequired	<remarks>
Field	Drivers.Compiler.IL.ILOp.LoadAtILOffset	<summary>
Field	Drivers.Compiler.IL.ILOp.LoadAtILOffset	<remarks>
Field	Drivers.Compiler.IL.ILOp.MethodToCall	<summary>
Field	Drivers.Compiler.IL.ILOp.MethodToCall	<remarks>
Property	Drivers.Compiler.IL.ILOp.NextOffset	<summary>
Property	Drivers.Compiler.IL.ILOp.NextOffset	<remarks>
Property	Drivers.Compiler.IL.ILOp.NextOffset	<value>
Field	Drivers.Compiler.IL.ILOp.Offset	<summary>
Field	Drivers.Compiler.IL.ILOp.Offset	<remarks>
Field	Drivers.Compiler.IL.ILOp.opCode	<summary>
Field	Drivers.Compiler.IL.ILOp.opCode	<remarks>
Method	"Drivers.Compiler.IL.ILOp.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.IL.ILOp.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.IL.ILOp.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""conversionState""/>"
Method	"Drivers.Compiler.IL.ILOp.PerformStackOperations(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Method	"Drivers.Compiler.IL.ILOp.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<summary>
Method	"Drivers.Compiler.IL.ILOp.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	<remarks>
Method	"Drivers.Compiler.IL.ILOp.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""preprocessState""/>"
Method	"Drivers.Compiler.IL.ILOp.Preprocess(Drivers.Compiler.IL.ILPreprocessState,Drivers.Compiler.IL.ILOp)"	"<param name=""theOp""/>"
Field	Drivers.Compiler.IL.ILOp.StackSwitch_Items	<summary>
Field	Drivers.Compiler.IL.ILOp.StackSwitch_Items	<remarks>
Method	Drivers.Compiler.IL.ILOp.ToString	<summary>
Method	Drivers.Compiler.IL.ILOp.ToString	<remarks>
Method	Drivers.Compiler.IL.ILOp.ToString	<returns>
Field	Drivers.Compiler.IL.ILOp.ValueBytes	<summary>
Field	Drivers.Compiler.IL.ILOp.ValueBytes	<remarks>
Type	Drivers.Compiler.IL.ILOp.OpCodes	<summary>
Type	Drivers.Compiler.IL.ILOp.OpCodes	<remarks>
Type	Drivers.Compiler.IL.ILPreprocessor	<summary>
Type	Drivers.Compiler.IL.ILPreprocessor	<remarks>
Method	"Drivers.Compiler.IL.ILPreprocessor.DealWithCatchHandlers(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<summary>
Method	"Drivers.Compiler.IL.ILPreprocessor.DealWithCatchHandlers(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<remarks>
Method	"Drivers.Compiler.IL.ILPreprocessor.DealWithCatchHandlers(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theMethodInfo""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.DealWithCatchHandlers(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theILBlock""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.GetMethodIDGenerator(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	<summary>
Method	"Drivers.Compiler.IL.ILPreprocessor.GetMethodIDGenerator(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	<remarks>
Method	"Drivers.Compiler.IL.ILPreprocessor.GetMethodIDGenerator(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	<returns>
Method	"Drivers.Compiler.IL.ILPreprocessor.GetMethodIDGenerator(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.GetMethodIDGenerator(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	"<param name=""aTypeInfo""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.GetMethodIDGenerator(Drivers.Compiler.IL.ILLibrary,System.Type)"	<summary>
Method	"Drivers.Compiler.IL.ILPreprocessor.GetMethodIDGenerator(Drivers.Compiler.IL.ILLibrary,System.Type)"	<remarks>
Method	"Drivers.Compiler.IL.ILPreprocessor.GetMethodIDGenerator(Drivers.Compiler.IL.ILLibrary,System.Type)"	<returns>
Method	"Drivers.Compiler.IL.ILPreprocessor.GetMethodIDGenerator(Drivers.Compiler.IL.ILLibrary,System.Type)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.GetMethodIDGenerator(Drivers.Compiler.IL.ILLibrary,System.Type)"	"<param name=""aType""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGC(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<summary>
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGC(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<remarks>
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGC(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGC(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theMethodInfo""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGC(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theILBlock""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGeneral1(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<summary>
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGeneral1(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<remarks>
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGeneral1(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theMethodInfo""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGeneral1(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theILBlock""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGeneral2(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<summary>
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGeneral2(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<remarks>
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGeneral2(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theMethodInfo""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectGeneral2(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theILBlock""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectTryCatchFinally(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<summary>
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectTryCatchFinally(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<remarks>
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectTryCatchFinally(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theMethodInfo""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.InjectTryCatchFinally(Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theILBlock""/>"
Method	Drivers.Compiler.IL.ILPreprocessor.Preprocess(Drivers.Compiler.IL.ILLibrary)	<summary>
Method	Drivers.Compiler.IL.ILPreprocessor.Preprocess(Drivers.Compiler.IL.ILLibrary)	<remarks>
Method	Drivers.Compiler.IL.ILPreprocessor.Preprocess(Drivers.Compiler.IL.ILLibrary)	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.PreprocessILOps(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<summary>
Method	"Drivers.Compiler.IL.ILPreprocessor.PreprocessILOps(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<remarks>
Method	"Drivers.Compiler.IL.ILPreprocessor.PreprocessILOps(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.PreprocessILOps(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theMethodInfo""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.PreprocessILOps(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theILBlock""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.PreprocessMethodInfo(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo)"	<summary>
Method	"Drivers.Compiler.IL.ILPreprocessor.PreprocessMethodInfo(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo)"	<remarks>
Method	"Drivers.Compiler.IL.ILPreprocessor.PreprocessMethodInfo(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILPreprocessor.PreprocessMethodInfo(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo)"	"<param name=""theMethodInfo""/>"
Method	Drivers.Compiler.IL.ILPreprocessor.PreprocessSpecialClasses(Drivers.Compiler.IL.ILLibrary)	<summary>
Method	Drivers.Compiler.IL.ILPreprocessor.PreprocessSpecialClasses(Drivers.Compiler.IL.ILLibrary)	<remarks>
Method	Drivers.Compiler.IL.ILPreprocessor.PreprocessSpecialClasses(Drivers.Compiler.IL.ILLibrary)	"<param name=""RootLibrary""/>"
Method	Drivers.Compiler.IL.ILPreprocessor.PreprocessSpecialMethods(Drivers.Compiler.IL.ILLibrary)	<summary>
Method	Drivers.Compiler.IL.ILPreprocessor.PreprocessSpecialMethods(Drivers.Compiler.IL.ILLibrary)	<remarks>
Method	Drivers.Compiler.IL.ILPreprocessor.PreprocessSpecialMethods(Drivers.Compiler.IL.ILLibrary)	"<param name=""RootLibrary""/>"
Type	Drivers.Compiler.IL.ILPreprocessState	<summary>
Type	Drivers.Compiler.IL.ILPreprocessState	<remarks>
Method	Drivers.Compiler.IL.ILPreprocessState.#ctor	<remarks>
Field	Drivers.Compiler.IL.ILPreprocessState.CurrentStackFrame	<summary>
Field	Drivers.Compiler.IL.ILPreprocessState.CurrentStackFrame	<remarks>
Method	"Drivers.Compiler.IL.ILPreprocessState.GetFieldInfo(System.Type,System.String)"	<summary>
Method	"Drivers.Compiler.IL.ILPreprocessState.GetFieldInfo(System.Type,System.String)"	<remarks>
Method	"Drivers.Compiler.IL.ILPreprocessState.GetFieldInfo(System.Type,System.String)"	<returns>
Method	"Drivers.Compiler.IL.ILPreprocessState.GetFieldInfo(System.Type,System.String)"	"<param name=""aType""/>"
Method	"Drivers.Compiler.IL.ILPreprocessState.GetFieldInfo(System.Type,System.String)"	"<param name=""FieldName""/>"
Field	Drivers.Compiler.IL.ILPreprocessState.Input	<summary>
Field	Drivers.Compiler.IL.ILPreprocessState.Input	<remarks>
Method	Drivers.Compiler.IL.ILPreprocessState.PositionOf(Drivers.Compiler.IL.ILOp)	<summary>
Method	Drivers.Compiler.IL.ILPreprocessState.PositionOf(Drivers.Compiler.IL.ILOp)	<remarks>
Method	Drivers.Compiler.IL.ILPreprocessState.PositionOf(Drivers.Compiler.IL.ILOp)	<returns>
Method	Drivers.Compiler.IL.ILPreprocessState.PositionOf(Drivers.Compiler.IL.ILOp)	"<param name=""anOp""/>"
Field	Drivers.Compiler.IL.ILPreprocessState.TheILLibrary	<summary>
Field	Drivers.Compiler.IL.ILPreprocessState.TheILLibrary	<remarks>
Type	Drivers.Compiler.IL.ILReader	<summary>
Type	Drivers.Compiler.IL.ILReader	<remarks>
Method	Drivers.Compiler.IL.ILReader.#cctor	<remarks>
Field	Drivers.Compiler.IL.ILReader.AllOpCodes	<summary>
Field	Drivers.Compiler.IL.ILReader.AllOpCodes	<remarks>
Method	Drivers.Compiler.IL.ILReader.LoadILOpTypes	<summary>
Method	Drivers.Compiler.IL.ILReader.LoadILOpTypes	<remarks>
Method	Drivers.Compiler.IL.ILReader.Read(Drivers.Compiler.Types.MethodInfo)	<summary>
Method	Drivers.Compiler.IL.ILReader.Read(Drivers.Compiler.Types.MethodInfo)	<remarks>
Method	Drivers.Compiler.IL.ILReader.Read(Drivers.Compiler.Types.MethodInfo)	<returns>
Method	Drivers.Compiler.IL.ILReader.Read(Drivers.Compiler.Types.MethodInfo)	"<param name=""aMethodInfo""/>"
Method	Drivers.Compiler.IL.ILReader.ReadNonPlugged(Drivers.Compiler.Types.MethodInfo)	<summary>
Method	Drivers.Compiler.IL.ILReader.ReadNonPlugged(Drivers.Compiler.Types.MethodInfo)	<remarks>
Method	Drivers.Compiler.IL.ILReader.ReadNonPlugged(Drivers.Compiler.Types.MethodInfo)	<returns>
Method	Drivers.Compiler.IL.ILReader.ReadNonPlugged(Drivers.Compiler.Types.MethodInfo)	"<param name=""aMethodInfo""/>"
Method	Drivers.Compiler.IL.ILReader.ReadPlugged(Drivers.Compiler.Types.MethodInfo)	<summary>
Method	Drivers.Compiler.IL.ILReader.ReadPlugged(Drivers.Compiler.Types.MethodInfo)	<remarks>
Method	Drivers.Compiler.IL.ILReader.ReadPlugged(Drivers.Compiler.Types.MethodInfo)	<returns>
Method	Drivers.Compiler.IL.ILReader.ReadPlugged(Drivers.Compiler.Types.MethodInfo)	"<param name=""aMethodInfo""/>"
Type	Drivers.Compiler.IL.ILScanner	<summary>
Type	Drivers.Compiler.IL.ILScanner	<remarks>
Method	Drivers.Compiler.IL.ILScanner.#cctor	<remarks>
Method	Drivers.Compiler.IL.ILScanner.GetAllocStringForSize(System.Int32)	<summary>
Method	Drivers.Compiler.IL.ILScanner.GetAllocStringForSize(System.Int32)	<remarks>
Method	Drivers.Compiler.IL.ILScanner.GetAllocStringForSize(System.Int32)	<returns>
Method	Drivers.Compiler.IL.ILScanner.GetAllocStringForSize(System.Int32)	"<param name=""numBytes""/>"
Method	Drivers.Compiler.IL.ILScanner.Init	<summary>
Method	Drivers.Compiler.IL.ILScanner.Init	<remarks>
Method	Drivers.Compiler.IL.ILScanner.Init	<returns>
Method	Drivers.Compiler.IL.ILScanner.LoadTargetArchiecture	<summary>
Method	Drivers.Compiler.IL.ILScanner.LoadTargetArchiecture	<remarks>
Method	Drivers.Compiler.IL.ILScanner.LoadTargetArchiecture	<returns>
Field	Drivers.Compiler.IL.ILScanner.MethodEndOp	<summary>
Field	Drivers.Compiler.IL.ILScanner.MethodEndOp	<remarks>
Field	Drivers.Compiler.IL.ILScanner.MethodStartOp	<summary>
Field	Drivers.Compiler.IL.ILScanner.MethodStartOp	<remarks>
Method	Drivers.Compiler.IL.ILScanner.Scan(Drivers.Compiler.IL.ILLibrary)	<summary>
Method	Drivers.Compiler.IL.ILScanner.Scan(Drivers.Compiler.IL.ILLibrary)	<remarks>
Method	Drivers.Compiler.IL.ILScanner.Scan(Drivers.Compiler.IL.ILLibrary)	<returns>
Method	Drivers.Compiler.IL.ILScanner.Scan(Drivers.Compiler.IL.ILLibrary)	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	<summary>
Method	"Drivers.Compiler.IL.ILScanner.ScanFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	<remarks>
Method	"Drivers.Compiler.IL.ILScanner.ScanFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""TheTypeInfo""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""FieldTablesBlock""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanMethods(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	<summary>
Method	"Drivers.Compiler.IL.ILScanner.ScanMethods(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	<remarks>
Method	"Drivers.Compiler.IL.ILScanner.ScanMethods(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanMethods(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""TheTypeInfo""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanMethods(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""MethodTablesBlock""/>"
Field	Drivers.Compiler.IL.ILScanner.ScannedTypes	<summary>
Field	Drivers.Compiler.IL.ILScanner.ScannedTypes	<remarks>
Method	"Drivers.Compiler.IL.ILScanner.ScanNonpluggedILBlock(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<summary>
Method	"Drivers.Compiler.IL.ILScanner.ScanNonpluggedILBlock(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<remarks>
Method	"Drivers.Compiler.IL.ILScanner.ScanNonpluggedILBlock(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<returns>
Method	"Drivers.Compiler.IL.ILScanner.ScanNonpluggedILBlock(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanNonpluggedILBlock(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theMethodInfo""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanNonpluggedILBlock(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theILBlock""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanPluggedILBlock(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<summary>
Method	"Drivers.Compiler.IL.ILScanner.ScanPluggedILBlock(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<remarks>
Method	"Drivers.Compiler.IL.ILScanner.ScanPluggedILBlock(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	<returns>
Method	"Drivers.Compiler.IL.ILScanner.ScanPluggedILBlock(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanPluggedILBlock(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theMethodInfo""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanPluggedILBlock(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.MethodInfo,Drivers.Compiler.IL.ILBlock)"	"<param name=""theILBlock""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanStaticFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	<summary>
Method	"Drivers.Compiler.IL.ILScanner.ScanStaticFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	<remarks>
Method	"Drivers.Compiler.IL.ILScanner.ScanStaticFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanStaticFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""TheTypeInfo""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanStaticFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""StaticFieldsBlock""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanType(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	<summary>
Method	"Drivers.Compiler.IL.ILScanner.ScanType(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	<remarks>
Method	"Drivers.Compiler.IL.ILScanner.ScanType(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanType(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""TheTypeInfo""/>"
Method	"Drivers.Compiler.IL.ILScanner.ScanType(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo,Drivers.Compiler.ASM.ASMBlock)"	"<param name=""TypesTableBlock""/>"
Field	Drivers.Compiler.IL.ILScanner.StackSwitchOp	<summary>
Field	Drivers.Compiler.IL.ILScanner.StackSwitchOp	<remarks>
Field	Drivers.Compiler.IL.ILScanner.TargetArchitectureAssembly	<summary>
Field	Drivers.Compiler.IL.ILScanner.TargetArchitectureAssembly	<remarks>
Field	Drivers.Compiler.IL.ILScanner.TargetILOps	<summary>
Field	Drivers.Compiler.IL.ILScanner.TargetILOps	<remarks>
Field	Drivers.Compiler.IL.ILScanner.TypesScanned	<summary>
Field	Drivers.Compiler.IL.ILScanner.TypesScanned	<remarks>
Type	Drivers.Compiler.IL.StackFrame	<summary>
Type	Drivers.Compiler.IL.StackFrame	<remarks>
Method	Drivers.Compiler.IL.StackFrame.#ctor	<remarks>
Field	Drivers.Compiler.IL.StackFrame.Stack	<summary>
Field	Drivers.Compiler.IL.StackFrame.Stack	<remarks>
Type	Drivers.Compiler.IL.StackItem	<summary>
Type	Drivers.Compiler.IL.StackItem	<remarks>
Method	Drivers.Compiler.IL.StackItem.#ctor	<remarks>
Field	Drivers.Compiler.IL.StackItem.isFloat	<summary>
Field	Drivers.Compiler.IL.StackItem.isFloat	<remarks>
Field	Drivers.Compiler.IL.StackItem.isGCManaged	<summary>
Field	Drivers.Compiler.IL.StackItem.isGCManaged	<remarks>
Field	Drivers.Compiler.IL.StackItem.isNewGCObject	<summary>
Field	Drivers.Compiler.IL.StackItem.isNewGCObject	<remarks>
Field	Drivers.Compiler.IL.StackItem.sizeOnStackInBytes	<summary>
Field	Drivers.Compiler.IL.StackItem.sizeOnStackInBytes	<remarks>
Type	Drivers.Compiler.IL.StaticConstructorDependency	<summary>
Type	Drivers.Compiler.IL.StaticConstructorDependency	<remarks>
Method	Drivers.Compiler.IL.StaticConstructorDependency.#ctor	<remarks>
Field	Drivers.Compiler.IL.StaticConstructorDependency.Children	<summary>
Field	Drivers.Compiler.IL.StaticConstructorDependency.Children	<remarks>
Method	Drivers.Compiler.IL.StaticConstructorDependency.Flatten	<summary>
Method	Drivers.Compiler.IL.StaticConstructorDependency.Flatten	<remarks>
Method	Drivers.Compiler.IL.StaticConstructorDependency.Flatten	<returns>
Property	Drivers.Compiler.IL.StaticConstructorDependency.Item(System.Reflection.ConstructorInfo)	<summary>
Property	Drivers.Compiler.IL.StaticConstructorDependency.Item(System.Reflection.ConstructorInfo)	<remarks>
Property	Drivers.Compiler.IL.StaticConstructorDependency.Item(System.Reflection.ConstructorInfo)	<value>
Field	Drivers.Compiler.IL.StaticConstructorDependency.TheConstructor	<summary>
Field	Drivers.Compiler.IL.StaticConstructorDependency.TheConstructor	<remarks>
Namespace	Drivers.Compiler.IL.ILOps	<summary>
Type	Drivers.Compiler.IL.ILOps.Add	<summary>
Type	Drivers.Compiler.IL.ILOps.Add	<remarks>
Method	Drivers.Compiler.IL.ILOps.Add.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.And	<summary>
Type	Drivers.Compiler.IL.ILOps.And	<remarks>
Method	Drivers.Compiler.IL.ILOps.And.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Br	<summary>
Type	Drivers.Compiler.IL.ILOps.Br	<remarks>
Method	Drivers.Compiler.IL.ILOps.Br.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Call	<summary>
Type	Drivers.Compiler.IL.ILOps.Call	<remarks>
Method	Drivers.Compiler.IL.ILOps.Call.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Callvirt	<summary>
Type	Drivers.Compiler.IL.ILOps.Callvirt	<remarks>
Method	Drivers.Compiler.IL.ILOps.Callvirt.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ceq	<summary>
Type	Drivers.Compiler.IL.ILOps.Ceq	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ceq.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Cgt	<summary>
Type	Drivers.Compiler.IL.ILOps.Cgt	<remarks>
Method	Drivers.Compiler.IL.ILOps.Cgt.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Clt	<summary>
Type	Drivers.Compiler.IL.ILOps.Clt	<remarks>
Method	Drivers.Compiler.IL.ILOps.Clt.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Convi	<summary>
Type	Drivers.Compiler.IL.ILOps.Convi	<remarks>
Method	Drivers.Compiler.IL.ILOps.Convi.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Convu	<summary>
Type	Drivers.Compiler.IL.ILOps.Convu	<remarks>
Method	Drivers.Compiler.IL.ILOps.Convu.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Div	<summary>
Type	Drivers.Compiler.IL.ILOps.Div	<remarks>
Method	Drivers.Compiler.IL.ILOps.Div.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Dup	<summary>
Type	Drivers.Compiler.IL.ILOps.Dup	<remarks>
Method	Drivers.Compiler.IL.ILOps.Dup.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.ILOpTargetAttribute	<summary>
Type	Drivers.Compiler.IL.ILOps.ILOpTargetAttribute	<remarks>
Method	Drivers.Compiler.IL.ILOps.ILOpTargetAttribute.#ctor	<remarks>
Field	Drivers.Compiler.IL.ILOps.ILOpTargetAttribute.Target	<summary>
Field	Drivers.Compiler.IL.ILOps.ILOpTargetAttribute.Target	<remarks>
Type	Drivers.Compiler.IL.ILOps.Initobj	<summary>
Type	Drivers.Compiler.IL.ILOps.Initobj	<remarks>
Method	Drivers.Compiler.IL.ILOps.Initobj.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Isinst	<summary>
Type	Drivers.Compiler.IL.ILOps.Isinst	<remarks>
Method	Drivers.Compiler.IL.ILOps.Isinst.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldarg	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldarg	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldarg.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldc	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldc	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldc.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldelem	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldelem	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldelem.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldfld	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldfld	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldfld.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldftn	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldftn	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldftn.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldind	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldind	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldind.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldlen	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldlen	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldlen.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldloc	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldloc	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldloc.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldnull	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldnull	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldnull.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldobj	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldobj	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldobj.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldsfld	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldsfld	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldsfld.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldstr	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldstr	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldstr.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ldtoken	<summary>
Type	Drivers.Compiler.IL.ILOps.Ldtoken	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ldtoken.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.MethodEnd	<summary>
Type	Drivers.Compiler.IL.ILOps.MethodEnd	<remarks>
Method	Drivers.Compiler.IL.ILOps.MethodEnd.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.MethodStart	<summary>
Type	Drivers.Compiler.IL.ILOps.MethodStart	<remarks>
Method	Drivers.Compiler.IL.ILOps.MethodStart.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Mul	<summary>
Type	Drivers.Compiler.IL.ILOps.Mul	<remarks>
Method	Drivers.Compiler.IL.ILOps.Mul.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Neg	<summary>
Type	Drivers.Compiler.IL.ILOps.Neg	<remarks>
Method	Drivers.Compiler.IL.ILOps.Neg.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Newarr	<summary>
Type	Drivers.Compiler.IL.ILOps.Newarr	<remarks>
Method	Drivers.Compiler.IL.ILOps.Newarr.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Newobj	<summary>
Type	Drivers.Compiler.IL.ILOps.Newobj	<remarks>
Method	Drivers.Compiler.IL.ILOps.Newobj.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Nop	<summary>
Type	Drivers.Compiler.IL.ILOps.Nop	<remarks>
Method	Drivers.Compiler.IL.ILOps.Nop.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Not	<summary>
Type	Drivers.Compiler.IL.ILOps.Not	<remarks>
Method	Drivers.Compiler.IL.ILOps.Not.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Or	<summary>
Type	Drivers.Compiler.IL.ILOps.Or	<remarks>
Method	Drivers.Compiler.IL.ILOps.Or.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Pop	<summary>
Type	Drivers.Compiler.IL.ILOps.Pop	<remarks>
Method	Drivers.Compiler.IL.ILOps.Pop.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Rem	<summary>
Type	Drivers.Compiler.IL.ILOps.Rem	<remarks>
Method	Drivers.Compiler.IL.ILOps.Rem.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Ret	<summary>
Type	Drivers.Compiler.IL.ILOps.Ret	<remarks>
Method	Drivers.Compiler.IL.ILOps.Ret.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Shl	<summary>
Type	Drivers.Compiler.IL.ILOps.Shl	<remarks>
Method	Drivers.Compiler.IL.ILOps.Shl.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Shr	<summary>
Type	Drivers.Compiler.IL.ILOps.Shr	<remarks>
Method	Drivers.Compiler.IL.ILOps.Shr.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Sizeof	<summary>
Type	Drivers.Compiler.IL.ILOps.Sizeof	<remarks>
Method	Drivers.Compiler.IL.ILOps.Sizeof.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.StackSwitch	<summary>
Type	Drivers.Compiler.IL.ILOps.StackSwitch	<remarks>
Method	Drivers.Compiler.IL.ILOps.StackSwitch.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Starg	<summary>
Type	Drivers.Compiler.IL.ILOps.Starg	<remarks>
Method	Drivers.Compiler.IL.ILOps.Starg.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Stelem	<summary>
Type	Drivers.Compiler.IL.ILOps.Stelem	<remarks>
Method	Drivers.Compiler.IL.ILOps.Stelem.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Stfld	<summary>
Type	Drivers.Compiler.IL.ILOps.Stfld	<remarks>
Method	Drivers.Compiler.IL.ILOps.Stfld.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Stind	<summary>
Type	Drivers.Compiler.IL.ILOps.Stind	<remarks>
Method	Drivers.Compiler.IL.ILOps.Stind.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Stloc	<summary>
Type	Drivers.Compiler.IL.ILOps.Stloc	<remarks>
Method	Drivers.Compiler.IL.ILOps.Stloc.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Stsfld	<summary>
Type	Drivers.Compiler.IL.ILOps.Stsfld	<remarks>
Method	Drivers.Compiler.IL.ILOps.Stsfld.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Sub	<summary>
Type	Drivers.Compiler.IL.ILOps.Sub	<remarks>
Method	Drivers.Compiler.IL.ILOps.Sub.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Switch	<summary>
Type	Drivers.Compiler.IL.ILOps.Switch	<remarks>
Method	Drivers.Compiler.IL.ILOps.Switch.#ctor	<remarks>
Type	Drivers.Compiler.IL.ILOps.Xor	<summary>
Type	Drivers.Compiler.IL.ILOps.Xor	<remarks>
Method	Drivers.Compiler.IL.ILOps.Xor.#ctor	<remarks>
Namespace	Drivers.Compiler.MSBuildTask	<summary>
Type	Drivers.Compiler.MSBuildTask.BuildTask	<summary>
Type	Drivers.Compiler.MSBuildTask.BuildTask	<remarks>
Method	Drivers.Compiler.MSBuildTask.BuildTask.#ctor	<remarks>
Property	Drivers.Compiler.MSBuildTask.BuildTask.DebugBuild	<summary>
Property	Drivers.Compiler.MSBuildTask.BuildTask.DebugBuild	<remarks>
Property	Drivers.Compiler.MSBuildTask.BuildTask.DebugBuild	<value>
Method	Drivers.Compiler.MSBuildTask.BuildTask.Execute	<summary>
Method	Drivers.Compiler.MSBuildTask.BuildTask.Execute	<remarks>
Method	Drivers.Compiler.MSBuildTask.BuildTask.Execute	<returns>
Property	Drivers.Compiler.MSBuildTask.BuildTask.ISOLink	<summary>
Property	Drivers.Compiler.MSBuildTask.BuildTask.ISOLink	<remarks>
Property	Drivers.Compiler.MSBuildTask.BuildTask.ISOLink	<value>
Property	Drivers.Compiler.MSBuildTask.BuildTask.LibraryPath	<summary>
Property	Drivers.Compiler.MSBuildTask.BuildTask.LibraryPath	<remarks>
Property	Drivers.Compiler.MSBuildTask.BuildTask.LibraryPath	<value>
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogError(System.String,System.String,System.Int32,System.String)"	<summary>
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogError(System.String,System.String,System.Int32,System.String)"	<remarks>
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogError(System.String,System.String,System.Int32,System.String)"	"<param name=""errorCode""/>"
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogError(System.String,System.String,System.Int32,System.String)"	"<param name=""file""/>"
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogError(System.String,System.String,System.Int32,System.String)"	"<param name=""lineNumber""/>"
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogError(System.String,System.String,System.Int32,System.String)"	"<param name=""message""/>"
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogMessage(System.String,System.Int32,System.String)"	<summary>
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogMessage(System.String,System.Int32,System.String)"	<remarks>
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogMessage(System.String,System.Int32,System.String)"	"<param name=""file""/>"
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogMessage(System.String,System.Int32,System.String)"	"<param name=""lineNumber""/>"
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogMessage(System.String,System.Int32,System.String)"	"<param name=""message""/>"
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogWarning(System.String,System.String,System.Int32,System.String)"	<summary>
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogWarning(System.String,System.String,System.Int32,System.String)"	<remarks>
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogWarning(System.String,System.String,System.Int32,System.String)"	"<param name=""warningCode""/>"
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogWarning(System.String,System.String,System.Int32,System.String)"	"<param name=""file""/>"
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogWarning(System.String,System.String,System.Int32,System.String)"	"<param name=""lineNumber""/>"
Method	"Drivers.Compiler.MSBuildTask.BuildTask.Logger_OnLogWarning(System.String,System.String,System.Int32,System.String)"	"<param name=""message""/>"
Property	Drivers.Compiler.MSBuildTask.BuildTask.OutputPath	<summary>
Property	Drivers.Compiler.MSBuildTask.BuildTask.OutputPath	<remarks>
Property	Drivers.Compiler.MSBuildTask.BuildTask.OutputPath	<value>
Property	Drivers.Compiler.MSBuildTask.BuildTask.TargetArchitecture	<summary>
Property	Drivers.Compiler.MSBuildTask.BuildTask.TargetArchitecture	<remarks>
Property	Drivers.Compiler.MSBuildTask.BuildTask.TargetArchitecture	<value>
Property	Drivers.Compiler.MSBuildTask.BuildTask.ToolsPath	<summary>
Property	Drivers.Compiler.MSBuildTask.BuildTask.ToolsPath	<remarks>
Property	Drivers.Compiler.MSBuildTask.BuildTask.ToolsPath	<value>
Namespace	Drivers.Compiler.Types	<summary>
Type	Drivers.Compiler.Types.FieldInfo	<summary>
Type	Drivers.Compiler.Types.FieldInfo	<remarks>
Method	Drivers.Compiler.Types.FieldInfo.#ctor	<remarks>
Property	Drivers.Compiler.Types.FieldInfo.FieldType	<summary>
Property	Drivers.Compiler.Types.FieldInfo.FieldType	<remarks>
Property	Drivers.Compiler.Types.FieldInfo.FieldType	<value>
Property	Drivers.Compiler.Types.FieldInfo.ID	<summary>
Property	Drivers.Compiler.Types.FieldInfo.ID	<remarks>
Property	Drivers.Compiler.Types.FieldInfo.ID	<value>
Property	Drivers.Compiler.Types.FieldInfo.IsStatic	<summary>
Property	Drivers.Compiler.Types.FieldInfo.IsStatic	<remarks>
Property	Drivers.Compiler.Types.FieldInfo.IsStatic	<value>
Property	Drivers.Compiler.Types.FieldInfo.Name	<summary>
Property	Drivers.Compiler.Types.FieldInfo.Name	<remarks>
Property	Drivers.Compiler.Types.FieldInfo.Name	<value>
Property	Drivers.Compiler.Types.FieldInfo.OffsetInBytes	<summary>
Property	Drivers.Compiler.Types.FieldInfo.OffsetInBytes	<remarks>
Property	Drivers.Compiler.Types.FieldInfo.OffsetInBytes	<value>
Method	Drivers.Compiler.Types.FieldInfo.ToString	<summary>
Method	Drivers.Compiler.Types.FieldInfo.ToString	<remarks>
Method	Drivers.Compiler.Types.FieldInfo.ToString	<returns>
Field	Drivers.Compiler.Types.FieldInfo.UnderlyingInfo	<summary>
Field	Drivers.Compiler.Types.FieldInfo.UnderlyingInfo	<remarks>
Type	Drivers.Compiler.Types.MethodInfo	<summary>
Type	Drivers.Compiler.Types.MethodInfo	<remarks>
Method	Drivers.Compiler.Types.MethodInfo.#ctor	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.ApplyDebug	<summary>
Property	Drivers.Compiler.Types.MethodInfo.ApplyDebug	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.ApplyDebug	<value>
Property	Drivers.Compiler.Types.MethodInfo.ApplyGC	<summary>
Property	Drivers.Compiler.Types.MethodInfo.ApplyGC	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.ApplyGC	<value>
Field	Drivers.Compiler.Types.MethodInfo.ArgumentInfos	<summary>
Field	Drivers.Compiler.Types.MethodInfo.ArgumentInfos	<remarks>
Method	Drivers.Compiler.Types.MethodInfo.CreateMethodID(System.String)	<summary>
Method	Drivers.Compiler.Types.MethodInfo.CreateMethodID(System.String)	<remarks>
Method	Drivers.Compiler.Types.MethodInfo.CreateMethodID(System.String)	<returns>
Method	Drivers.Compiler.Types.MethodInfo.CreateMethodID(System.String)	"<param name=""methodSignature""/>"
Method	Drivers.Compiler.Types.MethodInfo.GetMethodSignature(System.Reflection.MethodBase)	<summary>
Method	Drivers.Compiler.Types.MethodInfo.GetMethodSignature(System.Reflection.MethodBase)	<remarks>
Method	Drivers.Compiler.Types.MethodInfo.GetMethodSignature(System.Reflection.MethodBase)	<returns>
Method	Drivers.Compiler.Types.MethodInfo.GetMethodSignature(System.Reflection.MethodBase)	"<param name=""aMethod""/>"
Method	"Drivers.Compiler.Types.MethodInfo.GetMethodSignature(System.String,System.String,System.String,System.String[])"	<summary>
Method	"Drivers.Compiler.Types.MethodInfo.GetMethodSignature(System.String,System.String,System.String,System.String[])"	<remarks>
Method	"Drivers.Compiler.Types.MethodInfo.GetMethodSignature(System.String,System.String,System.String,System.String[])"	<returns>
Method	"Drivers.Compiler.Types.MethodInfo.GetMethodSignature(System.String,System.String,System.String,System.String[])"	"<param name=""returnType""/>"
Method	"Drivers.Compiler.Types.MethodInfo.GetMethodSignature(System.String,System.String,System.String,System.String[])"	"<param name=""declaringType""/>"
Method	"Drivers.Compiler.Types.MethodInfo.GetMethodSignature(System.String,System.String,System.String,System.String[])"	"<param name=""methodName""/>"
Method	"Drivers.Compiler.Types.MethodInfo.GetMethodSignature(System.String,System.String,System.String,System.String[])"	"<param name=""paramTypes""/>"
Field	Drivers.Compiler.Types.MethodInfo.id	<summary>
Field	Drivers.Compiler.Types.MethodInfo.id	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.ID	<summary>
Property	Drivers.Compiler.Types.MethodInfo.ID	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.ID	<value>
Field	Drivers.Compiler.Types.MethodInfo.IDValue	<summary>
Field	Drivers.Compiler.Types.MethodInfo.IDValue	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.IsConstructor	<summary>
Property	Drivers.Compiler.Types.MethodInfo.IsConstructor	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.IsConstructor	<value>
Property	Drivers.Compiler.Types.MethodInfo.IsPlugged	<summary>
Property	Drivers.Compiler.Types.MethodInfo.IsPlugged	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.IsPlugged	<value>
Property	Drivers.Compiler.Types.MethodInfo.IsStatic	<summary>
Property	Drivers.Compiler.Types.MethodInfo.IsStatic	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.IsStatic	<value>
Field	Drivers.Compiler.Types.MethodInfo.LocalInfos	<summary>
Field	Drivers.Compiler.Types.MethodInfo.LocalInfos	<remarks>
Field	Drivers.Compiler.Types.MethodInfo.methodBody	<summary>
Field	Drivers.Compiler.Types.MethodInfo.methodBody	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.MethodBody	<summary>
Property	Drivers.Compiler.Types.MethodInfo.MethodBody	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.MethodBody	<value>
Field	Drivers.Compiler.Types.MethodInfo.PlugAttribute	<summary>
Field	Drivers.Compiler.Types.MethodInfo.PlugAttribute	<remarks>
Field	Drivers.Compiler.Types.MethodInfo.Preprocessed	<summary>
Field	Drivers.Compiler.Types.MethodInfo.Preprocessed	<remarks>
Field	Drivers.Compiler.Types.MethodInfo.priority	<summary>
Field	Drivers.Compiler.Types.MethodInfo.priority	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.Priority	<summary>
Property	Drivers.Compiler.Types.MethodInfo.Priority	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.Priority	<value>
Field	Drivers.Compiler.Types.MethodInfo.signature	<summary>
Field	Drivers.Compiler.Types.MethodInfo.signature	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.Signature	<summary>
Property	Drivers.Compiler.Types.MethodInfo.Signature	<remarks>
Property	Drivers.Compiler.Types.MethodInfo.Signature	<value>
Method	Drivers.Compiler.Types.MethodInfo.ToString	<summary>
Method	Drivers.Compiler.Types.MethodInfo.ToString	<remarks>
Method	Drivers.Compiler.Types.MethodInfo.ToString	<returns>
Field	Drivers.Compiler.Types.MethodInfo.UnderlyingInfo	<summary>
Field	Drivers.Compiler.Types.MethodInfo.UnderlyingInfo	<remarks>
Type	Drivers.Compiler.Types.TypeInfo	<summary>
Type	Drivers.Compiler.Types.TypeInfo	<remarks>
Method	Drivers.Compiler.Types.TypeInfo.#ctor	<remarks>
Field	Drivers.Compiler.Types.TypeInfo.ContainsPlugs	<summary>
Field	Drivers.Compiler.Types.TypeInfo.ContainsPlugs	<remarks>
Field	Drivers.Compiler.Types.TypeInfo.FieldInfos	<summary>
Field	Drivers.Compiler.Types.TypeInfo.FieldInfos	<remarks>
Property	Drivers.Compiler.Types.TypeInfo.ID	<summary>
Property	Drivers.Compiler.Types.TypeInfo.ID	<remarks>
Property	Drivers.Compiler.Types.TypeInfo.ID	<value>
Property	Drivers.Compiler.Types.TypeInfo.IsGCManaged	<summary>
Property	Drivers.Compiler.Types.TypeInfo.IsGCManaged	<remarks>
Property	Drivers.Compiler.Types.TypeInfo.IsGCManaged	<value>
Property	Drivers.Compiler.Types.TypeInfo.IsPointer	<summary>
Property	Drivers.Compiler.Types.TypeInfo.IsPointer	<remarks>
Property	Drivers.Compiler.Types.TypeInfo.IsPointer	<value>
Property	Drivers.Compiler.Types.TypeInfo.IsValueType	<summary>
Property	Drivers.Compiler.Types.TypeInfo.IsValueType	<remarks>
Property	Drivers.Compiler.Types.TypeInfo.IsValueType	<value>
Field	Drivers.Compiler.Types.TypeInfo.MethodIDGenerator	<summary>
Field	Drivers.Compiler.Types.TypeInfo.MethodIDGenerator	<remarks>
Field	Drivers.Compiler.Types.TypeInfo.MethodInfos	<summary>
Field	Drivers.Compiler.Types.TypeInfo.MethodInfos	<remarks>
Field	Drivers.Compiler.Types.TypeInfo.Processed	<summary>
Field	Drivers.Compiler.Types.TypeInfo.Processed	<remarks>
Field	Drivers.Compiler.Types.TypeInfo.ProcessedFields	<summary>
Field	Drivers.Compiler.Types.TypeInfo.ProcessedFields	<remarks>
Property	Drivers.Compiler.Types.TypeInfo.SizeOnHeapInBytes	<summary>
Property	Drivers.Compiler.Types.TypeInfo.SizeOnHeapInBytes	<remarks>
Property	Drivers.Compiler.Types.TypeInfo.SizeOnHeapInBytes	<value>
Property	Drivers.Compiler.Types.TypeInfo.SizeOnStackInBytes	<summary>
Property	Drivers.Compiler.Types.TypeInfo.SizeOnStackInBytes	<remarks>
Property	Drivers.Compiler.Types.TypeInfo.SizeOnStackInBytes	<value>
Method	Drivers.Compiler.Types.TypeInfo.ToString	<summary>
Method	Drivers.Compiler.Types.TypeInfo.ToString	<remarks>
Method	Drivers.Compiler.Types.TypeInfo.ToString	<returns>
Field	Drivers.Compiler.Types.TypeInfo.UnderlyingType	<summary>
Field	Drivers.Compiler.Types.TypeInfo.UnderlyingType	<remarks>
Type	Drivers.Compiler.Types.TypeScanner	<summary>
Type	Drivers.Compiler.Types.TypeScanner	<remarks>
Method	Drivers.Compiler.Types.TypeScanner.GetIsGCManaged(System.Type)	<summary>
Method	Drivers.Compiler.Types.TypeScanner.GetIsGCManaged(System.Type)	<remarks>
Method	Drivers.Compiler.Types.TypeScanner.GetIsGCManaged(System.Type)	<returns>
Method	Drivers.Compiler.Types.TypeScanner.GetIsGCManaged(System.Type)	"<param name=""theType""/>"
Method	Drivers.Compiler.Types.TypeScanner.GetSizeOnHeapInBytes(System.Type)	<summary>
Method	Drivers.Compiler.Types.TypeScanner.GetSizeOnHeapInBytes(System.Type)	<remarks>
Method	Drivers.Compiler.Types.TypeScanner.GetSizeOnHeapInBytes(System.Type)	<returns>
Method	Drivers.Compiler.Types.TypeScanner.GetSizeOnHeapInBytes(System.Type)	"<param name=""theType""/>"
Method	Drivers.Compiler.Types.TypeScanner.GetSizeOnStackInBytes(System.Type)	<summary>
Method	Drivers.Compiler.Types.TypeScanner.GetSizeOnStackInBytes(System.Type)	<remarks>
Method	Drivers.Compiler.Types.TypeScanner.GetSizeOnStackInBytes(System.Type)	<returns>
Method	Drivers.Compiler.Types.TypeScanner.GetSizeOnStackInBytes(System.Type)	"<param name=""theType""/>"
Method	"Drivers.Compiler.Types.TypeScanner.ProcessType(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	<summary>
Method	"Drivers.Compiler.Types.TypeScanner.ProcessType(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	<remarks>
Method	"Drivers.Compiler.Types.TypeScanner.ProcessType(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.Types.TypeScanner.ProcessType(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	"<param name=""theTypeInfo""/>"
Method	"Drivers.Compiler.Types.TypeScanner.ProcessTypeFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	<summary>
Method	"Drivers.Compiler.Types.TypeScanner.ProcessTypeFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	<remarks>
Method	"Drivers.Compiler.Types.TypeScanner.ProcessTypeFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.Types.TypeScanner.ProcessTypeFields(Drivers.Compiler.IL.ILLibrary,Drivers.Compiler.Types.TypeInfo)"	"<param name=""theTypeInfo""/>"
Method	"Drivers.Compiler.Types.TypeScanner.ScanType(Drivers.Compiler.IL.ILLibrary,System.Type)"	<summary>
Method	"Drivers.Compiler.Types.TypeScanner.ScanType(Drivers.Compiler.IL.ILLibrary,System.Type)"	<remarks>
Method	"Drivers.Compiler.Types.TypeScanner.ScanType(Drivers.Compiler.IL.ILLibrary,System.Type)"	<returns>
Method	"Drivers.Compiler.Types.TypeScanner.ScanType(Drivers.Compiler.IL.ILLibrary,System.Type)"	"<param name=""TheLibrary""/>"
Method	"Drivers.Compiler.Types.TypeScanner.ScanType(Drivers.Compiler.IL.ILLibrary,System.Type)"	"<param name=""aType""/>"
Method	Drivers.Compiler.Types.TypeScanner.ScanTypes(Drivers.Compiler.IL.ILLibrary)	<summary>
Method	Drivers.Compiler.Types.TypeScanner.ScanTypes(Drivers.Compiler.IL.ILLibrary)	<remarks>
Method	Drivers.Compiler.Types.TypeScanner.ScanTypes(Drivers.Compiler.IL.ILLibrary)	"<param name=""TheLibrary""/>"
Type	Drivers.Compiler.Types.VariableInfo	<summary>
Type	Drivers.Compiler.Types.VariableInfo	<remarks>
Method	Drivers.Compiler.Types.VariableInfo.#ctor	<remarks>
Field	Drivers.Compiler.Types.VariableInfo.Offset	<summary>
Field	Drivers.Compiler.Types.VariableInfo.Offset	<remarks>
Field	Drivers.Compiler.Types.VariableInfo.Position	<summary>
Field	Drivers.Compiler.Types.VariableInfo.Position	<remarks>
Field	Drivers.Compiler.Types.VariableInfo.TheTypeInfo	<summary>
Field	Drivers.Compiler.Types.VariableInfo.TheTypeInfo	<remarks>
Method	Drivers.Compiler.Types.VariableInfo.ToString	<summary>
Method	Drivers.Compiler.Types.VariableInfo.ToString	<remarks>
Method	Drivers.Compiler.Types.VariableInfo.ToString	<returns>
Field	Drivers.Compiler.Types.VariableInfo.UnderlyingType	<summary>
Field	Drivers.Compiler.Types.VariableInfo.UnderlyingType	<remarks>
Namespace	Drivers.Framework	<summary>
Type	Drivers.Framework.TestClass	<summary>
Type	Drivers.Framework.TestClass	<remarks>
Method	Drivers.Framework.TestClass.#cctor	<remarks>
Method	Drivers.Framework.TestClass.CallStaticConstructors	<summary>
Method	Drivers.Framework.TestClass.CallStaticConstructors	<remarks>
Method	Drivers.Framework.TestClass.Halt	<summary>
Method	Drivers.Framework.TestClass.Halt	<remarks>
Method	Drivers.Framework.TestClass.Test	<summary>
Method	Drivers.Framework.TestClass.Test	<remarks>
Namespace	ISO9660Generator	<summary>
Type	ISO9660Generator.Program	<summary>
Type	ISO9660Generator.Program	<remarks>
Method	ISO9660Generator.Program.#ctor	<remarks>
Method	ISO9660Generator.Program.Main(System.String[])	<summary>
Method	ISO9660Generator.Program.Main(System.String[])	<remarks>
Method	ISO9660Generator.Program.Main(System.String[])	"<param name=""args""/>"
Type	Kernel.BasicConsole	<remarks>
Method	Kernel.BasicConsole.#cctor	<remarks>
Field	Kernel.BasicConsole.bg_colour	<remarks>
Method	Kernel.BasicConsole.Clear	<remarks>
Field	Kernel.BasicConsole.colour	<remarks>
Field	Kernel.BasicConsole.cols	<remarks>
Field	Kernel.BasicConsole.default_colour	<remarks>
Method	Kernel.BasicConsole.DelayOutput(System.Int32)	<remarks>
Field	Kernel.BasicConsole.DisableDelayOutput	<remarks>
Method	"Kernel.BasicConsole.DumpMemory(System.Void*,System.Int32)"	<summary>
Method	"Kernel.BasicConsole.DumpMemory(System.Void*,System.Int32)"	<remarks>
Method	"Kernel.BasicConsole.DumpMemory(System.Void*,System.Int32)"	"<param name=""ptr""/>"
Method	"Kernel.BasicConsole.DumpMemory(System.Void*,System.Int32)"	"<param name=""size""/>"
Field	Kernel.BasicConsole.error_colour	<remarks>
Method	Kernel.BasicConsole.Init	<remarks>
Field	Kernel.BasicConsole.Initialised	<summary>
Field	Kernel.BasicConsole.Initialised	<remarks>
Field	Kernel.BasicConsole.offset	<remarks>
Property	Kernel.BasicConsole.Offset	<remarks>
Property	Kernel.BasicConsole.Offset	<value>
Method	Kernel.BasicConsole.PrintTestString	<remarks>
Field	Kernel.BasicConsole.rows	<remarks>
Method	Kernel.BasicConsole.SetBgColour(System.Char)	<remarks>
Method	Kernel.BasicConsole.SetTextColour(System.Char)	<remarks>
Field	Kernel.BasicConsole.vidMemBasePtr	<remarks>
Field	Kernel.BasicConsole.warning_colour	<remarks>
Method	Kernel.BasicConsole.WriteLine	<remarks>
Field	Kernel.ExceptionHandlerInfo.EBP	<remarks>
Field	Kernel.ExceptionHandlerInfo.ESP	<remarks>
Field	Kernel.ExceptionHandlerInfo.Ex	<summary>
Field	Kernel.ExceptionHandlerInfo.Ex	<remarks>
Field	Kernel.ExceptionHandlerInfo.ExPending	<summary>
Field	Kernel.ExceptionHandlerInfo.ExPending	<remarks>
Field	Kernel.ExceptionHandlerInfo.FilterAddress	<remarks>
Field	Kernel.ExceptionHandlerInfo.HandlerAddress	<remarks>
Field	Kernel.ExceptionHandlerInfo.InHandler	<remarks>
Field	Kernel.ExceptionHandlerInfo.PrevHandlerPtr	<remarks>
Type	Kernel.ExceptionMethods	<remarks>
Method	Kernel.ExceptionMethods.#cctor	<remarks>
Method	"Kernel.ExceptionMethods.AddExceptionHandlerInfo(System.Void*,System.Void*)"	<remarks>
Method	"Kernel.ExceptionMethods.ArbitaryReturn(System.UInt32,System.UInt32,System.Byte*)"	<summary>
Method	"Kernel.ExceptionMethods.ArbitaryReturn(System.UInt32,System.UInt32,System.Byte*)"	<remarks>
Method	"Kernel.ExceptionMethods.ArbitaryReturn(System.UInt32,System.UInt32,System.Byte*)"	"<param name=""EBP""/>"
Method	"Kernel.ExceptionMethods.ArbitaryReturn(System.UInt32,System.UInt32,System.Byte*)"	"<param name=""ESP""/>"
Method	"Kernel.ExceptionMethods.ArbitaryReturn(System.UInt32,System.UInt32,System.Byte*)"	"<param name=""RetAddr""/>"
Property	Kernel.ExceptionMethods.BasePointer	<summary>
Property	Kernel.ExceptionMethods.BasePointer	<remarks>
Property	Kernel.ExceptionMethods.BasePointer	<value>
Property	Kernel.ExceptionMethods.CurrentException	<summary>
Property	Kernel.ExceptionMethods.CurrentException	<remarks>
Property	Kernel.ExceptionMethods.CurrentException	<value>
Field	Kernel.ExceptionMethods.DefaultState	<summary>
Field	Kernel.ExceptionMethods.DefaultState	<remarks>
Method	Kernel.ExceptionMethods.GetEIP	<summary>
Method	Kernel.ExceptionMethods.GetEIP	<remarks>
Field	Kernel.ExceptionMethods.HaltReason	<remarks>
Method	Kernel.ExceptionMethods.HandleEndFinally	<remarks>
Method	Kernel.ExceptionMethods.HandleException	<remarks>
Method	Kernel.ExceptionMethods.HandleLeave(System.Void*)	<remarks>
Method	Kernel.ExceptionMethods.Rethrow	<remarks>
Method	"Kernel.ExceptionMethods.ShiftStack(System.Byte*,System.UInt32)"	<summary>
Method	"Kernel.ExceptionMethods.ShiftStack(System.Byte*,System.UInt32)"	<remarks>
Method	"Kernel.ExceptionMethods.ShiftStack(System.Byte*,System.UInt32)"	"<param name=""From_High""/>"
Method	"Kernel.ExceptionMethods.ShiftStack(System.Byte*,System.UInt32)"	"<param name=""Dist""/>"
Property	Kernel.ExceptionMethods.StackPointer	<summary>
Property	Kernel.ExceptionMethods.StackPointer	<remarks>
Property	Kernel.ExceptionMethods.StackPointer	<value>
Field	Kernel.ExceptionMethods.State	<summary>
Field	Kernel.ExceptionMethods.State	<remarks>
Field	Kernel.ExceptionMethods.ThePageFaultHandler	<summary>
Field	Kernel.ExceptionMethods.ThePageFaultHandler	<remarks>
Method	Kernel.ExceptionMethods.Throw(Kernel.FOS_System.Exception)	<remarks>
Method	"Kernel.ExceptionMethods.Throw_DoubleFaultException(System.UInt32,System.UInt32)"	"<param name=""address""/>"
Method	"Kernel.ExceptionMethods.Throw_DoubleFaultException(System.UInt32,System.UInt32)"	"<param name=""errorCode""/>"
Method	"Kernel.ExceptionMethods.Throw_PageFaultException(System.UInt32,System.UInt32,System.UInt32)"	"<param name=""eip""/>"
Field	Kernel.ExceptionMethods.Throw_PanicMessage	<remarks>
Method	Kernel.ExceptionMethods.ThrowFromPtr(System.UInt32*)	<remarks>
Field	Kernel.ExceptionMethods.UnhandledException_PanicMessage	<remarks>
Type	Kernel.ExceptionMethods.AddExceptionHandlerInfo_EntryStackState	<summary>
Type	Kernel.ExceptionMethods.AddExceptionHandlerInfo_EntryStackState	<remarks>
Field	Kernel.ExceptionMethods.AddExceptionHandlerInfo_EntryStackState.EBP	<summary>
Field	Kernel.ExceptionMethods.AddExceptionHandlerInfo_EntryStackState.EBP	<remarks>
Field	Kernel.ExceptionMethods.AddExceptionHandlerInfo_EntryStackState.FilterPtr	<summary>
Field	Kernel.ExceptionMethods.AddExceptionHandlerInfo_EntryStackState.FilterPtr	<remarks>
Field	Kernel.ExceptionMethods.AddExceptionHandlerInfo_EntryStackState.HandlerPtr	<summary>
Field	Kernel.ExceptionMethods.AddExceptionHandlerInfo_EntryStackState.HandlerPtr	<remarks>
Field	Kernel.ExceptionMethods.AddExceptionHandlerInfo_EntryStackState.RetAddr	<summary>
Field	Kernel.ExceptionMethods.AddExceptionHandlerInfo_EntryStackState.RetAddr	<remarks>
Type	Kernel.ExceptionState	<summary>
Type	Kernel.ExceptionState	<remarks>
Field	Kernel.ExceptionState.CurrentHandlerPtr	<summary>
Field	Kernel.ExceptionState.CurrentHandlerPtr	<remarks>
Type	Kernel.Kernel	<remarks>
Method	Kernel.Kernel.#cctor	<remarks>
Method	Kernel.Kernel.CallStaticConstructors	<remarks>
Method	Kernel.Kernel.GetESP	<summary>
Method	Kernel.Kernel.GetESP	<remarks>
Method	Kernel.Kernel.GetESP	<returns>
Method	Kernel.Kernel.GetKernelStackPtr	<summary>
Method	Kernel.Kernel.GetKernelStackPtr	<remarks>
Method	Kernel.Kernel.GetKernelStackPtr	<returns>
Method	Kernel.Kernel.GetManagedMainMethodPtr	<summary>
Method	Kernel.Kernel.GetManagedMainMethodPtr	<remarks>
Method	Kernel.Kernel.GetManagedMainMethodPtr	<returns>
Method	Kernel.Kernel.GetStackValue(System.UInt32)	<summary>
Method	Kernel.Kernel.GetStackValue(System.UInt32)	<remarks>
Method	Kernel.Kernel.GetStackValue(System.UInt32)	<returns>
Method	Kernel.Kernel.GetStackValue(System.UInt32)	"<param name=""offset""/>"
Method	Kernel.Kernel.Halt(System.UInt32)	<remarks>
Method	Kernel.Kernel.Main	<remarks>
Method	Kernel.Kernel.ManagedMain	<remarks>
Method	"Kernel.Kernel.OutputAddressDetectedMethod(System.UInt32,System.UInt32)"	<summary>
Method	"Kernel.Kernel.OutputAddressDetectedMethod(System.UInt32,System.UInt32)"	<remarks>
Method	"Kernel.Kernel.OutputAddressDetectedMethod(System.UInt32,System.UInt32)"	"<param name=""EIP""/>"
Method	"Kernel.Kernel.OutputAddressDetectedMethod(System.UInt32,System.UInt32)"	"<param name=""OpNum""/>"
Method	Kernel.Kernel.OutputCurrentExceptionInfo	<remarks>
Method	Kernel.Kernel.OutputDivider	<remarks>
Type	Kernel.PageFaultHandler	<summary>
Type	Kernel.PageFaultHandler	<remarks>
Type	Kernel.PreReqs	<remarks>
Method	Kernel.PreReqs.#cctor	<remarks>
Method	Kernel.PreReqs.HandleNoMultiboot	<remarks>
Method	Kernel.PreReqs.InitGDT	<remarks>
Method	Kernel.PreReqs.InitIDT	<remarks>
Method	Kernel.PreReqs.InitStack	<remarks>
Method	Kernel.PreReqs.Kernel_Start	<remarks>
Method	Kernel.PreReqs.MainEntrypoint	<remarks>
Method	Kernel.PreReqs.MultibootSignature	<remarks>
Method	Kernel.PreReqs.PageFaultDetection	<summary>
Method	Kernel.PreReqs.PageFaultDetection	<remarks>
Field	Kernel.PreReqs.PageFaultDetection_ErrorString	<summary>
Field	Kernel.PreReqs.PageFaultDetection_ErrorString	<remarks>
Field	Kernel.PreReqs.PageFaultDetection_Initialised	<summary>
Field	Kernel.PreReqs.PageFaultDetection_Initialised	<remarks>
Field	Kernel.PreReqs.PageFaultDetection_LoopPrevention	<summary>
Field	Kernel.PreReqs.PageFaultDetection_LoopPrevention	<remarks>
Field	Kernel.PreReqs.PageFaultDetection_SeparatorString	<summary>
Field	Kernel.PreReqs.PageFaultDetection_SeparatorString	<remarks>
Method	Kernel.PreReqs.Reset	<remarks>
Method	Kernel.PreReqs.VirtualMemInit	<remarks>
Method	"Kernel.PreReqs.WriteDebugVideo(System.String,System.UInt32)"	<remarks>
Type	Kernel.Core.CommandDescription	<remarks>
Method	Kernel.Core.CommandDescription.#ctor	<remarks>
Field	Kernel.Core.CommandDescription.CommandName	<summary>
Field	Kernel.Core.CommandDescription.CommandName	<remarks>
Field	Kernel.Core.CommandDescription.CommandNameLower	<summary>
Field	Kernel.Core.CommandDescription.CommandNameLower	<remarks>
Field	Kernel.Core.CommandDescription.Description	<summary>
Field	Kernel.Core.CommandDescription.Description	<remarks>
Type	Kernel.Core.CommandHelp	<remarks>
Method	Kernel.Core.CommandHelp.#cctor	<remarks>
Field	Kernel.Core.CommandHelp.CommandDescriptions	<summary>
Field	Kernel.Core.CommandHelp.CommandDescriptions	<remarks>
Method	Kernel.Core.CommandHelp.GetCommandDescription(Kernel.FOS_System.String)	<remarks>
Type	Kernel.Core.Console	<remarks>
Method	Kernel.Core.Console.#ctor	<remarks>
Method	Kernel.Core.Console.Beep	<remarks>
Method	"Kernel.Core.Console.Beep(System.Int32,System.UInt32)"	<remarks>
Field	Kernel.Core.Console.Buffer	<remarks>
Method	Kernel.Core.Console.CleanDefault	<remarks>
Method	Kernel.Core.Console.Clear	<remarks>
Method	Kernel.Core.Console.Colour(System.Byte)	<remarks>
Method	Kernel.Core.Console.CreateBlankLine	<remarks>
Field	Kernel.Core.Console.CurrentAttr	<remarks>
Field	Kernel.Core.Console.CurrentChar	<remarks>
Field	Kernel.Core.Console.CurrentLine	<remarks>
Field	Kernel.Core.Console.Default	<remarks>
Method	Kernel.Core.Console.DefaultColour	<remarks>
Method	Kernel.Core.Console.ErrorColour	<remarks>
Method	Kernel.Core.Console.GetDisplayOffset_Char	<remarks>
Method	Kernel.Core.Console.GetDisplayOffset_Line	<remarks>
Method	Kernel.Core.Console.InitDefault	<remarks>
Field	Kernel.Core.Console.LineLength	<remarks>
Field	Kernel.Core.Console.MaxBufferSize	<remarks>
Method	Kernel.Core.Console.Read	<remarks>
Method	Kernel.Core.Console.ReadKey	<remarks>
Method	Kernel.Core.Console.ReadKey(System.Boolean)	<remarks>
Method	Kernel.Core.Console.ReadLine	<remarks>
Field	Kernel.Core.Console.ScreenHeightInLines	<summary>
Field	Kernel.Core.Console.ScreenHeightInLines	<remarks>
Field	Kernel.Core.Console.ScreenLineWidth	<summary>
Field	Kernel.Core.Console.ScreenLineWidth	<remarks>
Field	Kernel.Core.Console.ScreenStartLine	<summary>
Field	Kernel.Core.Console.ScreenStartLine	<remarks>
Field	Kernel.Core.Console.ScreenStartLineOffset	<summary>
Field	Kernel.Core.Console.ScreenStartLineOffset	<remarks>
Method	Kernel.Core.Console.Scroll(System.Int32)	<remarks>
Method	"Kernel.Core.Console.SetCursorPosition(System.UInt16,System.UInt16)"	<remarks>
Method	Kernel.Core.Console.Update	<remarks>
Field	Kernel.Core.Console.UpdateCursorPosition	<summary>
Field	Kernel.Core.Console.UpdateCursorPosition	<remarks>
Method	Kernel.Core.Console.WarningColour	<remarks>
Method	Kernel.Core.Console.Write(Kernel.FOS_System.String)	<remarks>
Method	Kernel.Core.Console.Write_AsDecimal(System.Int32)	<remarks>
Method	Kernel.Core.Console.Write_AsDecimal(System.UInt32)	<remarks>
Method	Kernel.Core.Console.WriteLine	<remarks>
Method	Kernel.Core.Console.WriteLine(Kernel.FOS_System.String)	<remarks>
Method	Kernel.Core.Console.WriteLine_AsDecimal(System.Int32)	<remarks>
Method	Kernel.Core.Console.WriteLine_AsDecimal(System.UInt32)	<remarks>
Type	Kernel.Core.Shell	<remarks>
Method	Kernel.Core.Shell.#ctor	<remarks>
Field	Kernel.Core.Shell.console	<remarks>
Field	Kernel.Core.Shell.Default	<remarks>
Method	Kernel.Core.Shell.Execute	<remarks>
Method	Kernel.Core.Shell.InitDefault	<remarks>
Method	Kernel.Core.Shell.OutputDivider	<remarks>
Method	Kernel.Core.Shell.OutputExceptionInfo(Kernel.FOS_System.Exception)	<remarks>
Method	Kernel.Core.Shell.OutputExceptionInfo(Kernel.FOS_System.Exception)	"<param name=""Ex""/>"
Field	Kernel.Core.Shell.terminating	<remarks>
Property	Kernel.Core.Shell.Terminating	<remarks>
Property	Kernel.Core.Shell.Terminating	<value>
Type	Kernel.Core.Consoles.AdvancedConsole	<remarks>
Method	Kernel.Core.Consoles.AdvancedConsole.#ctor	<remarks>
Field	Kernel.Core.Consoles.AdvancedConsole.CursorCmdPort	<remarks>
Field	Kernel.Core.Consoles.AdvancedConsole.CursorDataPort	<remarks>
Method	Kernel.Core.Consoles.AdvancedConsole.DrawBottomBorder	<summary>
Method	Kernel.Core.Consoles.AdvancedConsole.DrawBottomBorder	<remarks>
Method	Kernel.Core.Consoles.AdvancedConsole.DrawLeftBorder	<summary>
Method	Kernel.Core.Consoles.AdvancedConsole.DrawLeftBorder	<remarks>
Method	Kernel.Core.Consoles.AdvancedConsole.GetDisplayOffset_Char	<remarks>
Method	Kernel.Core.Consoles.AdvancedConsole.GetDisplayOffset_Line	<remarks>
Method	"Kernel.Core.Consoles.AdvancedConsole.SetCursorPosition(System.UInt16,System.UInt16)"	<remarks>
Method	Kernel.Core.Consoles.AdvancedConsole.Update	<remarks>
Property	Kernel.Core.Consoles.AdvancedConsole.vidMemBasePtr	<remarks>
Property	Kernel.Core.Consoles.AdvancedConsole.vidMemBasePtr	<value>
Namespace	Kernel.Core.Processes	<summary>
Type	Kernel.Core.Processes.DynamicLinkerLoader	<summary>
Type	Kernel.Core.Processes.DynamicLinkerLoader	<remarks>
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadLibrary_FromELFSO(Kernel.FOS_System.IO.File,Kernel.Core.Processes.ELF.ELFProcess)"	<summary>
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadLibrary_FromELFSO(Kernel.FOS_System.IO.File,Kernel.Core.Processes.ELF.ELFProcess)"	<remarks>
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadLibrary_FromELFSO(Kernel.FOS_System.IO.File,Kernel.Core.Processes.ELF.ELFProcess)"	<returns>
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadLibrary_FromELFSO(Kernel.FOS_System.IO.File,Kernel.Core.Processes.ELF.ELFProcess)"	"<param name=""ELFSharedObjectFile""/>"
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadLibrary_FromELFSO(Kernel.FOS_System.IO.File,Kernel.Core.Processes.ELF.ELFProcess)"	"<param name=""theProcess""/>"
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadProcess_FromELFExe(Kernel.FOS_System.IO.File,System.Boolean)"	<summary>
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadProcess_FromELFExe(Kernel.FOS_System.IO.File,System.Boolean)"	<remarks>
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadProcess_FromELFExe(Kernel.FOS_System.IO.File,System.Boolean)"	<returns>
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadProcess_FromELFExe(Kernel.FOS_System.IO.File,System.Boolean)"	"<param name=""ELFExeFile""/>"
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadProcess_FromELFExe(Kernel.FOS_System.IO.File,System.Boolean)"	"<param name=""UserMode""/>"
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadProcess_FromRawExe(Kernel.FOS_System.IO.File,System.Boolean)"	<summary>
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadProcess_FromRawExe(Kernel.FOS_System.IO.File,System.Boolean)"	<remarks>
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadProcess_FromRawExe(Kernel.FOS_System.IO.File,System.Boolean)"	<returns>
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadProcess_FromRawExe(Kernel.FOS_System.IO.File,System.Boolean)"	"<param name=""RawExeFile""/>"
Method	"Kernel.Core.Processes.DynamicLinkerLoader.LoadProcess_FromRawExe(Kernel.FOS_System.IO.File,System.Boolean)"	"<param name=""UserMode""/>"
Type	Kernel.Core.Processes.SystemCall	<summary>
Type	Kernel.Core.Processes.SystemCall	<remarks>
Type	Kernel.Core.Processes.SystemCalls	<summary>
Type	Kernel.Core.Processes.SystemCalls	<remarks>
Method	Kernel.Core.Processes.SystemCalls.#cctor	<remarks>
Method	Kernel.Core.Processes.SystemCalls.Init	<summary>
Method	Kernel.Core.Processes.SystemCalls.Init	<remarks>
Method	Kernel.Core.Processes.SystemCalls.Int48(Kernel.FOS_System.Object)	<summary>
Method	Kernel.Core.Processes.SystemCalls.Int48(Kernel.FOS_System.Object)	<remarks>
Method	Kernel.Core.Processes.SystemCalls.Int48(Kernel.FOS_System.Object)	"<param name=""state""/>"
Field	Kernel.Core.Processes.SystemCalls.Int48HandlerId	<summary>
Field	Kernel.Core.Processes.SystemCalls.Int48HandlerId	<remarks>
Field	Kernel.Core.Processes.SystemCalls.param1	<summary>
Field	Kernel.Core.Processes.SystemCalls.param1	<remarks>
Property	Kernel.Core.Processes.SystemCalls.Param1	<summary>
Property	Kernel.Core.Processes.SystemCalls.Param1	<remarks>
Property	Kernel.Core.Processes.SystemCalls.Param1	<value>
Field	Kernel.Core.Processes.SystemCalls.param2	<summary>
Field	Kernel.Core.Processes.SystemCalls.param2	<remarks>
Property	Kernel.Core.Processes.SystemCalls.Param2	<summary>
Property	Kernel.Core.Processes.SystemCalls.Param2	<remarks>
Property	Kernel.Core.Processes.SystemCalls.Param2	<value>
Field	Kernel.Core.Processes.SystemCalls.param3	<summary>
Field	Kernel.Core.Processes.SystemCalls.param3	<remarks>
Property	Kernel.Core.Processes.SystemCalls.Param3	<summary>
Property	Kernel.Core.Processes.SystemCalls.Param3	<remarks>
Property	Kernel.Core.Processes.SystemCalls.Param3	<value>
Property	Kernel.Core.Processes.SystemCalls.Return1	<summary>
Property	Kernel.Core.Processes.SystemCalls.Return1	<remarks>
Property	Kernel.Core.Processes.SystemCalls.Return1	<value>
Property	Kernel.Core.Processes.SystemCalls.Return2	<summary>
Property	Kernel.Core.Processes.SystemCalls.Return2	<remarks>
Property	Kernel.Core.Processes.SystemCalls.Return2	<value>
Property	Kernel.Core.Processes.SystemCalls.Return3	<summary>
Property	Kernel.Core.Processes.SystemCalls.Return3	<remarks>
Property	Kernel.Core.Processes.SystemCalls.Return3	<value>
Property	Kernel.Core.Processes.SystemCalls.Return4	<summary>
Property	Kernel.Core.Processes.SystemCalls.Return4	<remarks>
Property	Kernel.Core.Processes.SystemCalls.Return4	<value>
Method	"Kernel.Core.Processes.SystemCalls.SysCall_PlayNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	<summary>
Method	"Kernel.Core.Processes.SystemCalls.SysCall_PlayNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	<remarks>
Method	"Kernel.Core.Processes.SystemCalls.SysCall_PlayNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	"<param name=""note""/>"
Method	"Kernel.Core.Processes.SystemCalls.SysCall_PlayNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	"<param name=""duration""/>"
Method	"Kernel.Core.Processes.SystemCalls.SysCall_PlayNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	"<param name=""bpm""/>"
Method	Kernel.Core.Processes.SystemCalls.SysCall_Sleep(System.Int32)	<summary>
Method	Kernel.Core.Processes.SystemCalls.SysCall_Sleep(System.Int32)	<remarks>
Method	Kernel.Core.Processes.SystemCalls.SysCall_Sleep(System.Int32)	"<param name=""ms""/>"
Field	Kernel.Core.Processes.SystemCalls.sysCallNum	<summary>
Field	Kernel.Core.Processes.SystemCalls.sysCallNum	<remarks>
Property	Kernel.Core.Processes.SystemCalls.SysCallNumber	<summary>
Property	Kernel.Core.Processes.SystemCalls.SysCallNumber	<remarks>
Property	Kernel.Core.Processes.SystemCalls.SysCallNumber	<value>
Namespace	Kernel.Core.Processes.ELF	<summary>
Type	Kernel.Core.Processes.ELF.ELFDataEncoding	<summary>
Type	Kernel.Core.Processes.ELF.ELFDataEncoding	<remarks>
Type	Kernel.Core.Processes.ELF.ELFDynamicSection	<summary>
Type	Kernel.Core.Processes.ELF.ELFDynamicSection	<remarks>
Method	Kernel.Core.Processes.ELF.ELFDynamicSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFDynamicSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	"<param name=""header""/>"
Field	Kernel.Core.Processes.ELF.ELFDynamicSection.dynamics	<summary>
Field	Kernel.Core.Processes.ELF.ELFDynamicSection.dynamics	<remarks>
Property	Kernel.Core.Processes.ELF.ELFDynamicSection.Dynamics	<summary>
Property	Kernel.Core.Processes.ELF.ELFDynamicSection.Dynamics	<remarks>
Property	Kernel.Core.Processes.ELF.ELFDynamicSection.Dynamics	<value>
Property	Kernel.Core.Processes.ELF.ELFDynamicSection.Item(System.UInt32)	<summary>
Property	Kernel.Core.Processes.ELF.ELFDynamicSection.Item(System.UInt32)	<remarks>
Property	Kernel.Core.Processes.ELF.ELFDynamicSection.Item(System.UInt32)	<value>
Method	Kernel.Core.Processes.ELF.ELFDynamicSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<summary>
Method	Kernel.Core.Processes.ELF.ELFDynamicSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFDynamicSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<returns>
Method	Kernel.Core.Processes.ELF.ELFDynamicSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	"<param name=""stream""/>"
Property	Kernel.Core.Processes.ELF.ELFDynamicSection.StrTabDynamic	<summary>
Property	Kernel.Core.Processes.ELF.ELFDynamicSection.StrTabDynamic	<remarks>
Property	Kernel.Core.Processes.ELF.ELFDynamicSection.StrTabDynamic	<value>
Property	Kernel.Core.Processes.ELF.ELFDynamicSection.StrTabSizeDynamic	<summary>
Property	Kernel.Core.Processes.ELF.ELFDynamicSection.StrTabSizeDynamic	<remarks>
Property	Kernel.Core.Processes.ELF.ELFDynamicSection.StrTabSizeDynamic	<value>
Type	Kernel.Core.Processes.ELF.ELFDynamicSection.Dynamic	<summary>
Type	Kernel.Core.Processes.ELF.ELFDynamicSection.Dynamic	<remarks>
Method	Kernel.Core.Processes.ELF.ELFDynamicSection.Dynamic.#ctor	<remarks>
Field	Kernel.Core.Processes.ELF.ELFDynamicSection.Dynamic.Tag	<summary>
Field	Kernel.Core.Processes.ELF.ELFDynamicSection.Dynamic.Tag	<remarks>
Field	Kernel.Core.Processes.ELF.ELFDynamicSection.Dynamic.Val_Ptr	<summary>
Field	Kernel.Core.Processes.ELF.ELFDynamicSection.Dynamic.Val_Ptr	<remarks>
Type	Kernel.Core.Processes.ELF.ELFDynamicSection.DynamicTag	<summary>
Type	Kernel.Core.Processes.ELF.ELFDynamicSection.DynamicTag	<remarks>
Type	Kernel.Core.Processes.ELF.ELFDynamicSymbolTableSection	<summary>
Type	Kernel.Core.Processes.ELF.ELFDynamicSymbolTableSection	<remarks>
Method	Kernel.Core.Processes.ELF.ELFDynamicSymbolTableSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFDynamicSymbolTableSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	"<param name=""header""/>"
Type	Kernel.Core.Processes.ELF.ELFFile	<summary>
Type	Kernel.Core.Processes.ELF.ELFFile	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.#ctor(Kernel.FOS_System.IO.File)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.#ctor(Kernel.FOS_System.IO.File)	"<param name=""file""/>"
Field	Kernel.Core.Processes.ELF.ELFFile.baseAddress	<summary>
Field	Kernel.Core.Processes.ELF.ELFFile.baseAddress	<remarks>
Property	Kernel.Core.Processes.ELF.ELFFile.BaseAddress	<summary>
Property	Kernel.Core.Processes.ELF.ELFFile.BaseAddress	<remarks>
Property	Kernel.Core.Processes.ELF.ELFFile.BaseAddress	<value>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckDataEncoding	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckDataEncoding	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckDataEncoding	<returns>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckFileClass	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckFileClass	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckFileClass	<returns>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckFileType	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckFileType	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckFileType	<returns>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckMachine	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckMachine	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckMachine	<returns>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckSiganture	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckSiganture	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.CheckSiganture	<returns>
Field	Kernel.Core.Processes.ELF.ELFFile.DynamicSection	<summary>
Field	Kernel.Core.Processes.ELF.ELFFile.DynamicSection	<remarks>
Field	Kernel.Core.Processes.ELF.ELFFile.DynamicSymbolsSection	<summary>
Field	Kernel.Core.Processes.ELF.ELFFile.DynamicSymbolsSection	<remarks>
Field	Kernel.Core.Processes.ELF.ELFFile.FoundBaseAddress	<summary>
Field	Kernel.Core.Processes.ELF.ELFFile.FoundBaseAddress	<remarks>
Field	Kernel.Core.Processes.ELF.ELFFile.header	<summary>
Field	Kernel.Core.Processes.ELF.ELFFile.header	<remarks>
Property	Kernel.Core.Processes.ELF.ELFFile.Header	<summary>
Property	Kernel.Core.Processes.ELF.ELFFile.Header	<remarks>
Property	Kernel.Core.Processes.ELF.ELFFile.Header	<value>
Method	Kernel.Core.Processes.ELF.ELFFile.IsExecutable	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.IsExecutable	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.IsExecutable	<returns>
Method	Kernel.Core.Processes.ELF.ELFFile.IsSharedObject	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.IsSharedObject	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.IsSharedObject	<returns>
Method	Kernel.Core.Processes.ELF.ELFFile.IsValidFile	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.IsValidFile	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.IsValidFile	<returns>
Method	Kernel.Core.Processes.ELF.ELFFile.LoadExecutable(System.Boolean)	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.LoadExecutable(System.Boolean)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.LoadExecutable(System.Boolean)	<returns>
Method	Kernel.Core.Processes.ELF.ELFFile.LoadExecutable(System.Boolean)	"<param name=""UserMode""/>"
Method	Kernel.Core.Processes.ELF.ELFFile.LoadSharedObject(Kernel.Core.Processes.ELF.ELFProcess)	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.LoadSharedObject(Kernel.Core.Processes.ELF.ELFProcess)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.LoadSharedObject(Kernel.Core.Processes.ELF.ELFProcess)	<returns>
Method	Kernel.Core.Processes.ELF.ELFFile.LoadSharedObject(Kernel.Core.Processes.ELF.ELFProcess)	"<param name=""theProcess""/>"
Field	Kernel.Core.Processes.ELF.ELFFile.NamesTable	<summary>
Field	Kernel.Core.Processes.ELF.ELFFile.NamesTable	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.ReadHeader	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.ReadHeader	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.ReadSectionHeaders	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.ReadSectionHeaders	<remarks>
Method	Kernel.Core.Processes.ELF.ELFFile.ReadSegmentHeaders	<summary>
Method	Kernel.Core.Processes.ELF.ELFFile.ReadSegmentHeaders	<remarks>
Field	Kernel.Core.Processes.ELF.ELFFile.Sections	<summary>
Field	Kernel.Core.Processes.ELF.ELFFile.Sections	<remarks>
Field	Kernel.Core.Processes.ELF.ELFFile.Segments	<summary>
Field	Kernel.Core.Processes.ELF.ELFFile.Segments	<remarks>
Field	Kernel.Core.Processes.ELF.ELFFile.theFile	<summary>
Field	Kernel.Core.Processes.ELF.ELFFile.theFile	<remarks>
Property	Kernel.Core.Processes.ELF.ELFFile.TheFile	<summary>
Property	Kernel.Core.Processes.ELF.ELFFile.TheFile	<remarks>
Property	Kernel.Core.Processes.ELF.ELFFile.TheFile	<value>
Field	Kernel.Core.Processes.ELF.ELFFile.theStream	<summary>
Field	Kernel.Core.Processes.ELF.ELFFile.theStream	<remarks>
Property	Kernel.Core.Processes.ELF.ELFFile.TheStream	<summary>
Property	Kernel.Core.Processes.ELF.ELFFile.TheStream	<remarks>
Property	Kernel.Core.Processes.ELF.ELFFile.TheStream	<value>
Type	Kernel.Core.Processes.ELF.ELFFileClass	<summary>
Type	Kernel.Core.Processes.ELF.ELFFileClass	<remarks>
Type	Kernel.Core.Processes.ELF.ELFFileType	<summary>
Type	Kernel.Core.Processes.ELF.ELFFileType	<remarks>
Type	Kernel.Core.Processes.ELF.ELFFlags	<summary>
Type	Kernel.Core.Processes.ELF.ELFFlags	<remarks>
Type	Kernel.Core.Processes.ELF.ELFHeader	<summary>
Type	Kernel.Core.Processes.ELF.ELFHeader	<remarks>
Method	Kernel.Core.Processes.ELF.ELFHeader.#ctor(System.Byte[])	<remarks>
Method	Kernel.Core.Processes.ELF.ELFHeader.#ctor(System.Byte[])	"<param name=""data""/>"
Property	Kernel.Core.Processes.ELF.ELFHeader.DataEncoding	<summary>
Property	Kernel.Core.Processes.ELF.ELFHeader.DataEncoding	<remarks>
Property	Kernel.Core.Processes.ELF.ELFHeader.DataEncoding	<value>
Field	Kernel.Core.Processes.ELF.ELFHeader.ELFHeaderSize	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.ELFHeaderSize	<remarks>
Field	Kernel.Core.Processes.ELF.ELFHeader.EntryPoint	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.EntryPoint	<remarks>
Property	Kernel.Core.Processes.ELF.ELFHeader.FileClass	<summary>
Property	Kernel.Core.Processes.ELF.ELFHeader.FileClass	<remarks>
Property	Kernel.Core.Processes.ELF.ELFHeader.FileClass	<value>
Field	Kernel.Core.Processes.ELF.ELFHeader.FileType	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.FileType	<remarks>
Field	Kernel.Core.Processes.ELF.ELFHeader.flags	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.flags	<remarks>
Field	Kernel.Core.Processes.ELF.ELFHeader.HEADER_SIZE	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.HEADER_SIZE	<remarks>
Property	Kernel.Core.Processes.ELF.ELFHeader.HeaderVersion	<summary>
Property	Kernel.Core.Processes.ELF.ELFHeader.HeaderVersion	<remarks>
Property	Kernel.Core.Processes.ELF.ELFHeader.HeaderVersion	<value>
Field	Kernel.Core.Processes.ELF.ELFHeader.ident	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.ident	<remarks>
Field	Kernel.Core.Processes.ELF.ELFHeader.Machine	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.Machine	<remarks>
Field	Kernel.Core.Processes.ELF.ELFHeader.ProgHeaderEntrySize	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.ProgHeaderEntrySize	<remarks>
Field	Kernel.Core.Processes.ELF.ELFHeader.ProgHeaderNumEntries	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.ProgHeaderNumEntries	<remarks>
Field	Kernel.Core.Processes.ELF.ELFHeader.ProgHeaderTableOffset	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.ProgHeaderTableOffset	<remarks>
Field	Kernel.Core.Processes.ELF.ELFHeader.SecHeaderEntrySize	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.SecHeaderEntrySize	<remarks>
Field	Kernel.Core.Processes.ELF.ELFHeader.SecHeaderIdxForSecNameStrings	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.SecHeaderIdxForSecNameStrings	<remarks>
Field	Kernel.Core.Processes.ELF.ELFHeader.SecHeaderNumEntries	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.SecHeaderNumEntries	<remarks>
Field	Kernel.Core.Processes.ELF.ELFHeader.SecHeaderTableOffset	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.SecHeaderTableOffset	<remarks>
Property	Kernel.Core.Processes.ELF.ELFHeader.SignatureOK	<summary>
Property	Kernel.Core.Processes.ELF.ELFHeader.SignatureOK	<remarks>
Property	Kernel.Core.Processes.ELF.ELFHeader.SignatureOK	<value>
Field	Kernel.Core.Processes.ELF.ELFHeader.Version	<summary>
Field	Kernel.Core.Processes.ELF.ELFHeader.Version	<remarks>
Type	Kernel.Core.Processes.ELF.ELFMachines	<summary>
Type	Kernel.Core.Processes.ELF.ELFMachines	<remarks>
Type	Kernel.Core.Processes.ELF.ELFProcess	<summary>
Type	Kernel.Core.Processes.ELF.ELFProcess	<remarks>
Method	Kernel.Core.Processes.ELF.ELFProcess.#ctor(Kernel.Core.Processes.ELF.ELFFile)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFProcess.#ctor(Kernel.Core.Processes.ELF.ELFFile)	"<param name=""anELFFile""/>"
Field	Kernel.Core.Processes.ELF.ELFProcess.BaseAddress	<summary>
Field	Kernel.Core.Processes.ELF.ELFProcess.BaseAddress	<remarks>
Method	"Kernel.Core.Processes.ELF.ELFProcess.GetSymbolAddress(Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol,Kernel.FOS_System.String)"	<summary>
Method	"Kernel.Core.Processes.ELF.ELFProcess.GetSymbolAddress(Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol,Kernel.FOS_System.String)"	<remarks>
Method	"Kernel.Core.Processes.ELF.ELFProcess.GetSymbolAddress(Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol,Kernel.FOS_System.String)"	<returns>
Method	"Kernel.Core.Processes.ELF.ELFProcess.GetSymbolAddress(Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol,Kernel.FOS_System.String)"	"<param name=""theSymbol""/>"
Method	"Kernel.Core.Processes.ELF.ELFProcess.GetSymbolAddress(Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol,Kernel.FOS_System.String)"	"<param name=""theSymbolName""/>"
Method	Kernel.Core.Processes.ELF.ELFProcess.Load(System.Boolean)	<summary>
Method	Kernel.Core.Processes.ELF.ELFProcess.Load(System.Boolean)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFProcess.Load(System.Boolean)	"<param name=""UserMode""/>"
Method	"Kernel.Core.Processes.ELF.ELFProcess.LoadSegments(Kernel.Core.Processes.ELF.ELFFile,System.Boolean@,System.Boolean@,System.UInt32)"	<summary>
Method	"Kernel.Core.Processes.ELF.ELFProcess.LoadSegments(Kernel.Core.Processes.ELF.ELFFile,System.Boolean@,System.Boolean@,System.UInt32)"	<remarks>
Method	"Kernel.Core.Processes.ELF.ELFProcess.LoadSegments(Kernel.Core.Processes.ELF.ELFFile,System.Boolean@,System.Boolean@,System.UInt32)"	"<param name=""fileToLoadFrom""/>"
Method	"Kernel.Core.Processes.ELF.ELFProcess.LoadSegments(Kernel.Core.Processes.ELF.ELFFile,System.Boolean@,System.Boolean@,System.UInt32)"	"<param name=""OK""/>"
Method	"Kernel.Core.Processes.ELF.ELFProcess.LoadSegments(Kernel.Core.Processes.ELF.ELFFile,System.Boolean@,System.Boolean@,System.UInt32)"	"<param name=""DynamicLinkingRequired""/>"
Method	"Kernel.Core.Processes.ELF.ELFProcess.LoadSegments(Kernel.Core.Processes.ELF.ELFFile,System.Boolean@,System.Boolean@,System.UInt32)"	"<param name=""memBaseAddress""/>"
Field	Kernel.Core.Processes.ELF.ELFProcess.SharedObjectDependencies	<summary>
Field	Kernel.Core.Processes.ELF.ELFProcess.SharedObjectDependencies	<remarks>
Field	Kernel.Core.Processes.ELF.ELFProcess.SharedObjectDependencyFilePaths	<summary>
Field	Kernel.Core.Processes.ELF.ELFProcess.SharedObjectDependencyFilePaths	<remarks>
Field	Kernel.Core.Processes.ELF.ELFProcess.theFile	<summary>
Field	Kernel.Core.Processes.ELF.ELFProcess.theFile	<remarks>
Property	Kernel.Core.Processes.ELF.ELFProcess.TheFile	<summary>
Property	Kernel.Core.Processes.ELF.ELFProcess.TheFile	<remarks>
Property	Kernel.Core.Processes.ELF.ELFProcess.TheFile	<value>
Field	Kernel.Core.Processes.ELF.ELFProcess.theProcess	<summary>
Field	Kernel.Core.Processes.ELF.ELFProcess.theProcess	<remarks>
Property	Kernel.Core.Processes.ELF.ELFProcess.TheProcess	<summary>
Property	Kernel.Core.Processes.ELF.ELFProcess.TheProcess	<remarks>
Property	Kernel.Core.Processes.ELF.ELFProcess.TheProcess	<value>
Type	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection	<summary>
Type	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection	<remarks>
Method	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	"<param name=""header""/>"
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.Item(System.UInt32)	<summary>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.Item(System.UInt32)	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.Item(System.UInt32)	<value>
Method	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<summary>
Method	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<returns>
Method	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	"<param name=""stream""/>"
Field	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.relocations	<summary>
Field	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.relocations	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.Relocations	<summary>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.Relocations	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.Relocations	<value>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.SectionToRelocateIndex	<summary>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.SectionToRelocateIndex	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.SectionToRelocateIndex	<value>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.SymbolTableSectionIndex	<summary>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.SymbolTableSectionIndex	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.SymbolTableSectionIndex	<value>
Type	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend	<summary>
Type	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend	<remarks>
Method	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.#ctor	<remarks>
Field	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.Addend	<summary>
Field	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.Addend	<remarks>
Field	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.Info	<summary>
Field	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.Info	<remarks>
Field	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.Offset	<summary>
Field	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.Offset	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.Symbol	<summary>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.Symbol	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.Symbol	<value>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.Type	<summary>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.Type	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationAddendTableSection.RelocationAddend.Type	<value>
Type	Kernel.Core.Processes.ELF.ELFRelocationTableSection	<summary>
Type	Kernel.Core.Processes.ELF.ELFRelocationTableSection	<remarks>
Method	Kernel.Core.Processes.ELF.ELFRelocationTableSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFRelocationTableSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	"<param name=""header""/>"
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Item(System.UInt32)	<summary>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Item(System.UInt32)	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Item(System.UInt32)	<value>
Method	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<summary>
Method	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<returns>
Method	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	"<param name=""stream""/>"
Field	Kernel.Core.Processes.ELF.ELFRelocationTableSection.relocations	<summary>
Field	Kernel.Core.Processes.ELF.ELFRelocationTableSection.relocations	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocations	<summary>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocations	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocations	<value>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.SectionToRelocateIndex	<summary>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.SectionToRelocateIndex	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.SectionToRelocateIndex	<value>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.SymbolTableSectionIndex	<summary>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.SymbolTableSectionIndex	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.SymbolTableSectionIndex	<value>
Type	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation	<summary>
Type	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation	<remarks>
Method	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation.#ctor	<remarks>
Field	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation.Info	<summary>
Field	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation.Info	<remarks>
Field	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation.Offset	<summary>
Field	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation.Offset	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation.Symbol	<summary>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation.Symbol	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation.Symbol	<value>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation.Type	<summary>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation.Type	<remarks>
Property	Kernel.Core.Processes.ELF.ELFRelocationTableSection.Relocation.Type	<value>
Type	Kernel.Core.Processes.ELF.ELFRelocationTableSection.RelocationType	<summary>
Type	Kernel.Core.Processes.ELF.ELFRelocationTableSection.RelocationType	<remarks>
Type	Kernel.Core.Processes.ELF.ELFSection	<summary>
Type	Kernel.Core.Processes.ELF.ELFSection	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	"<param name=""aHeader""/>"
Field	Kernel.Core.Processes.ELF.ELFSection.data	<summary>
Field	Kernel.Core.Processes.ELF.ELFSection.data	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSection.GetSection(Kernel.Core.Processes.ELF.ELFSectionHeader)	<summary>
Method	Kernel.Core.Processes.ELF.ELFSection.GetSection(Kernel.Core.Processes.ELF.ELFSectionHeader)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSection.GetSection(Kernel.Core.Processes.ELF.ELFSectionHeader)	<returns>
Method	Kernel.Core.Processes.ELF.ELFSection.GetSection(Kernel.Core.Processes.ELF.ELFSectionHeader)	"<param name=""header""/>"
Field	Kernel.Core.Processes.ELF.ELFSection.header	<summary>
Field	Kernel.Core.Processes.ELF.ELFSection.header	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSection.Header	<summary>
Property	Kernel.Core.Processes.ELF.ELFSection.Header	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSection.Header	<value>
Method	Kernel.Core.Processes.ELF.ELFSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<summary>
Method	Kernel.Core.Processes.ELF.ELFSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<returns>
Method	Kernel.Core.Processes.ELF.ELFSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	"<param name=""stream""/>"
Type	Kernel.Core.Processes.ELF.ELFSectionFlags	<summary>
Type	Kernel.Core.Processes.ELF.ELFSectionFlags	<remarks>
Type	Kernel.Core.Processes.ELF.ELFSectionHeader	<summary>
Type	Kernel.Core.Processes.ELF.ELFSectionHeader	<remarks>
Method	"Kernel.Core.Processes.ELF.ELFSectionHeader.#ctor(System.Byte[],System.UInt32@)"	<remarks>
Method	"Kernel.Core.Processes.ELF.ELFSectionHeader.#ctor(System.Byte[],System.UInt32@)"	"<param name=""header""/>"
Method	"Kernel.Core.Processes.ELF.ELFSectionHeader.#ctor(System.Byte[],System.UInt32@)"	"<param name=""offset""/>"
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.AddressAlignment	<summary>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.AddressAlignment	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.EntrySize	<summary>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.EntrySize	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.Flags	<summary>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.Flags	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.Info	<summary>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.Info	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.Link	<summary>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.Link	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.LoadAddress	<summary>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.LoadAddress	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.NameIndex	<summary>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.NameIndex	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.SectionFileOffset	<summary>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.SectionFileOffset	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.SectionSize	<summary>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.SectionSize	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.SectionType	<summary>
Field	Kernel.Core.Processes.ELF.ELFSectionHeader.SectionType	<remarks>
Type	Kernel.Core.Processes.ELF.ElfSectionTypes	<summary>
Type	Kernel.Core.Processes.ELF.ElfSectionTypes	<remarks>
Type	Kernel.Core.Processes.ELF.ELFSegment	<summary>
Type	Kernel.Core.Processes.ELF.ELFSegment	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSegment.#ctor(Kernel.Core.Processes.ELF.ELFSegmentHeader)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSegment.#ctor(Kernel.Core.Processes.ELF.ELFSegmentHeader)	"<param name=""aHeader""/>"
Field	Kernel.Core.Processes.ELF.ELFSegment.data	<summary>
Field	Kernel.Core.Processes.ELF.ELFSegment.data	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSegment.Data	<summary>
Property	Kernel.Core.Processes.ELF.ELFSegment.Data	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSegment.Data	<value>
Method	Kernel.Core.Processes.ELF.ELFSegment.GetSegment(Kernel.Core.Processes.ELF.ELFSegmentHeader)	<summary>
Method	Kernel.Core.Processes.ELF.ELFSegment.GetSegment(Kernel.Core.Processes.ELF.ELFSegmentHeader)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSegment.GetSegment(Kernel.Core.Processes.ELF.ELFSegmentHeader)	<returns>
Method	Kernel.Core.Processes.ELF.ELFSegment.GetSegment(Kernel.Core.Processes.ELF.ELFSegmentHeader)	"<param name=""header""/>"
Field	Kernel.Core.Processes.ELF.ELFSegment.header	<summary>
Field	Kernel.Core.Processes.ELF.ELFSegment.header	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSegment.Header	<summary>
Property	Kernel.Core.Processes.ELF.ELFSegment.Header	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSegment.Header	<value>
Method	Kernel.Core.Processes.ELF.ELFSegment.Read(Kernel.FOS_System.IO.Streams.FileStream)	<summary>
Method	Kernel.Core.Processes.ELF.ELFSegment.Read(Kernel.FOS_System.IO.Streams.FileStream)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSegment.Read(Kernel.FOS_System.IO.Streams.FileStream)	<returns>
Method	Kernel.Core.Processes.ELF.ELFSegment.Read(Kernel.FOS_System.IO.Streams.FileStream)	"<param name=""stream""/>"
Type	Kernel.Core.Processes.ELF.ELFSegmentHeader	<summary>
Type	Kernel.Core.Processes.ELF.ELFSegmentHeader	<remarks>
Method	"Kernel.Core.Processes.ELF.ELFSegmentHeader.#ctor(System.Byte[],System.UInt32@)"	<remarks>
Method	"Kernel.Core.Processes.ELF.ELFSegmentHeader.#ctor(System.Byte[],System.UInt32@)"	"<param name=""header""/>"
Method	"Kernel.Core.Processes.ELF.ELFSegmentHeader.#ctor(System.Byte[],System.UInt32@)"	"<param name=""offset""/>"
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.Align	<summary>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.Align	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.FileOffset	<summary>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.FileOffset	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.FileSize	<summary>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.FileSize	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.Flags	<summary>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.Flags	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.MemSize	<summary>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.MemSize	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.PAddr	<summary>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.PAddr	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.Type	<summary>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.Type	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.VAddr	<summary>
Field	Kernel.Core.Processes.ELF.ELFSegmentHeader.VAddr	<remarks>
Type	Kernel.Core.Processes.ELF.ELFSegmentType	<summary>
Type	Kernel.Core.Processes.ELF.ELFSegmentType	<remarks>
Type	Kernel.Core.Processes.ELF.ELFSharedObject	<summary>
Type	Kernel.Core.Processes.ELF.ELFSharedObject	<remarks>
Method	"Kernel.Core.Processes.ELF.ELFSharedObject.#ctor(Kernel.Core.Processes.ELF.ELFFile,Kernel.Core.Processes.ELF.ELFProcess)"	<remarks>
Method	"Kernel.Core.Processes.ELF.ELFSharedObject.#ctor(Kernel.Core.Processes.ELF.ELFFile,Kernel.Core.Processes.ELF.ELFProcess)"	"<param name=""anELFFile""/>"
Method	"Kernel.Core.Processes.ELF.ELFSharedObject.#ctor(Kernel.Core.Processes.ELF.ELFFile,Kernel.Core.Processes.ELF.ELFProcess)"	"<param name=""aProcess""/>"
Field	Kernel.Core.Processes.ELF.ELFSharedObject.BaseAddress	<summary>
Field	Kernel.Core.Processes.ELF.ELFSharedObject.BaseAddress	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSharedObject.Load	<summary>
Method	Kernel.Core.Processes.ELF.ELFSharedObject.Load	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSharedObject.theFile	<summary>
Field	Kernel.Core.Processes.ELF.ELFSharedObject.theFile	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSharedObject.TheFile	<summary>
Property	Kernel.Core.Processes.ELF.ELFSharedObject.TheFile	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSharedObject.TheFile	<value>
Field	Kernel.Core.Processes.ELF.ELFSharedObject.theProcess	<summary>
Field	Kernel.Core.Processes.ELF.ELFSharedObject.theProcess	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSharedObject.TheProcess	<summary>
Property	Kernel.Core.Processes.ELF.ELFSharedObject.TheProcess	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSharedObject.TheProcess	<value>
Type	Kernel.Core.Processes.ELF.ELFStringTable	<summary>
Type	Kernel.Core.Processes.ELF.ELFStringTable	<remarks>
Method	"Kernel.Core.Processes.ELF.ELFStringTable.#ctor(System.UInt32,System.UInt32)"	<remarks>
Method	"Kernel.Core.Processes.ELF.ELFStringTable.#ctor(System.UInt32,System.UInt32)"	"<param name=""anAddress""/>"
Method	"Kernel.Core.Processes.ELF.ELFStringTable.#ctor(System.UInt32,System.UInt32)"	"<param name=""aSize""/>"
Field	Kernel.Core.Processes.ELF.ELFStringTable.data	<summary>
Field	Kernel.Core.Processes.ELF.ELFStringTable.data	<remarks>
Property	Kernel.Core.Processes.ELF.ELFStringTable.Item(System.UInt32)	<summary>
Property	Kernel.Core.Processes.ELF.ELFStringTable.Item(System.UInt32)	<remarks>
Property	Kernel.Core.Processes.ELF.ELFStringTable.Item(System.UInt32)	<value>
Field	Kernel.Core.Processes.ELF.ELFStringTable.size	<summary>
Field	Kernel.Core.Processes.ELF.ELFStringTable.size	<remarks>
Type	Kernel.Core.Processes.ELF.ELFStringTableSection	<summary>
Type	Kernel.Core.Processes.ELF.ELFStringTableSection	<remarks>
Method	Kernel.Core.Processes.ELF.ELFStringTableSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFStringTableSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	"<param name=""header""/>"
Property	Kernel.Core.Processes.ELF.ELFStringTableSection.Item(System.UInt32)	<summary>
Property	Kernel.Core.Processes.ELF.ELFStringTableSection.Item(System.UInt32)	<remarks>
Property	Kernel.Core.Processes.ELF.ELFStringTableSection.Item(System.UInt32)	<value>
Type	Kernel.Core.Processes.ELF.ELFSymbolTableSection	<summary>
Type	Kernel.Core.Processes.ELF.ELFSymbolTableSection	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSymbolTableSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSymbolTableSection.#ctor(Kernel.Core.Processes.ELF.ELFSectionHeader)	"<param name=""header""/>"
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Item(System.UInt32)	<summary>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Item(System.UInt32)	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Item(System.UInt32)	<value>
Method	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<summary>
Method	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	<returns>
Method	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Read(Kernel.FOS_System.IO.Streams.FileStream)	"<param name=""stream""/>"
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.StringsSectionIndex	<summary>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.StringsSectionIndex	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.StringsSectionIndex	<value>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.symbols	<summary>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.symbols	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbols	<summary>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbols	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbols	<value>
Type	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol	<summary>
Type	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol	<remarks>
Method	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.#ctor	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Binding	<summary>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Binding	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Binding	<value>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Info	<summary>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Info	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.NameIdx	<summary>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.NameIdx	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Other	<summary>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Other	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.SectionIndex	<summary>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.SectionIndex	<remarks>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Size	<summary>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Size	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Type	<summary>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Type	<remarks>
Property	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Type	<value>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Value	<summary>
Field	Kernel.Core.Processes.ELF.ELFSymbolTableSection.Symbol.Value	<remarks>
Type	Kernel.Core.Processes.ELF.ELFSymbolTableSection.SymbolBinding	<summary>
Type	Kernel.Core.Processes.ELF.ELFSymbolTableSection.SymbolBinding	<remarks>
Type	Kernel.Core.Processes.ELF.ELFSymbolTableSection.SymbolType	<summary>
Type	Kernel.Core.Processes.ELF.ELFSymbolTableSection.SymbolType	<remarks>
Type	Kernel.Core.Shells.Dummy	<remarks>
Method	Kernel.Core.Shells.Dummy.#ctor	<remarks>
Method	Kernel.Core.Shells.Dummy.Add	<remarks>
Field	Kernel.Core.Shells.Dummy.testEnum	<remarks>
Field	Kernel.Core.Shells.Dummy.x	<remarks>
Field	Kernel.Core.Shells.Dummy.y	<remarks>
Type	Kernel.Core.Shells.Dummy.TestEnum	<remarks>
Type	Kernel.Core.Shells.MainShell	<remarks>
Method	Kernel.Core.Shells.MainShell.#ctor	<remarks>
Method	Kernel.Core.Shells.MainShell._DeviceManager_DeviceAdded(Kernel.Hardware.Device)	<summary>
Method	Kernel.Core.Shells.MainShell._DeviceManager_DeviceAdded(Kernel.Hardware.Device)	<remarks>
Method	Kernel.Core.Shells.MainShell._DeviceManager_DeviceAdded(Kernel.Hardware.Device)	"<param name=""device""/>"
Method	Kernel.Core.Shells.MainShell.AdvancedConsoleTest	<remarks>
Method	Kernel.Core.Shells.MainShell.CallbackMethod(System.Object)	<remarks>
Method	Kernel.Core.Shells.MainShell.CheckDiskFormatting(Kernel.Hardware.Devices.DiskDevice)	<remarks>
Method	Kernel.Core.Shells.MainShell.CleanDiskCaches	<remarks>
Method	"Kernel.Core.Shells.MainShell.CopyDirectory(Kernel.FOS_System.IO.Directory,Kernel.FOS_System.String)"	<remarks>
Method	"Kernel.Core.Shells.MainShell.CopyDirectory(Kernel.FOS_System.String,Kernel.FOS_System.String)"	<remarks>
Method	"Kernel.Core.Shells.MainShell.CopyFile(Kernel.FOS_System.IO.File,Kernel.FOS_System.String)"	<remarks>
Method	"Kernel.Core.Shells.MainShell.CopyFile(Kernel.FOS_System.String,Kernel.FOS_System.String)"	<remarks>
Field	Kernel.Core.Shells.MainShell.CurrentDir	<remarks>
Method	Kernel.Core.Shells.MainShell.DelegateTest	<remarks>
Method	Kernel.Core.Shells.MainShell.DeleteDirectory(Kernel.FOS_System.String)	<remarks>
Method	Kernel.Core.Shells.MainShell.DeleteFile(Kernel.FOS_System.String)	<remarks>
Method	"Kernel.Core.Shells.MainShell.DeviceManager_DeviceAdded(Kernel.FOS_System.Object,Kernel.Hardware.Device)"	<summary>
Method	"Kernel.Core.Shells.MainShell.DeviceManager_DeviceAdded(Kernel.FOS_System.Object,Kernel.Hardware.Device)"	<remarks>
Method	"Kernel.Core.Shells.MainShell.DeviceManager_DeviceAdded(Kernel.FOS_System.Object,Kernel.Hardware.Device)"	"<param name=""state""/>"
Method	"Kernel.Core.Shells.MainShell.DeviceManager_DeviceAdded(Kernel.FOS_System.Object,Kernel.Hardware.Device)"	"<param name=""device""/>"
Method	Kernel.Core.Shells.MainShell.DivideByZeroTest	<remarks>
Method	Kernel.Core.Shells.MainShell.DummyObjectTest	<remarks>
Method	Kernel.Core.Shells.MainShell.EjectMSD(System.Int32)	<remarks>
Method	Kernel.Core.Shells.MainShell.ExceptionsTestP2	<remarks>
Method	Kernel.Core.Shells.MainShell.Execute	<remarks>
Method	Kernel.Core.Shells.MainShell.FieldsTableTest	<remarks>
Method	Kernel.Core.Shells.MainShell.FileSystemTests	<remarks>
Method	Kernel.Core.Shells.MainShell.FormatDisk(Kernel.Hardware.Devices.DiskDevice)	<remarks>
Method	Kernel.Core.Shells.MainShell.InitATA	<remarks>
Method	Kernel.Core.Shells.MainShell.InitFS	<remarks>
Method	Kernel.Core.Shells.MainShell.InitPCI	<remarks>
Method	Kernel.Core.Shells.MainShell.InitUSB	<remarks>
Method	Kernel.Core.Shells.MainShell.IntArrayTest	<remarks>
Method	Kernel.Core.Shells.MainShell.InterruptsTest	<remarks>
Method	Kernel.Core.Shells.MainShell.IsInstTest	<remarks>
Method	Kernel.Core.Shells.MainShell.KeyboardTest	<remarks>
Method	Kernel.Core.Shells.MainShell.LongsTest	<summary>
Method	Kernel.Core.Shells.MainShell.LongsTest	<remarks>
Method	Kernel.Core.Shells.MainShell.NewDirectory(Kernel.FOS_System.String)	<remarks>
Method	Kernel.Core.Shells.MainShell.ObjectArrayTest	<remarks>
Method	Kernel.Core.Shells.MainShell.OuptutUSB	<remarks>
Method	Kernel.Core.Shells.MainShell.OutputATA	<remarks>
Method	Kernel.Core.Shells.MainShell.OutputDirectoryContents(Kernel.FOS_System.String)	<remarks>
Method	Kernel.Core.Shells.MainShell.OutputFileContents(Kernel.FOS_System.String)	<remarks>
Method	Kernel.Core.Shells.MainShell.OutputFS	<remarks>
Method	Kernel.Core.Shells.MainShell.OutputMemory	<remarks>
Method	Kernel.Core.Shells.MainShell.OutputPCI	<remarks>
Method	Kernel.Core.Shells.MainShell.PCBeepTest	<remarks>
Method	Kernel.Core.Shells.MainShell.ShowHelp(Kernel.FOS_System.String)	<remarks>
Method	Kernel.Core.Shells.MainShell.ShowHelp(Kernel.FOS_System.String)	"<param name=""commandName""/>"
Method	Kernel.Core.Shells.MainShell.ShowLicense(Kernel.FOS_System.String)	<remarks>
Method	Kernel.Core.Shells.MainShell.SplitCommand(Kernel.FOS_System.String)	<remarks>
Method	Kernel.Core.Shells.MainShell.StringConcatTest	<remarks>
Method	Kernel.Core.Shells.MainShell.ThreadSleepTest	<summary>
Method	Kernel.Core.Shells.MainShell.ThreadSleepTest	<remarks>
Method	Kernel.Core.Shells.MainShell.TimerTest	<remarks>
Method	Kernel.Core.Shells.MainShell.ULongLTComparisonTest	<remarks>
Method	Kernel.Core.Shells.MainShell.ULongMultiplicationTest	<remarks>
Method	Kernel.Core.Shells.MainShell.UnrecognisedOption(Kernel.FOS_System.String)	<remarks>
Method	Kernel.Core.Shells.MainShell.UnrecognisedOption(Kernel.FOS_System.String)	"<param name=""value""/>"
Type	Kernel.Core.Shells.MainShell.IntDelegate	<remarks>
Namespace	Kernel.Core.Tasks	<summary>
Type	Kernel.Core.Tasks.EasterTask	<summary>
Type	Kernel.Core.Tasks.EasterTask	<remarks>
Method	Kernel.Core.Tasks.EasterTask.#cctor	<remarks>
Field	Kernel.Core.Tasks.EasterTask.ImageMap	<summary>
Field	Kernel.Core.Tasks.EasterTask.ImageMap	<remarks>
Method	Kernel.Core.Tasks.EasterTask.Main	<summary>
Method	Kernel.Core.Tasks.EasterTask.Main	<remarks>
Type	Kernel.Core.Tasks.GCCleanupTask	<summary>
Type	Kernel.Core.Tasks.GCCleanupTask	<remarks>
Method	Kernel.Core.Tasks.GCCleanupTask.#cctor	<remarks>
Method	Kernel.Core.Tasks.GCCleanupTask.Main	<summary>
Method	Kernel.Core.Tasks.GCCleanupTask.Main	<remarks>
Field	Kernel.Core.Tasks.GCCleanupTask.Terminate	<summary>
Field	Kernel.Core.Tasks.GCCleanupTask.Terminate	<remarks>
Type	Kernel.Core.Tasks.IdleTask	<summary>
Type	Kernel.Core.Tasks.IdleTask	<remarks>
Method	Kernel.Core.Tasks.IdleTask.Main	<summary>
Method	Kernel.Core.Tasks.IdleTask.Main	<remarks>
Type	Kernel.Core.Tasks.SampleTask	<summary>
Type	Kernel.Core.Tasks.SampleTask	<remarks>
Method	Kernel.Core.Tasks.SampleTask.Main	<summary>
Method	Kernel.Core.Tasks.SampleTask.Main	<remarks>
Type	Kernel.Core.Tasks.SystemStatusTask	<summary>
Type	Kernel.Core.Tasks.SystemStatusTask	<remarks>
Method	Kernel.Core.Tasks.SystemStatusTask.#cctor	<remarks>
Method	"Kernel.Core.Tasks.SystemStatusTask.DeviceManager_DeviceAdded(Kernel.FOS_System.Object,Kernel.Hardware.Device)"	<summary>
Method	"Kernel.Core.Tasks.SystemStatusTask.DeviceManager_DeviceAdded(Kernel.FOS_System.Object,Kernel.Hardware.Device)"	<remarks>
Method	"Kernel.Core.Tasks.SystemStatusTask.DeviceManager_DeviceAdded(Kernel.FOS_System.Object,Kernel.Hardware.Device)"	"<param name=""state""/>"
Method	"Kernel.Core.Tasks.SystemStatusTask.DeviceManager_DeviceAdded(Kernel.FOS_System.Object,Kernel.Hardware.Device)"	"<param name=""aDevice""/>"
Method	Kernel.Core.Tasks.SystemStatusTask.Main	<summary>
Method	Kernel.Core.Tasks.SystemStatusTask.Main	<remarks>
Field	Kernel.Core.Tasks.SystemStatusTask.MainConsole	<summary>
Field	Kernel.Core.Tasks.SystemStatusTask.MainConsole	<remarks>
Field	Kernel.Core.Tasks.SystemStatusTask.StatusConsole	<summary>
Field	Kernel.Core.Tasks.SystemStatusTask.StatusConsole	<remarks>
Field	Kernel.Core.Tasks.SystemStatusTask.Terminating	<summary>
Field	Kernel.Core.Tasks.SystemStatusTask.Terminating	<remarks>
Type	Kernel.FOS_System.Array	<remarks>
Method	Kernel.FOS_System.Array.#ctor	<remarks>
Method	"Kernel.FOS_System.Array.Copy(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)"	<remarks>
Field	Kernel.FOS_System.Array.elemType	<remarks>
Field	Kernel.FOS_System.Array.FieldsBytesSize	<remarks>
Field	Kernel.FOS_System.Array.length	<remarks>
Method	Kernel.FOS_System.Array.op_Implicit(System.Object[])~Kernel.FOS_System.Array	<remarks>
Type	Kernel.FOS_System.ByteConverter	<remarks>
Method	Kernel.FOS_System.ByteConverter.GetASCIIBytes(Kernel.FOS_System.String)	<remarks>
Method	"Kernel.FOS_System.ByteConverter.GetASCIIStringFromASCII(System.Byte*,System.UInt32,System.UInt32)"	<remarks>
Method	"Kernel.FOS_System.ByteConverter.GetASCIIStringFromASCII(System.Byte[],System.UInt32,System.UInt32)"	<remarks>
Method	"Kernel.FOS_System.ByteConverter.ToUInt16(System.Byte[],System.UInt32)"	<remarks>
Method	"Kernel.FOS_System.ByteConverter.ToUInt32(System.Byte[],System.UInt32)"	<remarks>
Method	"Kernel.FOS_System.ByteConverter.ToUInt64(System.Byte[],System.UInt32)"	<remarks>
Type	Kernel.FOS_System.Exception	<remarks>
Method	Kernel.FOS_System.Exception.#ctor	<remarks>
Method	Kernel.FOS_System.Exception.#ctor(Kernel.FOS_System.String)	<remarks>
Field	Kernel.FOS_System.Exception.InnerException	<summary>
Field	Kernel.FOS_System.Exception.InnerException	<remarks>
Field	Kernel.FOS_System.Exception.InstructionAddress	<summary>
Field	Kernel.FOS_System.Exception.InstructionAddress	<remarks>
Field	Kernel.FOS_System.Exception.message	<summary>
Field	Kernel.FOS_System.Exception.message	<remarks>
Property	Kernel.FOS_System.Exception.Message	<remarks>
Property	Kernel.FOS_System.Exception.Message	<value>
Type	Kernel.FOS_System.FieldInfo	<remarks>
Field	Kernel.FOS_System.FieldInfo.FieldType	<remarks>
Field	Kernel.FOS_System.FieldInfo.Offset	<remarks>
Field	Kernel.FOS_System.FieldInfo.Size	<remarks>
Method	Kernel.FOS_System.GC.#cctor	<remarks>
Method	"Kernel.FOS_System.GC.AddObjectToCleanup(Kernel.FOS_System.GCHeader*,System.Void*)"	<remarks>
Method	Kernel.FOS_System.GC.CheckSignature(Kernel.FOS_System.GCHeader*)	<remarks>
Method	Kernel.FOS_System.GC.Cleanup	<remarks>
Field	Kernel.FOS_System.GC.CleanupList	<remarks>
Field	Kernel.FOS_System.GC.Enabled	<remarks>
Method	Kernel.FOS_System.GC.EnterCritical(Kernel.FOS_System.String)	<summary>
Method	Kernel.FOS_System.GC.EnterCritical(Kernel.FOS_System.String)	<remarks>
Method	Kernel.FOS_System.GC.EnterCritical(Kernel.FOS_System.String)	"<param name=""caller""/>"
Method	Kernel.FOS_System.GC.ExitCritical	<summary>
Method	Kernel.FOS_System.GC.ExitCritical	<remarks>
Field	Kernel.FOS_System.GC.GCAccessLock	<summary>
Field	Kernel.FOS_System.GC.GCAccessLock	<remarks>
Field	Kernel.FOS_System.GC.GCAccessLockInitialised	<summary>
Field	Kernel.FOS_System.GC.GCAccessLockInitialised	<remarks>
Field	Kernel.FOS_System.GC.InsideGC	<remarks>
Method	Kernel.FOS_System.GC.NewObj(Kernel.FOS_System.Type)	<remarks>
Method	Kernel.FOS_System.GC.NewString(System.Int32)	<remarks>
Field	Kernel.FOS_System.GC.NumObjs	<remarks>
Field	Kernel.FOS_System.GC.NumStrings	<remarks>
Method	"Kernel.FOS_System.GC.PrintCleanupData(System.Int32,System.Int32)"	<remarks>
Method	Kernel.FOS_System.GC.RemoveObjectToCleanup(Kernel.FOS_System.GCHeader*)	<remarks>
Method	Kernel.FOS_System.GC.RemoveObjectToCleanup(Kernel.FOS_System.ObjectToCleanup*)	<remarks>
Method	Kernel.FOS_System.GC.SetSignature(Kernel.FOS_System.GCHeader*)	<remarks>
Type	Kernel.FOS_System.GCHeader	<remarks>
Field	Kernel.FOS_System.GCHeader.Checksum	<remarks>
Field	Kernel.FOS_System.GCHeader.RefCount	<remarks>
Field	Kernel.FOS_System.GCHeader.Sig1	<remarks>
Field	Kernel.FOS_System.GCHeader.Sig2	<remarks>
Type	Kernel.FOS_System.Heap	<remarks>
Method	Kernel.FOS_System.Heap.#cctor	<remarks>
Method	"Kernel.FOS_System.Heap.AddBlock(System.UInt32*,System.UInt32,System.UInt32)"	<remarks>
Method	Kernel.FOS_System.Heap.Alloc(System.UInt32)	<remarks>
Method	"Kernel.FOS_System.Heap.Alloc(System.UInt32,System.UInt32)"	<remarks>
Method	Kernel.FOS_System.Heap.AllocZeroed(System.UInt32)	<remarks>
Method	"Kernel.FOS_System.Heap.AllocZeroed(System.UInt32,System.UInt32)"	<remarks>
Field	Kernel.FOS_System.Heap.fblock	<remarks>
Property	Kernel.FOS_System.Heap.FBlock	<remarks>
Property	Kernel.FOS_System.Heap.FBlock	<value>
Field	Kernel.FOS_System.Heap.FixedHeapInitialised	<remarks>
Method	Kernel.FOS_System.Heap.Free(System.Void*)	<remarks>
Method	Kernel.FOS_System.Heap.GetFixedHeapPtr	<remarks>
Method	Kernel.FOS_System.Heap.GetFixedHeapSize	<remarks>
Method	Kernel.FOS_System.Heap.GetFreeMem(Kernel.FOS_System.HeapBlock*)	<remarks>
Method	"Kernel.FOS_System.Heap.GetNID(System.Byte,System.Byte)"	<remarks>
Method	Kernel.FOS_System.Heap.GetTotalFreeMem	<remarks>
Method	Kernel.FOS_System.Heap.Init	<remarks>
Method	Kernel.FOS_System.Heap.InitFixedHeap	<remarks>
Field	Kernel.FOS_System.Heap.PreventAllocation	<summary>
Field	Kernel.FOS_System.Heap.PreventAllocation	<remarks>
Field	Kernel.FOS_System.Heap.PreventReason	<summary>
Field	Kernel.FOS_System.Heap.PreventReason	<remarks>
Type	Kernel.FOS_System.HeapBlock	<remarks>
Field	Kernel.FOS_System.HeapBlock.bsize	<remarks>
Field	Kernel.FOS_System.HeapBlock.lfb	<remarks>
Field	Kernel.FOS_System.HeapBlock.next	<remarks>
Field	Kernel.FOS_System.HeapBlock.size	<remarks>
Field	Kernel.FOS_System.HeapBlock.used	<remarks>
Type	Kernel.FOS_System.Int32	<remarks>
Property	Kernel.FOS_System.Int32.MaxValue	<remarks>
Property	Kernel.FOS_System.Int32.MaxValue	<value>
Method	Kernel.FOS_System.Int32.Parse_DecimalSigned(Kernel.FOS_System.String)	<remarks>
Method	"Kernel.FOS_System.Int32.Parse_DecimalUnsigned(Kernel.FOS_System.String,System.Int32)"	<remarks>
Type	Kernel.FOS_System.Int64	<remarks>
Property	Kernel.FOS_System.Int64.MaxValue	<remarks>
Property	Kernel.FOS_System.Int64.MaxValue	<value>
Type	Kernel.FOS_System.Math	<remarks>
Method	"Kernel.FOS_System.Math.Divide(System.UInt64,System.UInt32)"	<remarks>
Method	"Kernel.FOS_System.Math.Max(System.Int32,System.Int32)"	<remarks>
Method	"Kernel.FOS_System.Math.Min(System.Int32,System.Int32)"	<remarks>
Method	"Kernel.FOS_System.Math.Min(System.UInt16,System.UInt16)"	<remarks>
Method	"Kernel.FOS_System.Math.Min(System.UInt32,System.UInt32)"	<remarks>
Type	Kernel.FOS_System.MethodInfo	<remarks>
Field	Kernel.FOS_System.MethodInfo.MethodID	<remarks>
Field	Kernel.FOS_System.MethodInfo.MethodPtr	<remarks>
Type	Kernel.FOS_System.Object	<remarks>
Method	Kernel.FOS_System.Object.#ctor	<remarks>
Type	Kernel.FOS_System.ObjectToCleanup	<remarks>
Field	Kernel.FOS_System.ObjectToCleanup.nextPtr	<remarks>
Field	Kernel.FOS_System.ObjectToCleanup.objHeaderPtr	<remarks>
Field	Kernel.FOS_System.ObjectToCleanup.objPtr	<remarks>
Field	Kernel.FOS_System.ObjectToCleanup.prevPtr	<remarks>
Method	Kernel.FOS_System.ObjectWithType.#ctor	<remarks>
Field	Kernel.FOS_System.ObjectWithType._Type	<remarks>
Type	Kernel.FOS_System.String	<remarks>
Method	Kernel.FOS_System.String.#ctor	<remarks>
Method	"Kernel.FOS_System.String.Concat(Kernel.FOS_System.String,Kernel.FOS_System.String)"	<remarks>
Method	Kernel.FOS_System.String.EndsWith(Kernel.FOS_System.String)	<remarks>
Field	Kernel.FOS_System.String.FieldsBytesSize	<remarks>
Method	Kernel.FOS_System.String.GetCharPointer	<remarks>
Method	Kernel.FOS_System.String.GetLength(System.String)	<remarks>
Method	Kernel.FOS_System.String.IndexOf(System.Char)	<remarks>
Property	Kernel.FOS_System.String.Item(System.Int32)	<remarks>
Property	Kernel.FOS_System.String.Item(System.Int32)	<value>
Method	Kernel.FOS_System.String.LastIndexOf(System.Char)	<remarks>
Field	Kernel.FOS_System.String.length	<remarks>
Method	Kernel.FOS_System.String.New(System.Int32)	<remarks>
Method	"Kernel.FOS_System.String.op_Addition(Kernel.FOS_System.String,Kernel.FOS_System.String)"	<remarks>
Method	"Kernel.FOS_System.String.op_Equality(Kernel.FOS_System.String,Kernel.FOS_System.String)"	<remarks>
Method	Kernel.FOS_System.String.op_Explicit(Kernel.FOS_System.String)~System.String	<remarks>
Method	Kernel.FOS_System.String.op_Implicit(System.Boolean)~Kernel.FOS_System.String	<remarks>
Method	Kernel.FOS_System.String.op_Implicit(System.Byte)~Kernel.FOS_System.String	<remarks>
Method	Kernel.FOS_System.String.op_Implicit(System.Char)~Kernel.FOS_System.String	<remarks>
Method	Kernel.FOS_System.String.op_Implicit(System.Int16)~Kernel.FOS_System.String	<remarks>
Method	Kernel.FOS_System.String.op_Implicit(System.Int32)~Kernel.FOS_System.String	<remarks>
Method	Kernel.FOS_System.String.op_Implicit(System.Int64)~Kernel.FOS_System.String	<remarks>
Method	Kernel.FOS_System.String.op_Implicit(System.String)~Kernel.FOS_System.String	<remarks>
Method	Kernel.FOS_System.String.op_Implicit(System.UInt16)~Kernel.FOS_System.String	<remarks>
Method	Kernel.FOS_System.String.op_Implicit(System.UInt32)~Kernel.FOS_System.String	<remarks>
Method	Kernel.FOS_System.String.op_Implicit(System.UInt64)~Kernel.FOS_System.String	<remarks>
Method	"Kernel.FOS_System.String.op_Inequality(Kernel.FOS_System.String,Kernel.FOS_System.String)"	<remarks>
Method	"Kernel.FOS_System.String.PadLeft(System.Int32,System.Char)"	<remarks>
Method	"Kernel.FOS_System.String.PadRight(System.Int32,System.Char)"	<remarks>
Method	Kernel.FOS_System.String.Split(System.Char)	<remarks>
Method	Kernel.FOS_System.String.StartsWith(Kernel.FOS_System.String)	<remarks>
Method	"Kernel.FOS_System.String.Substring(System.Int32,System.Int32)"	<remarks>
Method	Kernel.FOS_System.String.ToLower	<remarks>
Method	Kernel.FOS_System.String.ToUpper	<remarks>
Method	Kernel.FOS_System.String.Trim	<remarks>
Method	Kernel.FOS_System.String.TrimEnd	<remarks>
Method	Kernel.FOS_System.Type.#ctor	<remarks>
Field	Kernel.FOS_System.Type.FieldTablePtr	<remarks>
Field	Kernel.FOS_System.Type.Id	<remarks>
Field	Kernel.FOS_System.Type.IdString	<remarks>
Field	Kernel.FOS_System.Type.IsPointer	<remarks>
Field	Kernel.FOS_System.Type.IsValueType	<remarks>
Field	Kernel.FOS_System.Type.MethodTablePtr	<remarks>
Method	"Kernel.FOS_System.Type.op_Equality(Kernel.FOS_System.Type,Kernel.FOS_System.Type)"	<remarks>
Method	"Kernel.FOS_System.Type.op_Inequality(Kernel.FOS_System.Type,Kernel.FOS_System.Type)"	<remarks>
Field	Kernel.FOS_System.Type.Signature	<remarks>
Field	Kernel.FOS_System.Type.Size	<remarks>
Field	Kernel.FOS_System.Type.StackSize	<remarks>
Field	Kernel.FOS_System.Type.TheBaseType	<remarks>
Type	Kernel.FOS_System.Collections.Bitmap	<summary>
Type	Kernel.FOS_System.Collections.Bitmap	<remarks>
Method	Kernel.FOS_System.Collections.Bitmap.#ctor(System.Int32)	<remarks>
Method	Kernel.FOS_System.Collections.Bitmap.#ctor(System.Int32)	"<param name=""size""/>"
Field	Kernel.FOS_System.Collections.Bitmap.bitmap	<summary>
Field	Kernel.FOS_System.Collections.Bitmap.bitmap	<remarks>
Method	Kernel.FOS_System.Collections.Bitmap.Clear(System.Int32)	<summary>
Method	Kernel.FOS_System.Collections.Bitmap.Clear(System.Int32)	<remarks>
Method	Kernel.FOS_System.Collections.Bitmap.Clear(System.Int32)	"<param name=""entry""/>"
Property	Kernel.FOS_System.Collections.Bitmap.Count	<summary>
Property	Kernel.FOS_System.Collections.Bitmap.Count	<remarks>
Property	Kernel.FOS_System.Collections.Bitmap.Count	<value>
Method	Kernel.FOS_System.Collections.Bitmap.FindFirstClearEntry	<summary>
Method	Kernel.FOS_System.Collections.Bitmap.FindFirstClearEntry	<remarks>
Method	Kernel.FOS_System.Collections.Bitmap.FindFirstClearEntry	<returns>
Method	Kernel.FOS_System.Collections.Bitmap.FindLastClearEntry	<summary>
Method	Kernel.FOS_System.Collections.Bitmap.FindLastClearEntry	<remarks>
Method	Kernel.FOS_System.Collections.Bitmap.FindLastClearEntry	<returns>
Method	Kernel.FOS_System.Collections.Bitmap.IsSet(System.Int32)	<summary>
Method	Kernel.FOS_System.Collections.Bitmap.IsSet(System.Int32)	<remarks>
Method	Kernel.FOS_System.Collections.Bitmap.IsSet(System.Int32)	<returns>
Method	Kernel.FOS_System.Collections.Bitmap.IsSet(System.Int32)	"<param name=""entry""/>"
Method	Kernel.FOS_System.Collections.Bitmap.Set(System.Int32)	<summary>
Method	Kernel.FOS_System.Collections.Bitmap.Set(System.Int32)	<remarks>
Method	Kernel.FOS_System.Collections.Bitmap.Set(System.Int32)	"<param name=""entry""/>"
Field	Kernel.FOS_System.Collections.Bitmap.setCount	<summary>
Field	Kernel.FOS_System.Collections.Bitmap.setCount	<remarks>
Type	Kernel.FOS_System.Collections.CircularBuffer	<summary>
Type	Kernel.FOS_System.Collections.CircularBuffer	<remarks>
Method	Kernel.FOS_System.Collections.CircularBuffer.#ctor(System.Int32)	<remarks>
Method	Kernel.FOS_System.Collections.CircularBuffer.#ctor(System.Int32)	"<param name=""size""/>"
Method	"Kernel.FOS_System.Collections.CircularBuffer.#ctor(System.Int32,System.Boolean)"	<remarks>
Method	"Kernel.FOS_System.Collections.CircularBuffer.#ctor(System.Int32,System.Boolean)"	"<param name=""size""/>"
Method	"Kernel.FOS_System.Collections.CircularBuffer.#ctor(System.Int32,System.Boolean)"	"<param name=""throwExceptions""/>"
Field	Kernel.FOS_System.Collections.CircularBuffer._array	<summary>
Field	Kernel.FOS_System.Collections.CircularBuffer._array	<remarks>
Field	Kernel.FOS_System.Collections.CircularBuffer.AccessLock	<summary>
Field	Kernel.FOS_System.Collections.CircularBuffer.AccessLock	<remarks>
Property	Kernel.FOS_System.Collections.CircularBuffer.Count	<summary>
Property	Kernel.FOS_System.Collections.CircularBuffer.Count	<remarks>
Property	Kernel.FOS_System.Collections.CircularBuffer.Count	<value>
Method	Kernel.FOS_System.Collections.CircularBuffer.Empty	<summary>
Method	Kernel.FOS_System.Collections.CircularBuffer.Empty	<remarks>
Method	Kernel.FOS_System.Collections.CircularBuffer.Peek	<summary>
Method	Kernel.FOS_System.Collections.CircularBuffer.Peek	<remarks>
Method	Kernel.FOS_System.Collections.CircularBuffer.Peek	<returns>
Method	Kernel.FOS_System.Collections.CircularBuffer.Pop	<summary>
Method	Kernel.FOS_System.Collections.CircularBuffer.Pop	<remarks>
Method	Kernel.FOS_System.Collections.CircularBuffer.Pop	<returns>
Method	Kernel.FOS_System.Collections.CircularBuffer.Push(Kernel.FOS_System.Object)	<summary>
Method	Kernel.FOS_System.Collections.CircularBuffer.Push(Kernel.FOS_System.Object)	<remarks>
Method	Kernel.FOS_System.Collections.CircularBuffer.Push(Kernel.FOS_System.Object)	<returns>
Method	Kernel.FOS_System.Collections.CircularBuffer.Push(Kernel.FOS_System.Object)	"<param name=""obj""/>"
Field	Kernel.FOS_System.Collections.CircularBuffer.ReadIdx	<summary>
Field	Kernel.FOS_System.Collections.CircularBuffer.ReadIdx	<remarks>
Property	Kernel.FOS_System.Collections.CircularBuffer.Size	<summary>
Property	Kernel.FOS_System.Collections.CircularBuffer.Size	<remarks>
Property	Kernel.FOS_System.Collections.CircularBuffer.Size	<value>
Field	Kernel.FOS_System.Collections.CircularBuffer.ThrowExceptions	<summary>
Field	Kernel.FOS_System.Collections.CircularBuffer.ThrowExceptions	<remarks>
Field	Kernel.FOS_System.Collections.CircularBuffer.WriteIdx	<summary>
Field	Kernel.FOS_System.Collections.CircularBuffer.WriteIdx	<remarks>
Type	Kernel.FOS_System.Collections.DelegateList	<remarks>
Method	Kernel.FOS_System.Collections.DelegateList.#ctor	<remarks>
Method	Kernel.FOS_System.Collections.DelegateList.#ctor(System.Int32)	<remarks>
Field	Kernel.FOS_System.Collections.DelegateList._array	<remarks>
Method	Kernel.FOS_System.Collections.DelegateList.Add(System.Delegate)	<remarks>
Property	Kernel.FOS_System.Collections.DelegateList.Count	<remarks>
Property	Kernel.FOS_System.Collections.DelegateList.Count	<value>
Field	Kernel.FOS_System.Collections.DelegateList.currIndex	<remarks>
Method	Kernel.FOS_System.Collections.DelegateList.ExpandCapacity(System.Int32)	<remarks>
Property	Kernel.FOS_System.Collections.DelegateList.Item(System.Int32)	<remarks>
Property	Kernel.FOS_System.Collections.DelegateList.Item(System.Int32)	<value>
Method	Kernel.FOS_System.Collections.DelegateList.Remove(System.Delegate)	<remarks>
Method	Kernel.FOS_System.Collections.List.#ctor	<remarks>
Method	Kernel.FOS_System.Collections.List.#ctor(System.Int32)	<remarks>
Method	Kernel.FOS_System.Collections.List.Add(Kernel.FOS_System.Object)	<remarks>
Property	Kernel.FOS_System.Collections.List.Capacity	<summary>
Property	Kernel.FOS_System.Collections.List.Capacity	<remarks>
Property	Kernel.FOS_System.Collections.List.Capacity	<value>
Property	Kernel.FOS_System.Collections.List.Count	<remarks>
Property	Kernel.FOS_System.Collections.List.Count	<value>
Method	Kernel.FOS_System.Collections.List.Empty	<remarks>
Method	Kernel.FOS_System.Collections.List.ExpandCapacity(System.Int32)	<remarks>
Method	Kernel.FOS_System.Collections.List.IndexOf(Kernel.FOS_System.Object)	<remarks>
Property	Kernel.FOS_System.Collections.List.Item(System.Int32)	<remarks>
Property	Kernel.FOS_System.Collections.List.Item(System.Int32)	<value>
Method	Kernel.FOS_System.Collections.List.Last	<summary>
Method	Kernel.FOS_System.Collections.List.Last	<remarks>
Method	Kernel.FOS_System.Collections.List.Last	<returns>
Field	Kernel.FOS_System.Collections.List.nextIndex	<remarks>
Method	Kernel.FOS_System.Collections.List.Remove(Kernel.FOS_System.Object)	<remarks>
Method	Kernel.FOS_System.Collections.List.RemoveAt(System.Int32)	<remarks>
Method	Kernel.FOS_System.Collections.Stack.#ctor	<remarks>
Method	Kernel.FOS_System.Collections.Stack.#ctor(System.Int32)	<remarks>
Property	Kernel.FOS_System.Collections.Stack.Count	<remarks>
Property	Kernel.FOS_System.Collections.Stack.Count	<value>
Field	Kernel.FOS_System.Collections.Stack.internalList	<remarks>
Method	Kernel.FOS_System.Collections.Stack.Pop	<remarks>
Method	Kernel.FOS_System.Collections.Stack.Push(Kernel.FOS_System.Object)	<remarks>
Method	Kernel.FOS_System.Collections.Stack.Remove(Kernel.FOS_System.Object)	<remarks>
Type	Kernel.FOS_System.Collections.UInt32Dictionary	<summary>
Type	Kernel.FOS_System.Collections.UInt32Dictionary	<remarks>
Method	Kernel.FOS_System.Collections.UInt32Dictionary.#ctor	<remarks>
Method	"Kernel.FOS_System.Collections.UInt32Dictionary.Add(System.UInt32,System.UInt32)"	<summary>
Method	"Kernel.FOS_System.Collections.UInt32Dictionary.Add(System.UInt32,System.UInt32)"	<remarks>
Method	"Kernel.FOS_System.Collections.UInt32Dictionary.Add(System.UInt32,System.UInt32)"	"<param name=""key""/>"
Method	"Kernel.FOS_System.Collections.UInt32Dictionary.Add(System.UInt32,System.UInt32)"	"<param name=""value""/>"
Method	Kernel.FOS_System.Collections.UInt32Dictionary.Contains(System.UInt32)	<summary>
Method	Kernel.FOS_System.Collections.UInt32Dictionary.Contains(System.UInt32)	<remarks>
Method	Kernel.FOS_System.Collections.UInt32Dictionary.Contains(System.UInt32)	<returns>
Method	Kernel.FOS_System.Collections.UInt32Dictionary.Contains(System.UInt32)	"<param name=""key""/>"
Property	Kernel.FOS_System.Collections.UInt32Dictionary.Item(System.UInt32)	<summary>
Property	Kernel.FOS_System.Collections.UInt32Dictionary.Item(System.UInt32)	<remarks>
Property	Kernel.FOS_System.Collections.UInt32Dictionary.Item(System.UInt32)	<value>
Field	Kernel.FOS_System.Collections.UInt32Dictionary.Keys	<summary>
Field	Kernel.FOS_System.Collections.UInt32Dictionary.Keys	<remarks>
Method	Kernel.FOS_System.Collections.UInt32Dictionary.Remove(System.UInt32)	<summary>
Method	Kernel.FOS_System.Collections.UInt32Dictionary.Remove(System.UInt32)	<remarks>
Method	Kernel.FOS_System.Collections.UInt32Dictionary.Remove(System.UInt32)	"<param name=""key""/>"
Field	Kernel.FOS_System.Collections.UInt32Dictionary.Values	<summary>
Field	Kernel.FOS_System.Collections.UInt32Dictionary.Values	<remarks>
Type	Kernel.FOS_System.Collections.UInt32List	<remarks>
Method	Kernel.FOS_System.Collections.UInt32List.#ctor	<remarks>
Method	Kernel.FOS_System.Collections.UInt32List.#ctor(System.Int32)	<remarks>
Field	Kernel.FOS_System.Collections.UInt32List._array	<remarks>
Method	Kernel.FOS_System.Collections.UInt32List.Add(System.UInt32)	<remarks>
Property	Kernel.FOS_System.Collections.UInt32List.Capacity	<summary>
Property	Kernel.FOS_System.Collections.UInt32List.Capacity	<remarks>
Property	Kernel.FOS_System.Collections.UInt32List.Capacity	<value>
Property	Kernel.FOS_System.Collections.UInt32List.Count	<remarks>
Property	Kernel.FOS_System.Collections.UInt32List.Count	<value>
Field	Kernel.FOS_System.Collections.UInt32List.currIndex	<remarks>
Method	Kernel.FOS_System.Collections.UInt32List.ExpandCapacity(System.Int32)	<remarks>
Method	Kernel.FOS_System.Collections.UInt32List.IndexOf(System.UInt32)	<remarks>
Property	Kernel.FOS_System.Collections.UInt32List.Item(System.Int32)	<remarks>
Property	Kernel.FOS_System.Collections.UInt32List.Item(System.Int32)	<value>
Method	Kernel.FOS_System.Collections.UInt32List.Remove(System.UInt32)	<remarks>
Method	Kernel.FOS_System.Collections.UInt32List.RemoveAt(System.Int32)	<remarks>
Type	Kernel.FOS_System.Collections.UInt32Stack	<remarks>
Method	Kernel.FOS_System.Collections.UInt32Stack.#ctor	<remarks>
Method	Kernel.FOS_System.Collections.UInt32Stack.#ctor(System.Int32)	<remarks>
Property	Kernel.FOS_System.Collections.UInt32Stack.Count	<remarks>
Property	Kernel.FOS_System.Collections.UInt32Stack.Count	<value>
Field	Kernel.FOS_System.Collections.UInt32Stack.internalList	<remarks>
Method	Kernel.FOS_System.Collections.UInt32Stack.Pop	<remarks>
Method	Kernel.FOS_System.Collections.UInt32Stack.Push(System.UInt32)	<remarks>
Method	Kernel.FOS_System.Collections.UInt32Stack.Remove(System.UInt32)	<remarks>
Type	Kernel.FOS_System.Exceptions.ArgumentException	<remarks>
Method	Kernel.FOS_System.Exceptions.ArgumentException.#ctor(Kernel.FOS_System.String)	<remarks>
Type	Kernel.FOS_System.Exceptions.ArrayTypeMismatchException	<remarks>
Method	Kernel.FOS_System.Exceptions.ArrayTypeMismatchException.#ctor	<remarks>
Type	Kernel.FOS_System.Exceptions.DivideByZeroException	<remarks>
Method	Kernel.FOS_System.Exceptions.DivideByZeroException.#ctor	<remarks>
Method	Kernel.FOS_System.Exceptions.DivideByZeroException.#ctor(System.UInt32)	<remarks>
Type	Kernel.FOS_System.Exceptions.DoubleFaultException	<remarks>
Method	Kernel.FOS_System.Exceptions.DoubleFaultException.#ctor(System.UInt32)	<remarks>
Method	Kernel.FOS_System.Exceptions.DoubleFaultException.#ctor(System.UInt32)	"<param name=""errorCode""/>"
Field	Kernel.FOS_System.Exceptions.DoubleFaultException.ErrorCode	<summary>
Field	Kernel.FOS_System.Exceptions.DoubleFaultException.ErrorCode	<remarks>
Type	Kernel.FOS_System.Exceptions.IndexOutOfRangeException	<remarks>
Method	Kernel.FOS_System.Exceptions.IndexOutOfRangeException.#ctor	<remarks>
Type	Kernel.FOS_System.Exceptions.InvalidOpCodeException	<remarks>
Method	Kernel.FOS_System.Exceptions.InvalidOpCodeException.#ctor	<remarks>
Type	Kernel.FOS_System.Exceptions.NotSupportedException	<remarks>
Method	Kernel.FOS_System.Exceptions.NotSupportedException.#ctor(Kernel.FOS_System.String)	<remarks>
Type	Kernel.FOS_System.Exceptions.NullReferenceException	<remarks>
Method	Kernel.FOS_System.Exceptions.NullReferenceException.#ctor	<remarks>
Type	Kernel.FOS_System.Exceptions.OutOfMemoryException	<remarks>
Method	Kernel.FOS_System.Exceptions.OutOfMemoryException.#ctor(Kernel.FOS_System.String)	<remarks>
Type	Kernel.FOS_System.Exceptions.OverflowException	<remarks>
Method	Kernel.FOS_System.Exceptions.OverflowException.#ctor	<remarks>
Type	Kernel.FOS_System.Exceptions.PageFaultException	<remarks>
Method	"Kernel.FOS_System.Exceptions.PageFaultException.#ctor(System.UInt32,System.UInt32)"	<remarks>
Field	Kernel.FOS_System.Exceptions.PageFaultException.address	<remarks>
Field	Kernel.FOS_System.Exceptions.PageFaultException.errorCode	<remarks>
Type	Kernel.FOS_System.Exceptions.StackException	<remarks>
Method	Kernel.FOS_System.Exceptions.StackException.#ctor	<remarks>
Type	Kernel.FOS_System.IO.Base	<remarks>
Method	"Kernel.FOS_System.IO.Base.#ctor(Kernel.FOS_System.IO.FileSystem,Kernel.FOS_System.IO.Directory,Kernel.FOS_System.String,System.Boolean)"	<remarks>
Method	Kernel.FOS_System.IO.Base.Delete	<remarks>
Method	Kernel.FOS_System.IO.Base.GetFullPath	<remarks>
Field	Kernel.FOS_System.IO.Base.IsDirectory	<remarks>
Field	Kernel.FOS_System.IO.Base.mSize	<remarks>
Field	Kernel.FOS_System.IO.Base.Name	<remarks>
Field	Kernel.FOS_System.IO.Base.Parent	<remarks>
Property	Kernel.FOS_System.IO.Base.Size	<remarks>
Property	Kernel.FOS_System.IO.Base.Size	<value>
Field	Kernel.FOS_System.IO.Base.TheFileSystem	<remarks>
Type	Kernel.FOS_System.IO.Directory	<remarks>
Method	"Kernel.FOS_System.IO.Directory.#ctor(Kernel.FOS_System.IO.FileSystem,Kernel.FOS_System.IO.Directory,Kernel.FOS_System.String)"	<remarks>
Method	Kernel.FOS_System.IO.Directory.AddListing(Kernel.FOS_System.IO.Base)	<remarks>
Method	Kernel.FOS_System.IO.Directory.Delete(Kernel.FOS_System.String)	<remarks>
Method	Kernel.FOS_System.IO.Directory.Find(Kernel.FOS_System.String)	<remarks>
Method	Kernel.FOS_System.IO.Directory.GetListing(Kernel.FOS_System.Collections.List)	<remarks>
Method	Kernel.FOS_System.IO.Directory.GetListings	<remarks>
Method	Kernel.FOS_System.IO.Directory.ListingExists(Kernel.FOS_System.String)	<remarks>
Method	"Kernel.FOS_System.IO.Directory.ListingExists(Kernel.FOS_System.String,Kernel.FOS_System.Collections.List)"	<remarks>
Method	Kernel.FOS_System.IO.Directory.RemoveListing(Kernel.FOS_System.IO.Base)	<remarks>
Method	Kernel.FOS_System.IO.Directory.WriteListings	<remarks>
Type	Kernel.FOS_System.IO.File	<remarks>
Method	"Kernel.FOS_System.IO.File.#ctor(Kernel.FOS_System.IO.FileSystem,Kernel.FOS_System.IO.Directory,Kernel.FOS_System.String,System.UInt64)"	<remarks>
Method	Kernel.FOS_System.IO.File.Delete(Kernel.FOS_System.String)	<remarks>
Method	Kernel.FOS_System.IO.File.GetStream	<remarks>
Method	Kernel.FOS_System.IO.File.Open(Kernel.FOS_System.String)	<remarks>
Type	Kernel.FOS_System.IO.FileSystem	<remarks>
Method	Kernel.FOS_System.IO.FileSystem.#ctor(Kernel.FOS_System.IO.Partition)	<remarks>
Method	Kernel.FOS_System.IO.FileSystem.CleanDiskCaches	<summary>
Method	Kernel.FOS_System.IO.FileSystem.CleanDiskCaches	<remarks>
Method	Kernel.FOS_System.IO.FileSystem.GetListing(Kernel.FOS_System.String)	<remarks>
Method	"Kernel.FOS_System.IO.FileSystem.GetListingFromListings(Kernel.FOS_System.Collections.List,Kernel.FOS_System.IO.Directory,Kernel.FOS_System.Collections.List)"	<remarks>
Method	"Kernel.FOS_System.IO.FileSystem.NewDirectory(Kernel.FOS_System.String,Kernel.FOS_System.IO.Directory)"	<remarks>
Method	"Kernel.FOS_System.IO.FileSystem.NewFile(Kernel.FOS_System.String,Kernel.FOS_System.IO.Directory)"	<remarks>
Property	Kernel.FOS_System.IO.FileSystem.TheMapping	<remarks>
Property	Kernel.FOS_System.IO.FileSystem.TheMapping	<value>
Field	Kernel.FOS_System.IO.FileSystem.thePartition	<remarks>
Property	Kernel.FOS_System.IO.FileSystem.ThePartition	<remarks>
Property	Kernel.FOS_System.IO.FileSystem.ThePartition	<value>
Type	Kernel.FOS_System.IO.FileSystemManager	<remarks>
Method	Kernel.FOS_System.IO.FileSystemManager.#cctor	<remarks>
Field	Kernel.FOS_System.IO.FileSystemManager.FileSystemMappings	<remarks>
Method	Kernel.FOS_System.IO.FileSystemManager.GetMapping(Kernel.FOS_System.String)	<remarks>
Method	Kernel.FOS_System.IO.FileSystemManager.HasMapping(Kernel.FOS_System.IO.Partition)	<remarks>
Method	Kernel.FOS_System.IO.FileSystemManager.Init	<remarks>
Method	Kernel.FOS_System.IO.FileSystemManager.InitAsGPT(Kernel.Hardware.Devices.DiskDevice)	<remarks>
Method	Kernel.FOS_System.IO.FileSystemManager.InitAsMBR(Kernel.Hardware.Devices.DiskDevice)	<remarks>
Method	Kernel.FOS_System.IO.FileSystemManager.InitDisk(Kernel.Hardware.Devices.DiskDevice)	<remarks>
Method	Kernel.FOS_System.IO.FileSystemManager.InitPartitions	<remarks>
Field	Kernel.FOS_System.IO.FileSystemManager.Partitions	<remarks>
Field	Kernel.FOS_System.IO.FileSystemManager.PathDelimiter	<remarks>
Method	"Kernel.FOS_System.IO.FileSystemManager.ProcessGPT(Kernel.FOS_System.IO.Disk.GPT,Kernel.Hardware.Devices.DiskDevice)"	<remarks>
Method	"Kernel.FOS_System.IO.FileSystemManager.ProcessMBR(Kernel.FOS_System.IO.Disk.MBR,Kernel.Hardware.Devices.DiskDevice)"	<remarks>
Type	Kernel.FOS_System.IO.FileSystemMapping	<remarks>
Method	"Kernel.FOS_System.IO.FileSystemMapping.#ctor(Kernel.FOS_System.String,Kernel.FOS_System.IO.FileSystem)"	<remarks>
Method	Kernel.FOS_System.IO.FileSystemMapping.PathMatchesMapping(Kernel.FOS_System.String)	<remarks>
Field	Kernel.FOS_System.IO.FileSystemMapping.prefix	<remarks>
Property	Kernel.FOS_System.IO.FileSystemMapping.Prefix	<remarks>
Property	Kernel.FOS_System.IO.FileSystemMapping.Prefix	<value>
Method	Kernel.FOS_System.IO.FileSystemMapping.RemoveMappingPrefix(Kernel.FOS_System.String)	<remarks>
Field	Kernel.FOS_System.IO.FileSystemMapping.theFileSystem	<remarks>
Property	Kernel.FOS_System.IO.FileSystemMapping.TheFileSystem	<remarks>
Property	Kernel.FOS_System.IO.FileSystemMapping.TheFileSystem	<value>
Type	Kernel.FOS_System.IO.IOException	<remarks>
Method	Kernel.FOS_System.IO.IOException.#ctor(System.String)	<remarks>
Type	Kernel.FOS_System.IO.Partition	<remarks>
Method	"Kernel.FOS_System.IO.Partition.#ctor(Kernel.Hardware.Devices.DiskDevice,System.UInt64,System.UInt64)"	<remarks>
Method	Kernel.FOS_System.IO.Partition.CleanCaches	<remarks>
Method	Kernel.FOS_System.IO.Partition.GetFirstPartition(Kernel.Hardware.Devices.DiskDevice)	<remarks>
Method	Kernel.FOS_System.IO.Partition.HasPartitions(Kernel.Hardware.Devices.DiskDevice)	<remarks>
Field	Kernel.FOS_System.IO.Partition.Mapped	<summary>
Field	Kernel.FOS_System.IO.Partition.Mapped	<remarks>
Method	"Kernel.FOS_System.IO.Partition.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Field	Kernel.FOS_System.IO.Partition.StartingSector	<remarks>
Field	Kernel.FOS_System.IO.Partition.TheDiskDevice	<remarks>
Field	Kernel.FOS_System.IO.Partition.VolumeID	<remarks>
Method	"Kernel.FOS_System.IO.Partition.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Type	Kernel.FOS_System.IO.Disk.EBR	<remarks>
Method	Kernel.FOS_System.IO.Disk.EBR.#ctor(System.Byte[])	<remarks>
Type	Kernel.FOS_System.IO.Disk.GPT	<remarks>
Method	Kernel.FOS_System.IO.Disk.GPT.#ctor	<remarks>
Method	Kernel.FOS_System.IO.Disk.GPT.#ctor(Kernel.Hardware.Devices.DiskDevice)	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.DiskGUID	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.FirstUsableLBAForPartitions	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.HeaderBackupLBA	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.HeaderCRC32	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.HeaderLBA	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.HeaderSize	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.IsValid	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.LastUsableLBAForPartitions	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.NumPartitionEntries	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.PartitionArrayCRC32	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.Partitions	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.Revision	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.SizeOfPartitionEntry	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.StartingLBAOfPartitionArray	<remarks>
Type	Kernel.FOS_System.IO.Disk.GPT.PartitionInfo	<remarks>
Method	"Kernel.FOS_System.IO.Disk.GPT.PartitionInfo.#ctor(System.Byte[],System.UInt32,System.UInt32)"	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.PartitionInfo.Attributes	<remarks>
Property	Kernel.FOS_System.IO.Disk.GPT.PartitionInfo.Empty	<remarks>
Property	Kernel.FOS_System.IO.Disk.GPT.PartitionInfo.Empty	<value>
Field	Kernel.FOS_System.IO.Disk.GPT.PartitionInfo.FirstLBA	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.PartitionInfo.ID	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.PartitionInfo.LastLBA	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.PartitionInfo.Name	<remarks>
Field	Kernel.FOS_System.IO.Disk.GPT.PartitionInfo.TypeID	<remarks>
Type	Kernel.FOS_System.IO.Disk.MBR	<remarks>
Method	Kernel.FOS_System.IO.Disk.MBR.#ctor	<remarks>
Method	Kernel.FOS_System.IO.Disk.MBR.#ctor(System.Byte[])	<remarks>
Method	Kernel.FOS_System.IO.Disk.MBR.AddPartitionToList(Kernel.FOS_System.IO.Disk.MBR.PartitionInfo)	<remarks>
Method	"Kernel.FOS_System.IO.Disk.MBR.CreateFAT32PartitionInfo(Kernel.Hardware.Devices.DiskDevice,System.Boolean)"	<remarks>
Method	"Kernel.FOS_System.IO.Disk.MBR.FormatDisk(Kernel.Hardware.Devices.DiskDevice,Kernel.FOS_System.Collections.List)"	<remarks>
Field	Kernel.FOS_System.IO.Disk.MBR.IsValid	<remarks>
Field	Kernel.FOS_System.IO.Disk.MBR.numPartitions	<remarks>
Property	Kernel.FOS_System.IO.Disk.MBR.NumPartitions	<remarks>
Property	Kernel.FOS_System.IO.Disk.MBR.NumPartitions	<value>
Method	"Kernel.FOS_System.IO.Disk.MBR.ParsePartition(System.Byte[],System.UInt32)"	<remarks>
Field	Kernel.FOS_System.IO.Disk.MBR.Partitions	<remarks>
Property	Kernel.FOS_System.IO.Disk.MBR.PartitionsCapacity	<remarks>
Property	Kernel.FOS_System.IO.Disk.MBR.PartitionsCapacity	<value>
Type	Kernel.FOS_System.IO.Disk.MBR.PartitionInfo	<remarks>
Method	"Kernel.FOS_System.IO.Disk.MBR.PartitionInfo.#ctor(System.Boolean,System.Byte,System.UInt32,System.UInt32)"	<remarks>
Method	Kernel.FOS_System.IO.Disk.MBR.PartitionInfo.#ctor(System.UInt32)	<remarks>
Field	Kernel.FOS_System.IO.Disk.MBR.PartitionInfo.Bootable	<remarks>
Field	Kernel.FOS_System.IO.Disk.MBR.PartitionInfo.EBRLocation	<remarks>
Field	Kernel.FOS_System.IO.Disk.MBR.PartitionInfo.SectorCount	<remarks>
Field	Kernel.FOS_System.IO.Disk.MBR.PartitionInfo.StartSector	<remarks>
Field	Kernel.FOS_System.IO.Disk.MBR.PartitionInfo.SystemID	<remarks>
Type	Kernel.FOS_System.IO.FAT.FATDirectory	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATDirectory.#ctor(Kernel.FOS_System.IO.FAT.FATFileSystem,Kernel.FOS_System.IO.FAT.FATDirectory,Kernel.FOS_System.String,System.UInt32)"	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATDirectory._cachedlistings	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATDirectory._fileStream	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATDirectory._theFile	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATDirectory.AddListing(Kernel.FOS_System.IO.Base)	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATDirectory.Delete	<remarks>
Property	Kernel.FOS_System.IO.FAT.FATDirectory.FirstClusterNum	<remarks>
Property	Kernel.FOS_System.IO.FAT.FATDirectory.FirstClusterNum	<value>
Method	Kernel.FOS_System.IO.FAT.FATDirectory.Get_FileStream	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATDirectory.GetFullPath	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATDirectory.GetListing(Kernel.FOS_System.Collections.List)	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATDirectory.GetListings	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATDirectory.RemoveListing(Kernel.FOS_System.IO.Base)	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATDirectory.WriteListings	<remarks>
Type	Kernel.FOS_System.IO.FAT.FATFile	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATFile.Delete	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFile.FirstClusterNum	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFile.IsDirectoryFile	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFile.TheFATFileSystem	<remarks>
Type	Kernel.FOS_System.IO.FAT.FATFileSystem	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem._rootDirectoryFAT32	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem._rootDirectoryListings	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.BytesPerCluster	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.BytesPerSector	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.CalculateShortNameCheckSum(System.Byte[])	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.CleanDiskCaches	<summary>
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.CleanDiskCaches	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.ClusterCount	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.DataSector	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.DataSectorCount	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.EncodeDirectoryTable(Kernel.FOS_System.Collections.List,System.Boolean,System.UInt64)"	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.EncodeDirectoryTable(Kernel.FOS_System.Collections.List,System.Boolean,System.UInt64)"	"<param name=""minTableSize""/>"
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.FATEntryIndicatesEOF(System.UInt32)	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.FATEntryIndicatesFree(System.UInt32)	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.FATSectorCount	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.FATType	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.FormatPartitionAsFAT32(Kernel.FOS_System.IO.Partition)	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.GetFATEntryEOFValue(Kernel.FOS_System.IO.FAT.FATFileSystem.FATTypeEnum)	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.GetFATTableSectorPosition(System.UInt32)	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.GetListing(Kernel.FOS_System.String)	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.GetRootDirectoryListings	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.GetShortName(Kernel.FOS_System.String,System.Boolean)"	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.IsLongNameListing(Kernel.FOS_System.IO.Base)	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.IsValid	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.NewClusterArray	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.NewDirectory(Kernel.FOS_System.String,Kernel.FOS_System.IO.Directory)"	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.NewFile(Kernel.FOS_System.String,Kernel.FOS_System.IO.Directory)"	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.NumberOfFATs	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.ParseDirectoryTable(System.Byte[],System.Int32,Kernel.FOS_System.IO.FAT.FATDirectory)"	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.ReadCluster(System.UInt32,System.Byte[])"	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.ReadClusterChain(System.UInt64,System.UInt32)"	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.ReadFATEntry(System.Byte[],System.UInt32,System.UInt32)"	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.ReadFATSector(System.UInt64,System.Byte[])"	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.ReservedSectorCount	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.RootCluster	<remarks>
Property	Kernel.FOS_System.IO.FAT.FATFileSystem.RootDirectory_FAT32	<remarks>
Property	Kernel.FOS_System.IO.FAT.FATFileSystem.RootDirectory_FAT32	<value>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.RootEntryCount	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.RootSector	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.RootSectorCount	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.SectorsPerCluster	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.SetFATEntryAndSave(System.UInt32,System.UInt32)"	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.TotalSectorCount	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.WriteCluster(System.UInt32,System.Byte[])"	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.WriteFATEntry(System.Byte[],System.UInt32,System.UInt32,System.UInt32)"	<remarks>
Method	"Kernel.FOS_System.IO.FAT.FATFileSystem.WriteFATSector(System.UInt64,System.Byte[])"	<remarks>
Type	Kernel.FOS_System.IO.FAT.FATFileSystem.FATTypeEnum	<remarks>
Type	Kernel.FOS_System.IO.FAT.FATFileSystem.ListingAttribs	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.ListingAttribs.Archive	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.ListingAttribs.Directory	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.ListingAttribs.Hidden	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.ListingAttribs.LongName	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.ListingAttribs.System	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.ListingAttribs.Test	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.ListingAttribs.VolumeID	<remarks>
Type	Kernel.FOS_System.IO.FAT.FATFileSystem.TableSectorDescrip	<remarks>
Method	Kernel.FOS_System.IO.FAT.FATFileSystem.TableSectorDescrip.#ctor	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.TableSectorDescrip.Offset	<remarks>
Field	Kernel.FOS_System.IO.FAT.FATFileSystem.TableSectorDescrip.Sector	<remarks>
Type	Kernel.FOS_System.IO.Streams.CachedFileStream	<summary>
Type	Kernel.FOS_System.IO.Streams.CachedFileStream	<remarks>
Method	Kernel.FOS_System.IO.Streams.CachedFileStream.#ctor(Kernel.FOS_System.IO.Streams.FileStream)	<remarks>
Method	Kernel.FOS_System.IO.Streams.CachedFileStream.#ctor(Kernel.FOS_System.IO.Streams.FileStream)	"<param name=""AnUnderlyingStream""/>"
Field	Kernel.FOS_System.IO.Streams.CachedFileStream.CachedData	<summary>
Field	Kernel.FOS_System.IO.Streams.CachedFileStream.CachedData	<remarks>
Property	Kernel.FOS_System.IO.Streams.CachedFileStream.Position	<summary>
Property	Kernel.FOS_System.IO.Streams.CachedFileStream.Position	<remarks>
Property	Kernel.FOS_System.IO.Streams.CachedFileStream.Position	<value>
Method	"Kernel.FOS_System.IO.Streams.CachedFileStream.Read(System.Byte[],System.Int32,System.Int32)"	<summary>
Method	"Kernel.FOS_System.IO.Streams.CachedFileStream.Read(System.Byte[],System.Int32,System.Int32)"	<remarks>
Method	"Kernel.FOS_System.IO.Streams.CachedFileStream.Read(System.Byte[],System.Int32,System.Int32)"	<returns>
Method	"Kernel.FOS_System.IO.Streams.CachedFileStream.Read(System.Byte[],System.Int32,System.Int32)"	"<param name=""buffer""/>"
Method	"Kernel.FOS_System.IO.Streams.CachedFileStream.Read(System.Byte[],System.Int32,System.Int32)"	"<param name=""offset""/>"
Method	"Kernel.FOS_System.IO.Streams.CachedFileStream.Read(System.Byte[],System.Int32,System.Int32)"	"<param name=""count""/>"
Field	Kernel.FOS_System.IO.Streams.CachedFileStream.UnderlyingStream	<summary>
Field	Kernel.FOS_System.IO.Streams.CachedFileStream.UnderlyingStream	<remarks>
Method	"Kernel.FOS_System.IO.Streams.CachedFileStream.Write(System.Byte[],System.Int32,System.Int32)"	<summary>
Method	"Kernel.FOS_System.IO.Streams.CachedFileStream.Write(System.Byte[],System.Int32,System.Int32)"	<remarks>
Method	"Kernel.FOS_System.IO.Streams.CachedFileStream.Write(System.Byte[],System.Int32,System.Int32)"	"<param name=""buffer""/>"
Method	"Kernel.FOS_System.IO.Streams.CachedFileStream.Write(System.Byte[],System.Int32,System.Int32)"	"<param name=""offset""/>"
Method	"Kernel.FOS_System.IO.Streams.CachedFileStream.Write(System.Byte[],System.Int32,System.Int32)"	"<param name=""count""/>"
Type	Kernel.FOS_System.IO.Streams.FileStream	<remarks>
Method	Kernel.FOS_System.IO.Streams.FileStream.#ctor(Kernel.FOS_System.IO.File)	<remarks>
Method	Kernel.FOS_System.IO.Streams.FileStream.Create(Kernel.FOS_System.IO.File)	<remarks>
Field	Kernel.FOS_System.IO.Streams.FileStream.theFile	<remarks>
Property	Kernel.FOS_System.IO.Streams.FileStream.TheFile	<remarks>
Property	Kernel.FOS_System.IO.Streams.FileStream.TheFile	<value>
Type	Kernel.FOS_System.IO.Streams.Stream	<remarks>
Method	Kernel.FOS_System.IO.Streams.Stream.#ctor	<remarks>
Property	Kernel.FOS_System.IO.Streams.Stream.Position	<remarks>
Property	Kernel.FOS_System.IO.Streams.Stream.Position	<value>
Method	"Kernel.FOS_System.IO.Streams.Stream.Read(System.Byte[],System.Int32,System.Int32)"	<remarks>
Method	"Kernel.FOS_System.IO.Streams.Stream.Write(System.Byte[],System.Int32,System.Int32)"	<remarks>
Type	Kernel.FOS_System.IO.Streams.FAT.FATFileStream	<remarks>
Method	"Kernel.FOS_System.IO.Streams.FAT.FATFileStream.#ctor(Kernel.FOS_System.IO.FAT.FATFile,System.Boolean)"	<remarks>
Field	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.ClusterNums	<remarks>
Method	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.ExpandToIntendedSize(System.UInt32)	<summary>
Method	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.ExpandToIntendedSize(System.UInt32)	<remarks>
Method	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.ExpandToIntendedSize(System.UInt32)	"<param name=""IntendedSize""/>"
Method	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.GetActualSize	<remarks>
Method	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.GetClusterNums	<remarks>
Field	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.mPosition	<remarks>
Property	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.Position	<remarks>
Property	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.Position	<value>
Method	"Kernel.FOS_System.IO.Streams.FAT.FATFileStream.Read(System.Byte[],System.Int32,System.Int32)"	<remarks>
Field	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.tempClusterData	<summary>
Field	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.tempClusterData	<remarks>
Property	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.TheFATFile	<remarks>
Property	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.TheFATFile	<value>
Property	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.TheFATFileSystem	<remarks>
Property	Kernel.FOS_System.IO.Streams.FAT.FATFileStream.TheFATFileSystem	<value>
Method	"Kernel.FOS_System.IO.Streams.FAT.FATFileStream.Write(System.Byte[],System.Int32,System.Int32)"	<remarks>
Namespace	Kernel.FOS_System.Processes.Synchronisation	<summary>
Type	Kernel.FOS_System.Processes.Synchronisation.SpinLock	<summary>
Type	Kernel.FOS_System.Processes.Synchronisation.SpinLock	<remarks>
Method	Kernel.FOS_System.Processes.Synchronisation.SpinLock.#ctor(System.Int32)	<remarks>
Method	Kernel.FOS_System.Processes.Synchronisation.SpinLock.#ctor(System.Int32)	"<param name=""anId""/>"
Method	Kernel.FOS_System.Processes.Synchronisation.SpinLock._Enter	<summary>
Method	Kernel.FOS_System.Processes.Synchronisation.SpinLock._Enter	<remarks>
Method	Kernel.FOS_System.Processes.Synchronisation.SpinLock._Exit	<summary>
Method	Kernel.FOS_System.Processes.Synchronisation.SpinLock._Exit	<remarks>
Method	Kernel.FOS_System.Processes.Synchronisation.SpinLock.Enter	<summary>
Method	Kernel.FOS_System.Processes.Synchronisation.SpinLock.Enter	<remarks>
Method	Kernel.FOS_System.Processes.Synchronisation.SpinLock.Exit	<summary>
Method	Kernel.FOS_System.Processes.Synchronisation.SpinLock.Exit	<remarks>
Field	Kernel.FOS_System.Processes.Synchronisation.SpinLock.id	<summary>
Field	Kernel.FOS_System.Processes.Synchronisation.SpinLock.id	<remarks>
Property	Kernel.FOS_System.Processes.Synchronisation.SpinLock.Id	<summary>
Property	Kernel.FOS_System.Processes.Synchronisation.SpinLock.Id	<remarks>
Property	Kernel.FOS_System.Processes.Synchronisation.SpinLock.Id	<value>
Field	Kernel.FOS_System.Processes.Synchronisation.SpinLock.locked	<summary>
Field	Kernel.FOS_System.Processes.Synchronisation.SpinLock.locked	<remarks>
Property	Kernel.FOS_System.Processes.Synchronisation.SpinLock.Locked	<summary>
Property	Kernel.FOS_System.Processes.Synchronisation.SpinLock.Locked	<remarks>
Property	Kernel.FOS_System.Processes.Synchronisation.SpinLock.Locked	<value>
Type	Kernel.FOS_System.Stubs.UInt32	<remarks>
Property	Kernel.FOS_System.Stubs.UInt32.MaxValue	<remarks>
Property	Kernel.FOS_System.Stubs.UInt32.MaxValue	<value>
Type	Kernel.Hardware.BlockDevice	<remarks>
Method	Kernel.Hardware.BlockDevice.#ctor	<remarks>
Field	Kernel.Hardware.BlockDevice.blockCount	<remarks>
Property	Kernel.Hardware.BlockDevice.BlockCount	<remarks>
Property	Kernel.Hardware.BlockDevice.BlockCount	<value>
Field	Kernel.Hardware.BlockDevice.blockSize	<remarks>
Property	Kernel.Hardware.BlockDevice.BlockSize	<remarks>
Property	Kernel.Hardware.BlockDevice.BlockSize	<value>
Method	Kernel.Hardware.BlockDevice.NewBlockArray(System.UInt32)	<remarks>
Method	"Kernel.Hardware.BlockDevice.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Type	Kernel.Hardware.Device	<remarks>
Method	Kernel.Hardware.Device.#ctor	<remarks>
Field	Kernel.Hardware.Device.IsNew	<summary>
Field	Kernel.Hardware.Device.IsNew	<remarks>
Type	Kernel.Hardware.DeviceAddedHandler	<summary>
Type	Kernel.Hardware.DeviceAddedHandler	<remarks>
Type	Kernel.Hardware.DeviceManager	<remarks>
Method	Kernel.Hardware.DeviceManager.#cctor	<remarks>
Method	Kernel.Hardware.DeviceManager.AddDevice(Kernel.Hardware.Device)	<summary>
Method	Kernel.Hardware.DeviceManager.AddDevice(Kernel.Hardware.Device)	<remarks>
Method	Kernel.Hardware.DeviceManager.AddDevice(Kernel.Hardware.Device)	"<param name=""aDevice""/>"
Method	"Kernel.Hardware.DeviceManager.AddDeviceAddedListener(Kernel.Hardware.DeviceAddedHandler,Kernel.FOS_System.Object)"	<summary>
Method	"Kernel.Hardware.DeviceManager.AddDeviceAddedListener(Kernel.Hardware.DeviceAddedHandler,Kernel.FOS_System.Object)"	<remarks>
Method	"Kernel.Hardware.DeviceManager.AddDeviceAddedListener(Kernel.Hardware.DeviceAddedHandler,Kernel.FOS_System.Object)"	"<param name=""aHandler""/>"
Method	"Kernel.Hardware.DeviceManager.AddDeviceAddedListener(Kernel.Hardware.DeviceAddedHandler,Kernel.FOS_System.Object)"	"<param name=""aState""/>"
Field	Kernel.Hardware.DeviceManager.DeviceAddedListeners	<summary>
Field	Kernel.Hardware.DeviceManager.DeviceAddedListeners	<remarks>
Method	Kernel.Hardware.DeviceManager.NotifyDevicesNeedUpdate	<summary>
Method	Kernel.Hardware.DeviceManager.NotifyDevicesNeedUpdate	<remarks>
Method	Kernel.Hardware.DeviceManager.UpdateDevices	<summary>
Method	Kernel.Hardware.DeviceManager.UpdateDevices	<remarks>
Type	Kernel.Hardware.DeviceManager.DeviceAddedListener	<summary>
Type	Kernel.Hardware.DeviceManager.DeviceAddedListener	<remarks>
Method	Kernel.Hardware.DeviceManager.DeviceAddedListener.#ctor	<remarks>
Field	Kernel.Hardware.DeviceManager.DeviceAddedListener.handler	<summary>
Field	Kernel.Hardware.DeviceManager.DeviceAddedListener.handler	<remarks>
Field	Kernel.Hardware.DeviceManager.DeviceAddedListener.state	<summary>
Field	Kernel.Hardware.DeviceManager.DeviceAddedListener.state	<remarks>
Type	Kernel.Hardware.VirtMemManager	<remarks>
Method	Kernel.Hardware.VirtMemManager.FindFreePhysPage	<summary>
Method	Kernel.Hardware.VirtMemManager.FindFreePhysPage	<remarks>
Method	Kernel.Hardware.VirtMemManager.FindFreePhysPage	<returns>
Method	Kernel.Hardware.VirtMemManager.FindFreeVirtPage	<summary>
Method	Kernel.Hardware.VirtMemManager.FindFreeVirtPage	<remarks>
Method	Kernel.Hardware.VirtMemManager.FindFreeVirtPage	<returns>
Field	Kernel.Hardware.VirtMemManager.impl	<remarks>
Method	Kernel.Hardware.VirtMemManager.Init	<remarks>
Method	"Kernel.Hardware.VirtMemManager.Map(System.UInt32,System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMemManager.Map(System.UInt32,System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""flags""/>"
Method	"Kernel.Hardware.VirtMemManager.Map(System.UInt32,System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""UpdateUsedPages""/>"
Method	"Kernel.Hardware.VirtMemManager.Map(System.UInt32,System.Void*,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMemManager.Map(System.UInt32,System.Void*,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""flags""/>"
Method	"Kernel.Hardware.VirtMemManager.Map(System.UInt32,System.Void*,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""UpdateUsedPages""/>"
Method	"Kernel.Hardware.VirtMemManager.Map(System.Void*,System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMemManager.Map(System.Void*,System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""flags""/>"
Method	"Kernel.Hardware.VirtMemManager.Map(System.Void*,System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""UpdateUsedPages""/>"
Method	"Kernel.Hardware.VirtMemManager.Map(System.Void*,System.Void*,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMemManager.Map(System.Void*,System.Void*,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""flags""/>"
Method	"Kernel.Hardware.VirtMemManager.Map(System.Void*,System.Void*,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""UpdateUsedPages""/>"
Method	Kernel.Hardware.VirtMemManager.MapFreePage(Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags)	<summary>
Method	Kernel.Hardware.VirtMemManager.MapFreePage(Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags)	<remarks>
Method	Kernel.Hardware.VirtMemManager.MapFreePage(Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags)	<returns>
Method	Kernel.Hardware.VirtMemManager.MapFreePage(Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags)	"<param name=""flags""/>"
Method	Kernel.Hardware.VirtMemManager.PrintUsedPages	<remarks>
Method	Kernel.Hardware.VirtMemManager.Test	<remarks>
Method	"Kernel.Hardware.VirtMemManager.Unmap(System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<summary>
Method	"Kernel.Hardware.VirtMemManager.Unmap(System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMemManager.Unmap(System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""vAddr""/>"
Method	"Kernel.Hardware.VirtMemManager.Unmap(System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""UpdateUsedPages""/>"
Method	"Kernel.Hardware.VirtMemManager.Unmap(System.Void*,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<summary>
Method	"Kernel.Hardware.VirtMemManager.Unmap(System.Void*,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMemManager.Unmap(System.Void*,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""vAddr""/>"
Method	"Kernel.Hardware.VirtMemManager.Unmap(System.Void*,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""UpdateUsedPages""/>"
Type	Kernel.Hardware.ATA.ATA	<remarks>
Method	Kernel.Hardware.ATA.ATA.#ctor	<remarks>
Field	Kernel.Hardware.ATA.ATA.busPosition	<remarks>
Field	Kernel.Hardware.ATA.ATA.controllerId	<remarks>
Type	Kernel.Hardware.ATA.ATA.BusPosition	<remarks>
Type	Kernel.Hardware.ATA.ATA.ControllerID	<remarks>
Type	Kernel.Hardware.ATA.ATAIOPorts	<remarks>
Method	Kernel.Hardware.ATA.ATAIOPorts.#ctor(System.Boolean)	<remarks>
Field	Kernel.Hardware.ATA.ATAIOPorts.Command	<remarks>
Field	Kernel.Hardware.ATA.ATAIOPorts.Data	<remarks>
Field	Kernel.Hardware.ATA.ATAIOPorts.DeviceSelect	<remarks>
Field	Kernel.Hardware.ATA.ATAIOPorts.LBA0	<remarks>
Field	Kernel.Hardware.ATA.ATAIOPorts.LBA1	<remarks>
Field	Kernel.Hardware.ATA.ATAIOPorts.LBA2	<remarks>
Field	Kernel.Hardware.ATA.ATAIOPorts.SectorCount	<remarks>
Field	Kernel.Hardware.ATA.ATAIOPorts.Status	<remarks>
Type	Kernel.Hardware.ATA.ATAManager	<remarks>
Method	Kernel.Hardware.ATA.ATAManager.#cctor	<remarks>
Field	Kernel.Hardware.ATA.ATAManager.ATAIO1	<remarks>
Field	Kernel.Hardware.ATA.ATAManager.ATAIO2	<remarks>
Method	Kernel.Hardware.ATA.ATAManager.Init	<remarks>
Method	"Kernel.Hardware.ATA.ATAManager.InitDrive(Kernel.Hardware.ATA.ATA.ControllerID,Kernel.Hardware.ATA.ATA.BusPosition)"	<remarks>
Type	Kernel.Hardware.ATA.PATA	<remarks>
Method	Kernel.Hardware.ATA.PATA.#ctor(Kernel.Hardware.ATA.PATABase)	<remarks>
Method	Kernel.Hardware.ATA.PATA.#ctor(Kernel.Hardware.ATA.PATABase)	"<param name=""baseDevice""/>"
Field	Kernel.Hardware.ATA.PATA.BaseDevice	<summary>
Field	Kernel.Hardware.ATA.PATA.BaseDevice	<remarks>
Method	Kernel.Hardware.ATA.PATA.CleanCaches	<remarks>
Property	Kernel.Hardware.ATA.PATA.FirmwareRev	<summary>
Property	Kernel.Hardware.ATA.PATA.FirmwareRev	<remarks>
Property	Kernel.Hardware.ATA.PATA.FirmwareRev	<value>
Property	Kernel.Hardware.ATA.PATA.ModelNo	<summary>
Property	Kernel.Hardware.ATA.PATA.ModelNo	<remarks>
Property	Kernel.Hardware.ATA.PATA.ModelNo	<value>
Method	"Kernel.Hardware.ATA.PATA.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Method	"Kernel.Hardware.ATA.PATA.SelectSector(System.UInt64,System.UInt32)"	<remarks>
Property	Kernel.Hardware.ATA.PATA.SerialNo	<summary>
Property	Kernel.Hardware.ATA.PATA.SerialNo	<remarks>
Property	Kernel.Hardware.ATA.PATA.SerialNo	<value>
Method	"Kernel.Hardware.ATA.PATA.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Type	Kernel.Hardware.ATA.PATABase	<summary>
Type	Kernel.Hardware.ATA.PATABase	<remarks>
Method	"Kernel.Hardware.ATA.PATABase.#ctor(Kernel.Hardware.ATA.ATAIOPorts,Kernel.Hardware.ATA.ATA.ControllerID,Kernel.Hardware.ATA.ATA.BusPosition)"	<remarks>
Method	"Kernel.Hardware.ATA.PATABase.#ctor(Kernel.Hardware.ATA.ATAIOPorts,Kernel.Hardware.ATA.ATA.ControllerID,Kernel.Hardware.ATA.ATA.BusPosition)"	"<param name=""anIO""/>"
Method	"Kernel.Hardware.ATA.PATABase.#ctor(Kernel.Hardware.ATA.ATAIOPorts,Kernel.Hardware.ATA.ATA.ControllerID,Kernel.Hardware.ATA.ATA.BusPosition)"	"<param name=""aControllerId""/>"
Method	"Kernel.Hardware.ATA.PATABase.#ctor(Kernel.Hardware.ATA.ATAIOPorts,Kernel.Hardware.ATA.ATA.ControllerID,Kernel.Hardware.ATA.ATA.BusPosition)"	"<param name=""aBusPosition""/>"
Method	Kernel.Hardware.ATA.PATABase.CleanCaches	<summary>
Method	Kernel.Hardware.ATA.PATABase.CleanCaches	<remarks>
Method	Kernel.Hardware.ATA.PATABase.DiscoverDrive	<remarks>
Property	Kernel.Hardware.ATA.PATABase.DriveType	<remarks>
Property	Kernel.Hardware.ATA.PATABase.DriveType	<value>
Property	Kernel.Hardware.ATA.PATABase.FirmwareRev	<remarks>
Property	Kernel.Hardware.ATA.PATABase.FirmwareRev	<value>
Method	"Kernel.Hardware.ATA.PATABase.GetString(System.UInt16[],System.Int32,System.Int32)"	<remarks>
Method	Kernel.Hardware.ATA.PATABase.InitDrive	<remarks>
Field	Kernel.Hardware.ATA.PATABase.initialised	<summary>
Field	Kernel.Hardware.ATA.PATABase.initialised	<remarks>
Property	Kernel.Hardware.ATA.PATABase.Initialised	<summary>
Property	Kernel.Hardware.ATA.PATABase.Initialised	<remarks>
Property	Kernel.Hardware.ATA.PATABase.Initialised	<value>
Field	Kernel.Hardware.ATA.PATABase.IO	<remarks>
Property	Kernel.Hardware.ATA.PATABase.LBA48Mode	<summary>
Property	Kernel.Hardware.ATA.PATABase.LBA48Mode	<remarks>
Property	Kernel.Hardware.ATA.PATABase.LBA48Mode	<value>
Field	Kernel.Hardware.ATA.PATABase.mDriveType	<remarks>
Field	Kernel.Hardware.ATA.PATABase.mFirmwareRev	<remarks>
Field	Kernel.Hardware.ATA.PATABase.mLBA48Mode	<summary>
Field	Kernel.Hardware.ATA.PATABase.mLBA48Mode	<remarks>
Field	Kernel.Hardware.ATA.PATABase.mModelNo	<remarks>
Property	Kernel.Hardware.ATA.PATABase.ModelNo	<remarks>
Property	Kernel.Hardware.ATA.PATABase.ModelNo	<value>
Field	Kernel.Hardware.ATA.PATABase.mSerialNo	<remarks>
Method	"Kernel.Hardware.ATA.PATABase.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	<summary>
Method	"Kernel.Hardware.ATA.PATABase.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Method	"Kernel.Hardware.ATA.PATABase.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockNo""/>"
Method	"Kernel.Hardware.ATA.PATABase.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockCount""/>"
Method	"Kernel.Hardware.ATA.PATABase.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aData""/>"
Method	"Kernel.Hardware.ATA.PATABase.SelectDrive(System.Byte,System.Boolean)"	<remarks>
Method	"Kernel.Hardware.ATA.PATABase.SelectDrive(System.Byte,System.Boolean)"	"<param name=""setLBA""/>"
Method	Kernel.Hardware.ATA.PATABase.SendCmd(Kernel.Hardware.ATA.PATABase.Cmd)	<remarks>
Method	"Kernel.Hardware.ATA.PATABase.SendCmd(Kernel.Hardware.ATA.PATABase.Cmd,System.Boolean)"	<remarks>
Property	Kernel.Hardware.ATA.PATABase.SerialNo	<remarks>
Property	Kernel.Hardware.ATA.PATABase.SerialNo	<value>
Method	"Kernel.Hardware.ATA.PATABase.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	<summary>
Method	"Kernel.Hardware.ATA.PATABase.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Method	"Kernel.Hardware.ATA.PATABase.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockNo""/>"
Method	"Kernel.Hardware.ATA.PATABase.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockCount""/>"
Method	"Kernel.Hardware.ATA.PATABase.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aData""/>"
Type	Kernel.Hardware.ATA.PATABase.Cmd	<remarks>
Type	Kernel.Hardware.ATA.PATABase.DriveSelectValue	<remarks>
Type	Kernel.Hardware.ATA.PATABase.Error	<remarks>
Type	Kernel.Hardware.ATA.PATABase.SpecLevel	<remarks>
Type	Kernel.Hardware.ATA.PATABase.Status	<remarks>
Type	Kernel.Hardware.ATA.PATAPI	<summary>
Type	Kernel.Hardware.ATA.PATAPI	<remarks>
Method	Kernel.Hardware.ATA.PATAPI.#ctor(Kernel.Hardware.ATA.PATABase)	<remarks>
Method	Kernel.Hardware.ATA.PATAPI.#ctor(Kernel.Hardware.ATA.PATABase)	"<param name=""baseDevice""/>"
Method	"Kernel.Hardware.ATA.PATAPI._ReadBlock(System.UInt64,System.Byte[],System.UInt32)"	<summary>
Method	"Kernel.Hardware.ATA.PATAPI._ReadBlock(System.UInt64,System.Byte[],System.UInt32)"	<remarks>
Method	"Kernel.Hardware.ATA.PATAPI._ReadBlock(System.UInt64,System.Byte[],System.UInt32)"	"<param name=""aBlockNo""/>"
Method	"Kernel.Hardware.ATA.PATAPI._ReadBlock(System.UInt64,System.Byte[],System.UInt32)"	"<param name=""aData""/>"
Method	"Kernel.Hardware.ATA.PATAPI._ReadBlock(System.UInt64,System.Byte[],System.UInt32)"	"<param name=""DataOffset""/>"
Field	Kernel.Hardware.ATA.PATAPI.BaseDevice	<summary>
Field	Kernel.Hardware.ATA.PATAPI.BaseDevice	<remarks>
Method	Kernel.Hardware.ATA.PATAPI.CleanCaches	<summary>
Method	Kernel.Hardware.ATA.PATAPI.CleanCaches	<remarks>
Property	Kernel.Hardware.ATA.PATAPI.FirmwareRev	<summary>
Property	Kernel.Hardware.ATA.PATAPI.FirmwareRev	<remarks>
Property	Kernel.Hardware.ATA.PATAPI.FirmwareRev	<value>
Method	Kernel.Hardware.ATA.PATAPI.IRQHandler	<summary>
Method	Kernel.Hardware.ATA.PATAPI.IRQHandler	<remarks>
Method	Kernel.Hardware.ATA.PATAPI.IRQHandler(Kernel.FOS_System.Object)	<summary>
Method	Kernel.Hardware.ATA.PATAPI.IRQHandler(Kernel.FOS_System.Object)	<remarks>
Method	Kernel.Hardware.ATA.PATAPI.IRQHandler(Kernel.FOS_System.Object)	"<param name=""state""/>"
Field	Kernel.Hardware.ATA.PATAPI.IRQInvoked	<summary>
Field	Kernel.Hardware.ATA.PATAPI.IRQInvoked	<remarks>
Property	Kernel.Hardware.ATA.PATAPI.ModelNo	<summary>
Property	Kernel.Hardware.ATA.PATAPI.ModelNo	<remarks>
Property	Kernel.Hardware.ATA.PATAPI.ModelNo	<value>
Method	"Kernel.Hardware.ATA.PATAPI.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	<summary>
Method	"Kernel.Hardware.ATA.PATAPI.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Method	"Kernel.Hardware.ATA.PATAPI.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockNo""/>"
Method	"Kernel.Hardware.ATA.PATAPI.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockCount""/>"
Method	"Kernel.Hardware.ATA.PATAPI.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aData""/>"
Property	Kernel.Hardware.ATA.PATAPI.SerialNo	<summary>
Property	Kernel.Hardware.ATA.PATAPI.SerialNo	<remarks>
Property	Kernel.Hardware.ATA.PATAPI.SerialNo	<value>
Method	Kernel.Hardware.ATA.PATAPI.WaitForIRQ	<summary>
Method	Kernel.Hardware.ATA.PATAPI.WaitForIRQ	<remarks>
Method	Kernel.Hardware.ATA.PATAPI.WaitForIRQ	<returns>
Method	"Kernel.Hardware.ATA.PATAPI.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	<summary>
Method	"Kernel.Hardware.ATA.PATAPI.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Method	"Kernel.Hardware.ATA.PATAPI.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockNo""/>"
Method	"Kernel.Hardware.ATA.PATAPI.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockCount""/>"
Method	"Kernel.Hardware.ATA.PATAPI.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aData""/>"
Type	Kernel.Hardware.ATA.SATA	<summary>
Type	Kernel.Hardware.ATA.SATA	<remarks>
Method	Kernel.Hardware.ATA.SATA.#ctor	<remarks>
Method	Kernel.Hardware.ATA.SATA.CleanCaches	<summary>
Method	Kernel.Hardware.ATA.SATA.CleanCaches	<remarks>
Method	"Kernel.Hardware.ATA.SATA.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	<summary>
Method	"Kernel.Hardware.ATA.SATA.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Method	"Kernel.Hardware.ATA.SATA.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockNo""/>"
Method	"Kernel.Hardware.ATA.SATA.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockCount""/>"
Method	"Kernel.Hardware.ATA.SATA.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aData""/>"
Method	"Kernel.Hardware.ATA.SATA.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	<summary>
Method	"Kernel.Hardware.ATA.SATA.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Method	"Kernel.Hardware.ATA.SATA.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockNo""/>"
Method	"Kernel.Hardware.ATA.SATA.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockCount""/>"
Method	"Kernel.Hardware.ATA.SATA.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aData""/>"
Type	Kernel.Hardware.ATA.SATAPI	<summary>
Type	Kernel.Hardware.ATA.SATAPI	<remarks>
Method	Kernel.Hardware.ATA.SATAPI.#ctor	<remarks>
Method	Kernel.Hardware.ATA.SATAPI.CleanCaches	<summary>
Method	Kernel.Hardware.ATA.SATAPI.CleanCaches	<remarks>
Method	"Kernel.Hardware.ATA.SATAPI.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	<summary>
Method	"Kernel.Hardware.ATA.SATAPI.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Method	"Kernel.Hardware.ATA.SATAPI.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockNo""/>"
Method	"Kernel.Hardware.ATA.SATAPI.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockCount""/>"
Method	"Kernel.Hardware.ATA.SATAPI.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aData""/>"
Method	"Kernel.Hardware.ATA.SATAPI.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	<summary>
Method	"Kernel.Hardware.ATA.SATAPI.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Method	"Kernel.Hardware.ATA.SATAPI.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockNo""/>"
Method	"Kernel.Hardware.ATA.SATAPI.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aBlockCount""/>"
Method	"Kernel.Hardware.ATA.SATAPI.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	"<param name=""aData""/>"
Type	Kernel.Hardware.CPUs.CPUx86_32	<remarks>
Method	Kernel.Hardware.CPUs.CPUx86_32.#ctor	<remarks>
Method	Kernel.Hardware.CPUs.CPUx86_32.Halt	<remarks>
Method	Kernel.Hardware.CPUs.CPUx86_32.Init	<remarks>
Field	Kernel.Hardware.CPUs.CPUx86_32.TheCPU	<remarks>
Type	Kernel.Hardware.Devices.CPU	<remarks>
Method	Kernel.Hardware.Devices.CPU.#ctor	<remarks>
Field	Kernel.Hardware.Devices.CPU.Default	<remarks>
Method	Kernel.Hardware.Devices.CPU.Halt	<remarks>
Type	Kernel.Hardware.Devices.DiskDevice	<remarks>
Method	Kernel.Hardware.Devices.DiskDevice.#ctor	<remarks>
Method	Kernel.Hardware.Devices.DiskDevice.CleanCaches	<remarks>
Type	Kernel.Hardware.Devices.Keyboard	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.#ctor	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.#cctor	<remarks>
Method	"Kernel.Hardware.Devices.Keyboard.AddKey(System.UInt32,Kernel.Hardware.Devices.KeyboardKey)"	<remarks>
Method	"Kernel.Hardware.Devices.Keyboard.AddKey(System.UInt32,System.Char,Kernel.Hardware.Devices.KeyboardKey)"	<remarks>
Method	"Kernel.Hardware.Devices.Keyboard.AddKeyWithAndWithoutShift(System.UInt32,System.Char,Kernel.Hardware.Devices.KeyboardKey)"	<remarks>
Method	"Kernel.Hardware.Devices.Keyboard.AddKeyWithShift(System.UInt32,Kernel.Hardware.Devices.KeyboardKey)"	<remarks>
Field	Kernel.Hardware.Devices.Keyboard.altPressed	<remarks>
Property	Kernel.Hardware.Devices.Keyboard.AltPressed	<remarks>
Property	Kernel.Hardware.Devices.Keyboard.AltPressed	<value>
Method	Kernel.Hardware.Devices.Keyboard.ChangeKeyMap(Kernel.FOS_System.Collections.List)	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.CleanDefault	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.CreateUKKeymap	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.CreateUSKeymap	<remarks>
Field	Kernel.Hardware.Devices.Keyboard.ctrlPressed	<remarks>
Property	Kernel.Hardware.Devices.Keyboard.CtrlPressed	<remarks>
Property	Kernel.Hardware.Devices.Keyboard.CtrlPressed	<value>
Field	Kernel.Hardware.Devices.Keyboard.Default	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.Dequeue	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.Disable	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.Enable	<remarks>
Field	Kernel.Hardware.Devices.Keyboard.enabled	<remarks>
Property	Kernel.Hardware.Devices.Keyboard.Enabled	<remarks>
Property	Kernel.Hardware.Devices.Keyboard.Enabled	<value>
Method	Kernel.Hardware.Devices.Keyboard.Enqueue(System.UInt32)	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.GetChar(System.Char@)	<remarks>
Field	Kernel.Hardware.Devices.Keyboard.GetCharDelayTimeMS	<remarks>
Method	"Kernel.Hardware.Devices.Keyboard.GetCharValue(System.UInt32,System.Char@)"	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.GetKey(Kernel.Hardware.Devices.KeyboardKey@)	<remarks>
Method	"Kernel.Hardware.Devices.Keyboard.GetKeyMapping(System.UInt32,Kernel.Hardware.Devices.KeyMapping@)"	<remarks>
Method	"Kernel.Hardware.Devices.Keyboard.GetKeyValue(System.UInt32,Kernel.Hardware.Devices.KeyboardKey@)"	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.GetMapping(Kernel.Hardware.Devices.KeyMapping@)	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.GetScancode(System.UInt32@)	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.InitDefault	<remarks>
Field	Kernel.Hardware.Devices.Keyboard.KeyMappings	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.ReadChar	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.ReadKey	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.ReadMapping	<remarks>
Method	Kernel.Hardware.Devices.Keyboard.ReadScancode	<remarks>
Field	Kernel.Hardware.Devices.Keyboard.scancodeBuffer	<remarks>
Field	Kernel.Hardware.Devices.Keyboard.shiftPressed	<remarks>
Property	Kernel.Hardware.Devices.Keyboard.ShiftPressed	<remarks>
Property	Kernel.Hardware.Devices.Keyboard.ShiftPressed	<value>
Type	Kernel.Hardware.Devices.KeyboardKey	<remarks>
Type	Kernel.Hardware.Devices.KeyMapping	<remarks>
Method	"Kernel.Hardware.Devices.KeyMapping.#ctor(System.UInt32,Kernel.Hardware.Devices.KeyboardKey)"	<remarks>
Method	"Kernel.Hardware.Devices.KeyMapping.#ctor(System.UInt32,System.Char,Kernel.Hardware.Devices.KeyboardKey)"	<remarks>
Field	Kernel.Hardware.Devices.KeyMapping.Key	<remarks>
Field	Kernel.Hardware.Devices.KeyMapping.Scancode	<remarks>
Field	Kernel.Hardware.Devices.KeyMapping.Value	<remarks>
Type	Kernel.Hardware.Devices.Timer	<remarks>
Method	Kernel.Hardware.Devices.Timer.#ctor	<remarks>
Method	Kernel.Hardware.Devices.Timer.CleanDefault	<remarks>
Field	Kernel.Hardware.Devices.Timer.Default	<remarks>
Method	Kernel.Hardware.Devices.Timer.Disable	<remarks>
Method	Kernel.Hardware.Devices.Timer.Enable	<remarks>
Field	Kernel.Hardware.Devices.Timer.enabled	<remarks>
Property	Kernel.Hardware.Devices.Timer.Enabled	<remarks>
Property	Kernel.Hardware.Devices.Timer.Enabled	<value>
Method	Kernel.Hardware.Devices.Timer.InitDefault	<remarks>
Method	"Kernel.Hardware.Devices.Timer.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	<summary>
Method	"Kernel.Hardware.Devices.Timer.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	<remarks>
Method	"Kernel.Hardware.Devices.Timer.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	<returns>
Method	"Kernel.Hardware.Devices.Timer.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	"<param name=""handler""/>"
Method	"Kernel.Hardware.Devices.Timer.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	"<param name=""TimeoutNS""/>"
Method	"Kernel.Hardware.Devices.Timer.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	"<param name=""Recurring""/>"
Method	"Kernel.Hardware.Devices.Timer.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	"<param name=""state""/>"
Method	Kernel.Hardware.Devices.Timer.UnregisterHandler(System.Int32)	<summary>
Method	Kernel.Hardware.Devices.Timer.UnregisterHandler(System.Int32)	<remarks>
Method	Kernel.Hardware.Devices.Timer.UnregisterHandler(System.Int32)	"<param name=""handlerId""/>"
Method	Kernel.Hardware.Devices.Timer.Wait(System.UInt32)	<remarks>
Method	Kernel.Hardware.Devices.Timer.WaitNS(System.Int64)	<remarks>
Type	Kernel.Hardware.Devices.TimerHandler	<summary>
Type	Kernel.Hardware.Devices.TimerHandler	<remarks>
Type	Kernel.Hardware.Interrupts.HandlerDescriptor	<remarks>
Method	Kernel.Hardware.Interrupts.HandlerDescriptor.#ctor	<remarks>
Field	Kernel.Hardware.Interrupts.HandlerDescriptor.CriticalHandler	<summary>
Field	Kernel.Hardware.Interrupts.HandlerDescriptor.CriticalHandler	<remarks>
Field	Kernel.Hardware.Interrupts.HandlerDescriptor.data	<remarks>
Field	Kernel.Hardware.Interrupts.HandlerDescriptor.handler	<remarks>
Field	Kernel.Hardware.Interrupts.HandlerDescriptor.IgnoreProcessId	<summary>
Field	Kernel.Hardware.Interrupts.HandlerDescriptor.IgnoreProcessId	<remarks>
Field	Kernel.Hardware.Interrupts.HandlerDescriptor.Name	<summary>
Field	Kernel.Hardware.Interrupts.HandlerDescriptor.Name	<remarks>
Field	Kernel.Hardware.Interrupts.HandlerDescriptor.ProcessId	<summary>
Field	Kernel.Hardware.Interrupts.HandlerDescriptor.ProcessId	<remarks>
Type	Kernel.Hardware.Interrupts.InterruptDescriptor	<remarks>
Field	Kernel.Hardware.Interrupts.InterruptDescriptor.OffsetHi	<remarks>
Field	Kernel.Hardware.Interrupts.InterruptDescriptor.OffsetLo	<remarks>
Field	Kernel.Hardware.Interrupts.InterruptDescriptor.Selector	<remarks>
Field	Kernel.Hardware.Interrupts.InterruptDescriptor.Type_S_DPL_P	<remarks>
Field	Kernel.Hardware.Interrupts.InterruptDescriptor.UNUSED	<remarks>
Type	Kernel.Hardware.Interrupts.InterruptHandler	<remarks>
Type	Kernel.Hardware.Interrupts.InterruptHandlers	<remarks>
Method	Kernel.Hardware.Interrupts.InterruptHandlers.#ctor	<remarks>
Field	Kernel.Hardware.Interrupts.InterruptHandlers.HandlerDescrips	<remarks>
Field	Kernel.Hardware.Interrupts.InterruptHandlers.QueuedOccurrences	<summary>
Field	Kernel.Hardware.Interrupts.InterruptHandlers.QueuedOccurrences	<remarks>
Field	Kernel.Hardware.Interrupts.InterruptHandlers.QueuedOccurrencesOld	<summary>
Field	Kernel.Hardware.Interrupts.InterruptHandlers.QueuedOccurrencesOld	<remarks>
Type	Kernel.Hardware.Interrupts.Interrupts	<remarks>
Method	Kernel.Hardware.Interrupts.Interrupts.#cctor	<remarks>
Method	"Kernel.Hardware.Interrupts.Interrupts.AddIRQHandler(System.Int32,Kernel.Hardware.Interrupts.InterruptHandler,Kernel.FOS_System.Object,System.Boolean,System.Boolean,Kernel.FOS_System.String)"	<remarks>
Method	"Kernel.Hardware.Interrupts.Interrupts.AddIRQHandler(System.Int32,Kernel.Hardware.Interrupts.InterruptHandler,Kernel.FOS_System.Object,System.Boolean,System.Boolean,Kernel.FOS_System.String)"	"<param name=""IgnoreProcessState""/>"
Method	"Kernel.Hardware.Interrupts.Interrupts.AddIRQHandler(System.Int32,Kernel.Hardware.Interrupts.InterruptHandler,Kernel.FOS_System.Object,System.Boolean,System.Boolean,Kernel.FOS_System.String)"	"<param name=""CriticalHandler""/>"
Method	"Kernel.Hardware.Interrupts.Interrupts.AddIRQHandler(System.Int32,Kernel.Hardware.Interrupts.InterruptHandler,Kernel.FOS_System.Object,System.Boolean,System.Boolean,Kernel.FOS_System.String)"	"<param name=""Name""/>"
Method	"Kernel.Hardware.Interrupts.Interrupts.AddISRHandler(System.Int32,Kernel.Hardware.Interrupts.InterruptHandler,Kernel.FOS_System.Object,System.Boolean,System.Boolean,Kernel.FOS_System.String)"	<remarks>
Method	"Kernel.Hardware.Interrupts.Interrupts.AddISRHandler(System.Int32,Kernel.Hardware.Interrupts.InterruptHandler,Kernel.FOS_System.Object,System.Boolean,System.Boolean,Kernel.FOS_System.String)"	"<param name=""IgnoreProcessState""/>"
Method	"Kernel.Hardware.Interrupts.Interrupts.AddISRHandler(System.Int32,Kernel.Hardware.Interrupts.InterruptHandler,Kernel.FOS_System.Object,System.Boolean,System.Boolean,Kernel.FOS_System.String)"	"<param name=""CriticalHandler""/>"
Method	"Kernel.Hardware.Interrupts.Interrupts.AddISRHandler(System.Int32,Kernel.Hardware.Interrupts.InterruptHandler,Kernel.FOS_System.Object,System.Boolean,System.Boolean,Kernel.FOS_System.String)"	"<param name=""Name""/>"
Method	Kernel.Hardware.Interrupts.Interrupts.CommonISR(System.UInt32)	<remarks>
Method	Kernel.Hardware.Interrupts.Interrupts.DisableInterrupts	<summary>
Method	Kernel.Hardware.Interrupts.Interrupts.DisableInterrupts	<remarks>
Method	Kernel.Hardware.Interrupts.Interrupts.DisableIRQ(System.Byte)	<remarks>
Method	Kernel.Hardware.Interrupts.Interrupts.EnableInterrupts	<summary>
Method	Kernel.Hardware.Interrupts.Interrupts.EnableInterrupts	<remarks>
Method	Kernel.Hardware.Interrupts.Interrupts.EnableIRQ(System.Byte)	<remarks>
Method	Kernel.Hardware.Interrupts.Interrupts.EndIRQ(System.Boolean)	<remarks>
Method	Kernel.Hardware.Interrupts.Interrupts.GetIDTPtr	<remarks>
Field	Kernel.Hardware.Interrupts.Interrupts.Handlers	<remarks>
Field	Kernel.Hardware.Interrupts.Interrupts.insideCriticalHandler	<summary>
Field	Kernel.Hardware.Interrupts.Interrupts.insideCriticalHandler	<remarks>
Property	Kernel.Hardware.Interrupts.Interrupts.InsideCriticalHandler	<summary>
Property	Kernel.Hardware.Interrupts.Interrupts.InsideCriticalHandler	<remarks>
Property	Kernel.Hardware.Interrupts.Interrupts.InsideCriticalHandler	<value>
Field	Kernel.Hardware.Interrupts.Interrupts.InterruptsExState	<summary>
Field	Kernel.Hardware.Interrupts.Interrupts.InterruptsExState	<remarks>
Method	Kernel.Hardware.Interrupts.Interrupts.InvokeInterrupt(System.UInt32)	<remarks>
Method	"Kernel.Hardware.Interrupts.Interrupts.RemoveIRQHandler(System.Int32,System.Int32)"	<remarks>
Method	"Kernel.Hardware.Interrupts.Interrupts.RemoveISRHandler(System.Int32,System.Int32)"	<remarks>
Type	Kernel.Hardware.IO.IOPort	<remarks>
Method	Kernel.Hardware.IO.IOPort.#ctor(System.UInt16)	<remarks>
Method	"Kernel.Hardware.IO.IOPort.#ctor(System.UInt16,System.UInt16)"	<remarks>
Method	Kernel.Hardware.IO.IOPort.doRead_Byte(System.UInt16)	<remarks>
Method	Kernel.Hardware.IO.IOPort.doRead_UInt16(System.UInt16)	<remarks>
Method	Kernel.Hardware.IO.IOPort.doRead_UInt32(System.UInt16)	<remarks>
Method	Kernel.Hardware.IO.IOPort.doRead_UInt64(System.UInt16)	<remarks>
Method	"Kernel.Hardware.IO.IOPort.doWrite_Byte(System.UInt16,System.Byte)"	<remarks>
Method	"Kernel.Hardware.IO.IOPort.doWrite_UInt16(System.UInt16,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.IO.IOPort.doWrite_UInt32(System.UInt16,System.UInt32)"	<remarks>
Method	"Kernel.Hardware.IO.IOPort.doWrite_UInt64(System.UInt16,System.UInt64)"	<remarks>
Field	Kernel.Hardware.IO.IOPort.Port	<remarks>
Method	Kernel.Hardware.IO.IOPort.Read_Byte	<remarks>
Method	Kernel.Hardware.IO.IOPort.Read_Byte(System.UInt16)	<remarks>
Method	Kernel.Hardware.IO.IOPort.Read_Byte(System.UInt16)	"<param name=""offset""/>"
Method	Kernel.Hardware.IO.IOPort.Read_Bytes(System.Byte[])	<remarks>
Method	Kernel.Hardware.IO.IOPort.Read_UInt16	<remarks>
Method	Kernel.Hardware.IO.IOPort.Read_UInt16(System.UInt16)	<remarks>
Method	Kernel.Hardware.IO.IOPort.Read_UInt16(System.UInt16)	"<param name=""offset""/>"
Method	Kernel.Hardware.IO.IOPort.Read_UInt16s(System.UInt16[])	<remarks>
Method	Kernel.Hardware.IO.IOPort.Read_UInt32	<remarks>
Method	Kernel.Hardware.IO.IOPort.Read_UInt32(System.UInt16)	<remarks>
Method	Kernel.Hardware.IO.IOPort.Read_UInt32(System.UInt16)	"<param name=""offset""/>"
Method	Kernel.Hardware.IO.IOPort.Read_UInt32s(System.UInt32[])	<remarks>
Method	Kernel.Hardware.IO.IOPort.Read_UInt64	<remarks>
Method	Kernel.Hardware.IO.IOPort.Read_UInt64(System.UInt16)	<remarks>
Method	Kernel.Hardware.IO.IOPort.Read_UInt64(System.UInt16)	"<param name=""offset""/>"
Method	Kernel.Hardware.IO.IOPort.Write_Byte(System.Byte)	<remarks>
Method	"Kernel.Hardware.IO.IOPort.Write_Byte(System.Byte,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.IO.IOPort.Write_Byte(System.Byte,System.UInt16)"	"<param name=""offset""/>"
Method	Kernel.Hardware.IO.IOPort.Write_UInt16(System.UInt16)	<remarks>
Method	"Kernel.Hardware.IO.IOPort.Write_UInt16(System.UInt16,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.IO.IOPort.Write_UInt16(System.UInt16,System.UInt16)"	"<param name=""offset""/>"
Method	Kernel.Hardware.IO.IOPort.Write_UInt16s(System.Byte[])	<remarks>
Method	Kernel.Hardware.IO.IOPort.Write_UInt16s(System.UInt16[])	<remarks>
Method	Kernel.Hardware.IO.IOPort.Write_UInt32(System.UInt32)	<remarks>
Method	"Kernel.Hardware.IO.IOPort.Write_UInt32(System.UInt32,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.IO.IOPort.Write_UInt32(System.UInt32,System.UInt16)"	"<param name=""offset""/>"
Method	Kernel.Hardware.IO.IOPort.Write_UInt64(System.UInt64)	<remarks>
Method	"Kernel.Hardware.IO.IOPort.Write_UInt64(System.UInt64,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.IO.IOPort.Write_UInt64(System.UInt64,System.UInt16)"	"<param name=""offset""/>"
Type	Kernel.Hardware.Keyboards.PS2	<remarks>
Method	Kernel.Hardware.Keyboards.PS2.#ctor	<remarks>
Method	Kernel.Hardware.Keyboards.PS2.#cctor	<remarks>
Method	Kernel.Hardware.Keyboards.PS2.Clean	<remarks>
Field	Kernel.Hardware.Keyboards.PS2.DataPort	<remarks>
Method	Kernel.Hardware.Keyboards.PS2.Disable	<remarks>
Method	Kernel.Hardware.Keyboards.PS2.Enable	<remarks>
Method	"Kernel.Hardware.Keyboards.PS2.HandleScancode(System.UInt32,System.Boolean)"	<remarks>
Method	Kernel.Hardware.Keyboards.PS2.Init	<remarks>
Method	Kernel.Hardware.Keyboards.PS2.InterruptHandler	<remarks>
Method	Kernel.Hardware.Keyboards.PS2.InterruptHandler(Kernel.FOS_System.Object)	<remarks>
Field	Kernel.Hardware.Keyboards.PS2.InterruptHandlerId	<remarks>
Field	Kernel.Hardware.Keyboards.PS2.ThePS2	<remarks>
Type	Kernel.Hardware.PCI.PCI	<remarks>
Method	Kernel.Hardware.PCI.PCI.#cctor	<remarks>
Method	"Kernel.Hardware.PCI.PCI.AddDevice(Kernel.Hardware.PCI.PCIDevice,System.UInt32)"	<remarks>
Field	Kernel.Hardware.PCI.PCI.ConfigAddressPort	<remarks>
Field	Kernel.Hardware.PCI.PCI.ConfigDataPort	<remarks>
Field	Kernel.Hardware.PCI.PCI.Devices	<remarks>
Method	"Kernel.Hardware.PCI.PCI.EnumerateBus(System.UInt32,System.UInt32)"	<remarks>
Method	Kernel.Hardware.PCI.PCI.EnumerateDevices	<remarks>
Method	Kernel.Hardware.PCI.PCI.Init	<remarks>
Type	Kernel.Hardware.PCI.PCIBaseAddress	<remarks>
Method	"Kernel.Hardware.PCI.PCIBaseAddress.#ctor(System.UInt32,System.UInt32)"	<remarks>
Field	Kernel.Hardware.PCI.PCIBaseAddress.baseAddress	<remarks>
Method	Kernel.Hardware.PCI.PCIBaseAddress.BaseAddress	<remarks>
Field	Kernel.Hardware.PCI.PCIBaseAddress.isIO	<remarks>
Method	Kernel.Hardware.PCI.PCIBaseAddress.IsIO	<remarks>
Field	Kernel.Hardware.PCI.PCIBaseAddress.prefetchable	<remarks>
Field	Kernel.Hardware.PCI.PCIBaseAddress.size	<remarks>
Method	Kernel.Hardware.PCI.PCIBaseAddress.Size	<remarks>
Field	Kernel.Hardware.PCI.PCIBaseAddress.type	<remarks>
Type	Kernel.Hardware.PCI.PCIDevice	<remarks>
Method	"Kernel.Hardware.PCI.PCIDevice.#ctor(System.UInt32,System.UInt32,System.UInt32)"	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.BIST	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.BIST	<value>
Field	Kernel.Hardware.PCI.PCIDevice.bus	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.CacheLineSize	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.CacheLineSize	<value>
Property	Kernel.Hardware.PCI.PCIDevice.Claimed	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.Claimed	<value>
Property	Kernel.Hardware.PCI.PCIDevice.ClassCode	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.ClassCode	<value>
Property	Kernel.Hardware.PCI.PCIDevice.Command	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.Command	<value>
Property	Kernel.Hardware.PCI.PCIDevice.DeviceExists	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.DeviceExists	<value>
Property	Kernel.Hardware.PCI.PCIDevice.DeviceID	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.DeviceID	<value>
Method	Kernel.Hardware.PCI.PCIDevice.EnableMemory(System.Boolean)	<remarks>
Field	Kernel.Hardware.PCI.PCIDevice.function	<remarks>
Method	"Kernel.Hardware.PCI.PCIDevice.GetAddressBase(System.UInt32,System.UInt32,System.UInt32)"	<remarks>
Method	Kernel.Hardware.PCI.PCIDevice.GetSize(System.Byte)	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.HeaderType	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.HeaderType	<value>
Property	Kernel.Hardware.PCI.PCIDevice.InterruptLine	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.InterruptLine	<value>
Property	Kernel.Hardware.PCI.PCIDevice.InterruptPIN	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.InterruptPIN	<value>
Property	Kernel.Hardware.PCI.PCIDevice.LatencyTimer	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.LatencyTimer	<value>
Property	Kernel.Hardware.PCI.PCIDevice.ProgIF	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.ProgIF	<value>
Method	Kernel.Hardware.PCI.PCIDevice.ReadRegister16(System.Byte)	<remarks>
Method	Kernel.Hardware.PCI.PCIDevice.ReadRegister32(System.Byte)	<remarks>
Method	Kernel.Hardware.PCI.PCIDevice.ReadRegister8(System.Byte)	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.RevisionID	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.RevisionID	<value>
Field	Kernel.Hardware.PCI.PCIDevice.slot	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.Status	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.Status	<value>
Property	Kernel.Hardware.PCI.PCIDevice.Subclass	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.Subclass	<value>
Property	Kernel.Hardware.PCI.PCIDevice.VendorID	<remarks>
Property	Kernel.Hardware.PCI.PCIDevice.VendorID	<value>
Method	"Kernel.Hardware.PCI.PCIDevice.WriteRegister16(System.Byte,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.PCI.PCIDevice.WriteRegister32(System.Byte,System.UInt32)"	<remarks>
Method	"Kernel.Hardware.PCI.PCIDevice.WriteRegister8(System.Byte,System.Byte)"	<remarks>
Method	Kernel.Hardware.PCI.PCIDevice.DeviceClassInfo.GetString(Kernel.Hardware.PCI.PCIDevice)	<remarks>
Type	Kernel.Hardware.PCI.PCIDevice.PCIBISTs	<remarks>
Type	Kernel.Hardware.PCI.PCIDevice.PCICommand	<remarks>
Type	Kernel.Hardware.PCI.PCIDevice.PCIHeaderType	<remarks>
Type	Kernel.Hardware.PCI.PCIDevice.PCIInterruptPIN	<remarks>
Type	Kernel.Hardware.PCI.PCIDevice.PCIStatus	<remarks>
Type	Kernel.Hardware.PCI.PCIDeviceBridge	<remarks>
Method	"Kernel.Hardware.PCI.PCIDeviceBridge.#ctor(System.UInt32,System.UInt32,System.UInt32)"	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.BaseAddresses	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.BaseAddresses	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.BridgeControl	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.BridgeControl	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.CapabilityPointer	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.CapabilityPointer	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.ExpansionROMBaseAddress	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.ExpansionROMBaseAddress	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.IOBase	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.IOBase	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.IOBaseUpper16	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.IOBaseUpper16	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.IOLimit	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.IOLimit	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.IOLimitUpper16	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.IOLimitUpper16	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.MemoryBase	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.MemoryBase	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.MemoryLimit	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.MemoryLimit	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.PrefatchableBaseUpper32	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.PrefatchableBaseUpper32	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.PrefatchableLimitUpper32	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.PrefatchableLimitUpper32	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.PrefatchableMemoryBase	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.PrefatchableMemoryBase	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.PrefatchableMemoryLimit	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.PrefatchableMemoryLimit	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.PrimaryBusNumber	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.PrimaryBusNumber	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.SecondaryBusNumber	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.SecondaryBusNumber	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.SecondaryLatencyTimer	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.SecondaryLatencyTimer	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.SecondaryStatus	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.SecondaryStatus	<value>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.SubordinateBusNumber	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceBridge.SubordinateBusNumber	<value>
Type	Kernel.Hardware.PCI.PCIDeviceCardbus	<remarks>
Method	"Kernel.Hardware.PCI.PCIDeviceCardbus.#ctor(System.UInt32,System.UInt32,System.UInt32)"	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.BridgeControl	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.BridgeControl	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.CardbusBaseAddress	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.CardbusBaseAddress	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.CardbusBusNumber	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.CardbusBusNumber	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.CardbusLatencyTimer	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.CardbusLatencyTimer	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.IOBaseAddress0	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.IOBaseAddress0	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.IOBaseAddress1	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.IOBaseAddress1	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.IOLimit0	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.IOLimit0	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.IOLimit1	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.IOLimit1	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.MemoryBaseAddress0	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.MemoryBaseAddress0	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.MemoryBaseAddress1	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.MemoryBaseAddress1	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.MemoryLimit0	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.MemoryLimit0	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.MemoryLimit1	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.MemoryLimit1	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.OffsetOfCapabilityList	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.OffsetOfCapabilityList	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.PCCardBaseAddress	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.PCCardBaseAddress	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.PCIBusNumber	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.PCIBusNumber	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.SecondaryStatus	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.SecondaryStatus	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.SubordinateBusNumber	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.SubordinateBusNumber	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.SubsystemDeviceID	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.SubsystemDeviceID	<value>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.SubsystemVendorID	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceCardbus.SubsystemVendorID	<value>
Type	Kernel.Hardware.PCI.PCIDeviceNormal	<remarks>
Method	"Kernel.Hardware.PCI.PCIDeviceNormal.#ctor(System.UInt32,System.UInt32,System.UInt32)"	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.BaseAddresses	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.BaseAddresses	<value>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.CapabilitiesPointer	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.CapabilitiesPointer	<value>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.CardbusCISPointer	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.CardbusCISPointer	<value>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.ExpansionROMBaseAddress	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.ExpansionROMBaseAddress	<value>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.MaxLatency	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.MaxLatency	<value>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.MinGrant	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.MinGrant	<value>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.SubsystemID	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.SubsystemID	<value>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.SubsystemVendorID	<remarks>
Property	Kernel.Hardware.PCI.PCIDeviceNormal.SubsystemVendorID	<value>
Namespace	Kernel.Hardware.Processes	<summary>
Type	Kernel.Hardware.Processes.Process	<summary>
Type	Kernel.Hardware.Processes.Process	<remarks>
Method	"Kernel.Hardware.Processes.Process.#ctor(Kernel.Hardware.Processes.ThreadStartMethod,System.UInt32,Kernel.FOS_System.String,System.Boolean)"	<remarks>
Method	"Kernel.Hardware.Processes.Process.#ctor(Kernel.Hardware.Processes.ThreadStartMethod,System.UInt32,Kernel.FOS_System.String,System.Boolean)"	"<param name=""MainMethod""/>"
Method	"Kernel.Hardware.Processes.Process.#ctor(Kernel.Hardware.Processes.ThreadStartMethod,System.UInt32,Kernel.FOS_System.String,System.Boolean)"	"<param name=""AnId""/>"
Method	"Kernel.Hardware.Processes.Process.#ctor(Kernel.Hardware.Processes.ThreadStartMethod,System.UInt32,Kernel.FOS_System.String,System.Boolean)"	"<param name=""AName""/>"
Method	"Kernel.Hardware.Processes.Process.#ctor(Kernel.Hardware.Processes.ThreadStartMethod,System.UInt32,Kernel.FOS_System.String,System.Boolean)"	"<param name=""userMode""/>"
Method	Kernel.Hardware.Processes.Process.CreateThread(Kernel.Hardware.Processes.ThreadStartMethod)	<summary>
Method	Kernel.Hardware.Processes.Process.CreateThread(Kernel.Hardware.Processes.ThreadStartMethod)	<remarks>
Method	Kernel.Hardware.Processes.Process.CreateThread(Kernel.Hardware.Processes.ThreadStartMethod)	<returns>
Method	Kernel.Hardware.Processes.Process.CreateThread(Kernel.Hardware.Processes.ThreadStartMethod)	"<param name=""MainMethod""/>"
Field	Kernel.Hardware.Processes.Process.Id	<summary>
Field	Kernel.Hardware.Processes.Process.Id	<remarks>
Method	Kernel.Hardware.Processes.Process.LoadMemLayout	<summary>
Method	Kernel.Hardware.Processes.Process.LoadMemLayout	<remarks>
Field	Kernel.Hardware.Processes.Process.Name	<summary>
Field	Kernel.Hardware.Processes.Process.Name	<remarks>
Field	Kernel.Hardware.Processes.Process.Priority	<summary>
Field	Kernel.Hardware.Processes.Process.Priority	<remarks>
Field	Kernel.Hardware.Processes.Process.TheMemoryLayout	<summary>
Field	Kernel.Hardware.Processes.Process.TheMemoryLayout	<remarks>
Field	Kernel.Hardware.Processes.Process.ThreadIdGenerator	<summary>
Field	Kernel.Hardware.Processes.Process.ThreadIdGenerator	<remarks>
Field	Kernel.Hardware.Processes.Process.Threads	<summary>
Field	Kernel.Hardware.Processes.Process.Threads	<remarks>
Method	Kernel.Hardware.Processes.Process.UnloadMemLayout	<summary>
Method	Kernel.Hardware.Processes.Process.UnloadMemLayout	<remarks>
Field	Kernel.Hardware.Processes.Process.UserMode	<summary>
Field	Kernel.Hardware.Processes.Process.UserMode	<remarks>
Type	Kernel.Hardware.Processes.ProcessManager	<summary>
Type	Kernel.Hardware.Processes.ProcessManager	<remarks>
Method	Kernel.Hardware.Processes.ProcessManager.#cctor	<remarks>
Method	"Kernel.Hardware.Processes.ProcessManager.CreateProcess(Kernel.Hardware.Processes.ThreadStartMethod,Kernel.FOS_System.String,System.Boolean)"	<summary>
Method	"Kernel.Hardware.Processes.ProcessManager.CreateProcess(Kernel.Hardware.Processes.ThreadStartMethod,Kernel.FOS_System.String,System.Boolean)"	<remarks>
Method	"Kernel.Hardware.Processes.ProcessManager.CreateProcess(Kernel.Hardware.Processes.ThreadStartMethod,Kernel.FOS_System.String,System.Boolean)"	<returns>
Method	"Kernel.Hardware.Processes.ProcessManager.CreateProcess(Kernel.Hardware.Processes.ThreadStartMethod,Kernel.FOS_System.String,System.Boolean)"	"<param name=""MainMethod""/>"
Method	"Kernel.Hardware.Processes.ProcessManager.CreateProcess(Kernel.Hardware.Processes.ThreadStartMethod,Kernel.FOS_System.String,System.Boolean)"	"<param name=""Name""/>"
Method	"Kernel.Hardware.Processes.ProcessManager.CreateProcess(Kernel.Hardware.Processes.ThreadStartMethod,Kernel.FOS_System.String,System.Boolean)"	"<param name=""UserMode""/>"
Field	Kernel.Hardware.Processes.ProcessManager.CurrentProcess	<summary>
Field	Kernel.Hardware.Processes.ProcessManager.CurrentProcess	<remarks>
Field	Kernel.Hardware.Processes.ProcessManager.CurrentThread	<summary>
Field	Kernel.Hardware.Processes.ProcessManager.CurrentThread	<remarks>
Field	Kernel.Hardware.Processes.ProcessManager.CurrentThread_State	<summary>
Field	Kernel.Hardware.Processes.ProcessManager.CurrentThread_State	<remarks>
Field	Kernel.Hardware.Processes.ProcessManager.Processes	<summary>
Field	Kernel.Hardware.Processes.ProcessManager.Processes	<remarks>
Field	Kernel.Hardware.Processes.ProcessManager.ProcessIdGenerator	<summary>
Field	Kernel.Hardware.Processes.ProcessManager.ProcessIdGenerator	<remarks>
Method	"Kernel.Hardware.Processes.ProcessManager.RegisterProcess(Kernel.Hardware.Processes.Process,Kernel.Hardware.Processes.Scheduler.Priority)"	<summary>
Method	"Kernel.Hardware.Processes.ProcessManager.RegisterProcess(Kernel.Hardware.Processes.Process,Kernel.Hardware.Processes.Scheduler.Priority)"	<remarks>
Method	"Kernel.Hardware.Processes.ProcessManager.RegisterProcess(Kernel.Hardware.Processes.Process,Kernel.Hardware.Processes.Scheduler.Priority)"	"<param name=""process""/>"
Method	"Kernel.Hardware.Processes.ProcessManager.RegisterProcess(Kernel.Hardware.Processes.Process,Kernel.Hardware.Processes.Scheduler.Priority)"	"<param name=""priority""/>"
Method	"Kernel.Hardware.Processes.ProcessManager.SwitchProcess(System.UInt32,System.Int32)"	<summary>
Method	"Kernel.Hardware.Processes.ProcessManager.SwitchProcess(System.UInt32,System.Int32)"	"<param name=""processId""/>"
Method	"Kernel.Hardware.Processes.ProcessManager.SwitchProcess(System.UInt32,System.Int32)"	"<param name=""threadId""/>"
Type	Kernel.Hardware.Processes.Scheduler	<summary>
Type	Kernel.Hardware.Processes.Scheduler	<remarks>
Method	Kernel.Hardware.Processes.Scheduler.#cctor	<remarks>
Method	Kernel.Hardware.Processes.Scheduler.Disable	<summary>
Method	Kernel.Hardware.Processes.Scheduler.Disable	<remarks>
Method	Kernel.Hardware.Processes.Scheduler.Enable	<summary>
Method	Kernel.Hardware.Processes.Scheduler.Enable	<remarks>
Field	Kernel.Hardware.Processes.Scheduler.Enabled	<summary>
Field	Kernel.Hardware.Processes.Scheduler.Enabled	<remarks>
Method	Kernel.Hardware.Processes.Scheduler.GetTSSPointer	<summary>
Method	Kernel.Hardware.Processes.Scheduler.GetTSSPointer	<remarks>
Method	Kernel.Hardware.Processes.Scheduler.GetTSSPointer	<returns>
Method	"Kernel.Hardware.Processes.Scheduler.HandlePageFault(System.UInt32,System.UInt32,System.UInt32)"	<summary>
Method	"Kernel.Hardware.Processes.Scheduler.HandlePageFault(System.UInt32,System.UInt32,System.UInt32)"	<remarks>
Method	"Kernel.Hardware.Processes.Scheduler.HandlePageFault(System.UInt32,System.UInt32,System.UInt32)"	"<param name=""eip""/>"
Method	"Kernel.Hardware.Processes.Scheduler.HandlePageFault(System.UInt32,System.UInt32,System.UInt32)"	"<param name=""errorCode""/>"
Method	"Kernel.Hardware.Processes.Scheduler.HandlePageFault(System.UInt32,System.UInt32,System.UInt32)"	"<param name=""address""/>"
Method	Kernel.Hardware.Processes.Scheduler.Init	<summary>
Method	Kernel.Hardware.Processes.Scheduler.Init	<remarks>
Method	"Kernel.Hardware.Processes.Scheduler.InitProcess(Kernel.Hardware.Processes.Process,Kernel.Hardware.Processes.Scheduler.Priority)"	<summary>
Method	"Kernel.Hardware.Processes.Scheduler.InitProcess(Kernel.Hardware.Processes.Process,Kernel.Hardware.Processes.Scheduler.Priority)"	<remarks>
Method	"Kernel.Hardware.Processes.Scheduler.InitProcess(Kernel.Hardware.Processes.Process,Kernel.Hardware.Processes.Scheduler.Priority)"	"<param name=""process""/>"
Method	"Kernel.Hardware.Processes.Scheduler.InitProcess(Kernel.Hardware.Processes.Process,Kernel.Hardware.Processes.Scheduler.Priority)"	"<param name=""priority""/>"
Method	Kernel.Hardware.Processes.Scheduler.LoadTR	<summary>
Method	Kernel.Hardware.Processes.Scheduler.LoadTR	<remarks>
Field	Kernel.Hardware.Processes.Scheduler.MSFreq	<summary>
Field	Kernel.Hardware.Processes.Scheduler.MSFreq	<remarks>
Method	"Kernel.Hardware.Processes.Scheduler.NextProcess(System.Int32@,System.Int32@)"	<summary>
Method	"Kernel.Hardware.Processes.Scheduler.NextProcess(System.Int32@,System.Int32@)"	<remarks>
Method	"Kernel.Hardware.Processes.Scheduler.NextProcess(System.Int32@,System.Int32@)"	"<param name=""threadIdx""/>"
Method	"Kernel.Hardware.Processes.Scheduler.NextProcess(System.Int32@,System.Int32@)"	"<param name=""processIdx""/>"
Method	"Kernel.Hardware.Processes.Scheduler.NextThread(System.Int32,System.Int32)"	<summary>
Method	"Kernel.Hardware.Processes.Scheduler.NextThread(System.Int32,System.Int32)"	<remarks>
Method	"Kernel.Hardware.Processes.Scheduler.NextThread(System.Int32,System.Int32)"	<returns>
Method	"Kernel.Hardware.Processes.Scheduler.NextThread(System.Int32,System.Int32)"	"<param name=""threadIdx""/>"
Method	"Kernel.Hardware.Processes.Scheduler.NextThread(System.Int32,System.Int32)"	"<param name=""processIdx""/>"
Method	Kernel.Hardware.Processes.Scheduler.OnTimerInterrupt(Kernel.FOS_System.Object)	<summary>
Method	Kernel.Hardware.Processes.Scheduler.OnTimerInterrupt(Kernel.FOS_System.Object)	<remarks>
Method	Kernel.Hardware.Processes.Scheduler.OnTimerInterrupt(Kernel.FOS_System.Object)	"<param name=""state""/>"
Method	Kernel.Hardware.Processes.Scheduler.SetupThreadForStart	<summary>
Method	Kernel.Hardware.Processes.Scheduler.SetupThreadForStart	<remarks>
Method	Kernel.Hardware.Processes.Scheduler.ThreadTerminated	<summary>
Method	Kernel.Hardware.Processes.Scheduler.ThreadTerminated	<remarks>
Method	Kernel.Hardware.Processes.Scheduler.UpdateCurrentState	<summary>
Method	Kernel.Hardware.Processes.Scheduler.UpdateCurrentState	<remarks>
Method	Kernel.Hardware.Processes.Scheduler.UpdateCurrentThread	<summary>
Method	Kernel.Hardware.Processes.Scheduler.UpdateCurrentThread	<remarks>
Method	Kernel.Hardware.Processes.Scheduler.UpdateSleepingThreads	<summary>
Method	Kernel.Hardware.Processes.Scheduler.UpdateSleepingThreads	<remarks>
Method	"Kernel.Hardware.Processes.Scheduler.WriteNumber(Kernel.FOS_System.String,System.UInt32)"	<summary>
Method	"Kernel.Hardware.Processes.Scheduler.WriteNumber(Kernel.FOS_System.String,System.UInt32)"	<remarks>
Method	"Kernel.Hardware.Processes.Scheduler.WriteNumber(Kernel.FOS_System.String,System.UInt32)"	"<param name=""str""/>"
Method	"Kernel.Hardware.Processes.Scheduler.WriteNumber(Kernel.FOS_System.String,System.UInt32)"	"<param name=""val""/>"
Type	Kernel.Hardware.Processes.Scheduler.Priority	<summary>
Type	Kernel.Hardware.Processes.Scheduler.Priority	<remarks>
Type	Kernel.Hardware.Processes.Scheduler.TerminateMethod	<summary>
Type	Kernel.Hardware.Processes.Scheduler.TerminateMethod	<remarks>
Type	Kernel.Hardware.Processes.Thread	<summary>
Type	Kernel.Hardware.Processes.Thread	<remarks>
Method	"Kernel.Hardware.Processes.Thread.#ctor(Kernel.Hardware.Processes.ThreadStartMethod,System.UInt32,System.Boolean)"	<remarks>
Method	"Kernel.Hardware.Processes.Thread.#ctor(Kernel.Hardware.Processes.ThreadStartMethod,System.UInt32,System.Boolean)"	"<param name=""StartMethod""/>"
Method	"Kernel.Hardware.Processes.Thread.#ctor(Kernel.Hardware.Processes.ThreadStartMethod,System.UInt32,System.Boolean)"	"<param name=""AnId""/>"
Method	"Kernel.Hardware.Processes.Thread.#ctor(Kernel.Hardware.Processes.ThreadStartMethod,System.UInt32,System.Boolean)"	"<param name=""UserMode""/>"
Method	Kernel.Hardware.Processes.Thread._EnterSleep(System.Int32)	<summary>
Method	Kernel.Hardware.Processes.Thread._EnterSleep(System.Int32)	"<param name=""ms""/>"
Method	Kernel.Hardware.Processes.Thread._Sleep(System.Int32)	<summary>
Method	Kernel.Hardware.Processes.Thread._Sleep(System.Int32)	<remarks>
Method	Kernel.Hardware.Processes.Thread._Sleep(System.Int32)	<returns>
Method	Kernel.Hardware.Processes.Thread._Sleep(System.Int32)	"<param name=""ms""/>"
Method	Kernel.Hardware.Processes.Thread._Sleep_Indefinitely	<summary>
Method	Kernel.Hardware.Processes.Thread._Sleep_Indefinitely	<remarks>
Method	Kernel.Hardware.Processes.Thread._Sleep_Indefinitely	<returns>
Method	Kernel.Hardware.Processes.Thread._Wake	<summary>
Method	Kernel.Hardware.Processes.Thread._Wake	<remarks>
Property	Kernel.Hardware.Processes.Thread.EAXFromInterruptStack	<summary>
Property	Kernel.Hardware.Processes.Thread.EAXFromInterruptStack	<remarks>
Property	Kernel.Hardware.Processes.Thread.EAXFromInterruptStack	<value>
Property	Kernel.Hardware.Processes.Thread.EBXFromInterruptStack	<summary>
Property	Kernel.Hardware.Processes.Thread.EBXFromInterruptStack	<remarks>
Property	Kernel.Hardware.Processes.Thread.EBXFromInterruptStack	<value>
Property	Kernel.Hardware.Processes.Thread.ECXFromInterruptStack	<summary>
Property	Kernel.Hardware.Processes.Thread.ECXFromInterruptStack	<remarks>
Property	Kernel.Hardware.Processes.Thread.ECXFromInterruptStack	<value>
Property	Kernel.Hardware.Processes.Thread.EDXFromInterruptStack	<summary>
Property	Kernel.Hardware.Processes.Thread.EDXFromInterruptStack	<remarks>
Property	Kernel.Hardware.Processes.Thread.EDXFromInterruptStack	<value>
Method	Kernel.Hardware.Processes.Thread.EnterSleep(System.Int32)	<summary>
Method	Kernel.Hardware.Processes.Thread.EnterSleep(System.Int32)	<remarks>
Method	Kernel.Hardware.Processes.Thread.EnterSleep(System.Int32)	"<param name=""ms""/>"
Field	Kernel.Hardware.Processes.Thread.Id	<summary>
Field	Kernel.Hardware.Processes.Thread.Id	<remarks>
Method	Kernel.Hardware.Processes.Thread.Sleep(System.Int32)	<summary>
Method	Kernel.Hardware.Processes.Thread.Sleep(System.Int32)	<remarks>
Method	Kernel.Hardware.Processes.Thread.Sleep(System.Int32)	<returns>
Method	Kernel.Hardware.Processes.Thread.Sleep(System.Int32)	"<param name=""ms""/>"
Method	Kernel.Hardware.Processes.Thread.Sleep_Indefinitely	<summary>
Method	Kernel.Hardware.Processes.Thread.Sleep_Indefinitely	<remarks>
Method	Kernel.Hardware.Processes.Thread.Sleep_Indefinitely	<returns>
Field	Kernel.Hardware.Processes.Thread.State	<summary>
Field	Kernel.Hardware.Processes.Thread.State	<remarks>
Field	Kernel.Hardware.Processes.Thread.TimeToRun	<summary>
Field	Kernel.Hardware.Processes.Thread.TimeToRunReload	<summary>
Field	Kernel.Hardware.Processes.Thread.TimeToSleep	<summary>
Method	Kernel.Hardware.Processes.Thread.Wake	<summary>
Method	Kernel.Hardware.Processes.Thread.Wake	<remarks>
Type	Kernel.Hardware.Processes.ThreadStartMethod	<summary>
Type	Kernel.Hardware.Processes.ThreadStartMethod	<remarks>
Type	Kernel.Hardware.Processes.ThreadState	<summary>
Type	Kernel.Hardware.Processes.ThreadState	<remarks>
Field	Kernel.Hardware.Processes.ThreadState.ESP	<summary>
Field	Kernel.Hardware.Processes.ThreadState.ESP	<remarks>
Field	Kernel.Hardware.Processes.ThreadState.ExState	<summary>
Field	Kernel.Hardware.Processes.ThreadState.ExState	<remarks>
Field	Kernel.Hardware.Processes.ThreadState.KernelStackTop	<summary>
Field	Kernel.Hardware.Processes.ThreadState.KernelStackTop	<remarks>
Field	Kernel.Hardware.Processes.ThreadState.SS	<summary>
Field	Kernel.Hardware.Processes.ThreadState.SS	<remarks>
Field	Kernel.Hardware.Processes.ThreadState.Started	<summary>
Field	Kernel.Hardware.Processes.ThreadState.Started	<remarks>
Field	Kernel.Hardware.Processes.ThreadState.StartEIP	<summary>
Field	Kernel.Hardware.Processes.ThreadState.StartEIP	<remarks>
Field	Kernel.Hardware.Processes.ThreadState.Terminated	<summary>
Field	Kernel.Hardware.Processes.ThreadState.Terminated	<remarks>
Field	Kernel.Hardware.Processes.ThreadState.ThreadStackTop	<summary>
Field	Kernel.Hardware.Processes.ThreadState.ThreadStackTop	<remarks>
Field	Kernel.Hardware.Processes.ThreadState.UserMode	<summary>
Field	Kernel.Hardware.Processes.ThreadState.UserMode	<remarks>
Type	Kernel.Hardware.Processes.TSS	<summary>
Type	Kernel.Hardware.Processes.TSS	<remarks>
Field	Kernel.Hardware.Processes.TSS.__blh	<summary>
Field	Kernel.Hardware.Processes.TSS.__blh	<remarks>
Field	Kernel.Hardware.Processes.TSS.__csh	<summary>
Field	Kernel.Hardware.Processes.TSS.__csh	<remarks>
Field	Kernel.Hardware.Processes.TSS.__dsh	<summary>
Field	Kernel.Hardware.Processes.TSS.__dsh	<remarks>
Field	Kernel.Hardware.Processes.TSS.__esh	<summary>
Field	Kernel.Hardware.Processes.TSS.__esh	<remarks>
Field	Kernel.Hardware.Processes.TSS.__fsh	<summary>
Field	Kernel.Hardware.Processes.TSS.__fsh	<remarks>
Field	Kernel.Hardware.Processes.TSS.__gsh	<summary>
Field	Kernel.Hardware.Processes.TSS.__gsh	<remarks>
Field	Kernel.Hardware.Processes.TSS.__ldth	<summary>
Field	Kernel.Hardware.Processes.TSS.__ldth	<remarks>
Field	Kernel.Hardware.Processes.TSS.__ss0h	<summary>
Field	Kernel.Hardware.Processes.TSS.__ss0h	<remarks>
Field	Kernel.Hardware.Processes.TSS.__ss1h	<summary>
Field	Kernel.Hardware.Processes.TSS.__ss1h	<remarks>
Field	Kernel.Hardware.Processes.TSS.__ss2h	<summary>
Field	Kernel.Hardware.Processes.TSS.__ss2h	<remarks>
Field	Kernel.Hardware.Processes.TSS.__ssh	<summary>
Field	Kernel.Hardware.Processes.TSS.__ssh	<remarks>
Field	Kernel.Hardware.Processes.TSS.backlink	<summary>
Field	Kernel.Hardware.Processes.TSS.backlink	<remarks>
Field	Kernel.Hardware.Processes.TSS.bitmap	<summary>
Field	Kernel.Hardware.Processes.TSS.bitmap	<remarks>
Field	Kernel.Hardware.Processes.TSS.cr3	<summary>
Field	Kernel.Hardware.Processes.TSS.cr3	<remarks>
Field	Kernel.Hardware.Processes.TSS.cs	<summary>
Field	Kernel.Hardware.Processes.TSS.cs	<remarks>
Field	Kernel.Hardware.Processes.TSS.ds	<summary>
Field	Kernel.Hardware.Processes.TSS.ds	<remarks>
Field	Kernel.Hardware.Processes.TSS.eax	<summary>
Field	Kernel.Hardware.Processes.TSS.eax	<remarks>
Field	Kernel.Hardware.Processes.TSS.ebp	<summary>
Field	Kernel.Hardware.Processes.TSS.ebp	<remarks>
Field	Kernel.Hardware.Processes.TSS.ebx	<summary>
Field	Kernel.Hardware.Processes.TSS.ebx	<remarks>
Field	Kernel.Hardware.Processes.TSS.ecx	<summary>
Field	Kernel.Hardware.Processes.TSS.ecx	<remarks>
Field	Kernel.Hardware.Processes.TSS.edi	<summary>
Field	Kernel.Hardware.Processes.TSS.edi	<remarks>
Field	Kernel.Hardware.Processes.TSS.edx	<summary>
Field	Kernel.Hardware.Processes.TSS.edx	<remarks>
Field	Kernel.Hardware.Processes.TSS.eflags	<summary>
Field	Kernel.Hardware.Processes.TSS.eflags	<remarks>
Field	Kernel.Hardware.Processes.TSS.eip	<summary>
Field	Kernel.Hardware.Processes.TSS.eip	<remarks>
Field	Kernel.Hardware.Processes.TSS.es	<summary>
Field	Kernel.Hardware.Processes.TSS.es	<remarks>
Field	Kernel.Hardware.Processes.TSS.esi	<summary>
Field	Kernel.Hardware.Processes.TSS.esi	<remarks>
Field	Kernel.Hardware.Processes.TSS.esp	<summary>
Field	Kernel.Hardware.Processes.TSS.esp	<remarks>
Field	Kernel.Hardware.Processes.TSS.esp0	<summary>
Field	Kernel.Hardware.Processes.TSS.esp0	<remarks>
Field	Kernel.Hardware.Processes.TSS.esp1	<summary>
Field	Kernel.Hardware.Processes.TSS.esp1	<remarks>
Field	Kernel.Hardware.Processes.TSS.esp2	<summary>
Field	Kernel.Hardware.Processes.TSS.esp2	<remarks>
Field	Kernel.Hardware.Processes.TSS.fs	<summary>
Field	Kernel.Hardware.Processes.TSS.fs	<remarks>
Field	Kernel.Hardware.Processes.TSS.gs	<summary>
Field	Kernel.Hardware.Processes.TSS.gs	<remarks>
Field	Kernel.Hardware.Processes.TSS.ldt	<summary>
Field	Kernel.Hardware.Processes.TSS.ldt	<remarks>
Field	Kernel.Hardware.Processes.TSS.ss	<summary>
Field	Kernel.Hardware.Processes.TSS.ss	<remarks>
Field	Kernel.Hardware.Processes.TSS.ss0	<summary>
Field	Kernel.Hardware.Processes.TSS.ss0	<remarks>
Field	Kernel.Hardware.Processes.TSS.ss1	<summary>
Field	Kernel.Hardware.Processes.TSS.ss1	<remarks>
Field	Kernel.Hardware.Processes.TSS.ss2	<summary>
Field	Kernel.Hardware.Processes.TSS.ss2	<remarks>
Field	Kernel.Hardware.Processes.TSS.trace	<summary>
Field	Kernel.Hardware.Processes.TSS.trace	<remarks>
Namespace	Kernel.Hardware.Processes.IPC	<summary>
Type	Kernel.Hardware.Processes.IPC.PipesManager	<summary>
Type	Kernel.Hardware.Processes.IPC.PipesManager	<remarks>
Namespace	Kernel.Hardware.Processes.Synchronisation	<summary>
Type	Kernel.Hardware.Processes.Synchronisation.Mutex	<summary>
Type	Kernel.Hardware.Processes.Synchronisation.Mutex	<remarks>
Method	Kernel.Hardware.Processes.Synchronisation.Mutex.#ctor(System.Int32)	<remarks>
Method	Kernel.Hardware.Processes.Synchronisation.Mutex.#ctor(System.Int32)	"<param name=""anId""/>"
Method	Kernel.Hardware.Processes.Synchronisation.Mutex.Enter	<summary>
Method	Kernel.Hardware.Processes.Synchronisation.Mutex.Enter	<remarks>
Method	Kernel.Hardware.Processes.Synchronisation.Mutex.Exit	<summary>
Method	Kernel.Hardware.Processes.Synchronisation.Mutex.Exit	<remarks>
Field	Kernel.Hardware.Processes.Synchronisation.Mutex.id	<summary>
Field	Kernel.Hardware.Processes.Synchronisation.Mutex.id	<remarks>
Property	Kernel.Hardware.Processes.Synchronisation.Mutex.Id	<summary>
Property	Kernel.Hardware.Processes.Synchronisation.Mutex.Id	<remarks>
Property	Kernel.Hardware.Processes.Synchronisation.Mutex.Id	<value>
Field	Kernel.Hardware.Processes.Synchronisation.Mutex.locked	<summary>
Field	Kernel.Hardware.Processes.Synchronisation.Mutex.locked	<remarks>
Property	Kernel.Hardware.Processes.Synchronisation.Mutex.Locked	<summary>
Property	Kernel.Hardware.Processes.Synchronisation.Mutex.Locked	<remarks>
Property	Kernel.Hardware.Processes.Synchronisation.Mutex.Locked	<value>
Field	Kernel.Hardware.Processes.Synchronisation.Mutex.padding	<summary>
Field	Kernel.Hardware.Processes.Synchronisation.Mutex.padding	<remarks>
Type	Kernel.Hardware.Processes.Synchronisation.Semaphore	<summary>
Type	Kernel.Hardware.Processes.Synchronisation.Semaphore	<remarks>
Method	"Kernel.Hardware.Processes.Synchronisation.Semaphore.#ctor(System.Int32,System.Int32)"	<remarks>
Method	"Kernel.Hardware.Processes.Synchronisation.Semaphore.#ctor(System.Int32,System.Int32)"	"<param name=""anId""/>"
Method	"Kernel.Hardware.Processes.Synchronisation.Semaphore.#ctor(System.Int32,System.Int32)"	"<param name=""aLimit""/>"
Field	Kernel.Hardware.Processes.Synchronisation.Semaphore.count	<summary>
Field	Kernel.Hardware.Processes.Synchronisation.Semaphore.count	<remarks>
Property	Kernel.Hardware.Processes.Synchronisation.Semaphore.Count	<summary>
Property	Kernel.Hardware.Processes.Synchronisation.Semaphore.Count	<remarks>
Property	Kernel.Hardware.Processes.Synchronisation.Semaphore.Count	<value>
Field	Kernel.Hardware.Processes.Synchronisation.Semaphore.ExclLock	<summary>
Field	Kernel.Hardware.Processes.Synchronisation.Semaphore.ExclLock	<remarks>
Field	Kernel.Hardware.Processes.Synchronisation.Semaphore.id	<summary>
Field	Kernel.Hardware.Processes.Synchronisation.Semaphore.id	<remarks>
Property	Kernel.Hardware.Processes.Synchronisation.Semaphore.Id	<summary>
Property	Kernel.Hardware.Processes.Synchronisation.Semaphore.Id	<remarks>
Property	Kernel.Hardware.Processes.Synchronisation.Semaphore.Id	<value>
Field	Kernel.Hardware.Processes.Synchronisation.Semaphore.limit	<summary>
Field	Kernel.Hardware.Processes.Synchronisation.Semaphore.limit	<remarks>
Property	Kernel.Hardware.Processes.Synchronisation.Semaphore.Limit	<summary>
Property	Kernel.Hardware.Processes.Synchronisation.Semaphore.Limit	<remarks>
Property	Kernel.Hardware.Processes.Synchronisation.Semaphore.Limit	<value>
Method	Kernel.Hardware.Processes.Synchronisation.Semaphore.Signal	<summary>
Method	Kernel.Hardware.Processes.Synchronisation.Semaphore.Signal	<remarks>
Method	Kernel.Hardware.Processes.Synchronisation.Semaphore.Wait	<summary>
Method	Kernel.Hardware.Processes.Synchronisation.Semaphore.Wait	<remarks>
Namespace	Kernel.Hardware.Tasks	<summary>
Type	Kernel.Hardware.Tasks.DeviceManagerTask	<summary>
Type	Kernel.Hardware.Tasks.DeviceManagerTask	<remarks>
Method	Kernel.Hardware.Tasks.DeviceManagerTask.#cctor	<remarks>
Field	Kernel.Hardware.Tasks.DeviceManagerTask.Awake	<summary>
Field	Kernel.Hardware.Tasks.DeviceManagerTask.Awake	<remarks>
Method	Kernel.Hardware.Tasks.DeviceManagerTask.Main	<summary>
Method	Kernel.Hardware.Tasks.DeviceManagerTask.Main	<remarks>
Field	Kernel.Hardware.Tasks.DeviceManagerTask.OwnerThread	<summary>
Field	Kernel.Hardware.Tasks.DeviceManagerTask.OwnerThread	<remarks>
Field	Kernel.Hardware.Tasks.DeviceManagerTask.Terminate	<summary>
Field	Kernel.Hardware.Tasks.DeviceManagerTask.Terminate	<remarks>
Type	Kernel.Hardware.Tasks.NonCriticalInterruptsTask	<summary>
Type	Kernel.Hardware.Tasks.NonCriticalInterruptsTask	<remarks>
Method	Kernel.Hardware.Tasks.NonCriticalInterruptsTask.#cctor	<remarks>
Field	Kernel.Hardware.Tasks.NonCriticalInterruptsTask.Awake	<summary>
Field	Kernel.Hardware.Tasks.NonCriticalInterruptsTask.Awake	<remarks>
Method	Kernel.Hardware.Tasks.NonCriticalInterruptsTask.Main	<summary>
Method	Kernel.Hardware.Tasks.NonCriticalInterruptsTask.Main	<remarks>
Field	Kernel.Hardware.Tasks.NonCriticalInterruptsTask.OwnerThread	<summary>
Field	Kernel.Hardware.Tasks.NonCriticalInterruptsTask.OwnerThread	<remarks>
Field	Kernel.Hardware.Tasks.NonCriticalInterruptsTask.Terminate	<summary>
Field	Kernel.Hardware.Tasks.NonCriticalInterruptsTask.Terminate	<remarks>
Type	Kernel.Hardware.Tasks.PlayNotesTask	<summary>
Type	Kernel.Hardware.Tasks.PlayNotesTask	<remarks>
Method	Kernel.Hardware.Tasks.PlayNotesTask.#cctor	<remarks>
Field	Kernel.Hardware.Tasks.PlayNotesTask.Awake	<summary>
Field	Kernel.Hardware.Tasks.PlayNotesTask.Awake	<remarks>
Field	Kernel.Hardware.Tasks.PlayNotesTask.DeadNoteRequests	<summary>
Field	Kernel.Hardware.Tasks.PlayNotesTask.DeadNoteRequests	<remarks>
Field	Kernel.Hardware.Tasks.PlayNotesTask.LiveNoteRequests	<summary>
Field	Kernel.Hardware.Tasks.PlayNotesTask.LiveNoteRequests	<remarks>
Method	Kernel.Hardware.Tasks.PlayNotesTask.Main	<summary>
Method	Kernel.Hardware.Tasks.PlayNotesTask.Main	<remarks>
Field	Kernel.Hardware.Tasks.PlayNotesTask.OwnerThread	<summary>
Field	Kernel.Hardware.Tasks.PlayNotesTask.OwnerThread	<remarks>
Field	Kernel.Hardware.Tasks.PlayNotesTask.Playing	<summary>
Field	Kernel.Hardware.Tasks.PlayNotesTask.Playing	<remarks>
Method	"Kernel.Hardware.Tasks.PlayNotesTask.RequestNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	<summary>
Method	"Kernel.Hardware.Tasks.PlayNotesTask.RequestNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	<remarks>
Method	"Kernel.Hardware.Tasks.PlayNotesTask.RequestNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	"<param name=""note""/>"
Method	"Kernel.Hardware.Tasks.PlayNotesTask.RequestNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	"<param name=""duration""/>"
Method	"Kernel.Hardware.Tasks.PlayNotesTask.RequestNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	"<param name=""bpm""/>"
Method	Kernel.Hardware.Tasks.PlayNotesTask.SysCall_StopNoteHandler(Kernel.FOS_System.Object)	<summary>
Method	Kernel.Hardware.Tasks.PlayNotesTask.SysCall_StopNoteHandler(Kernel.FOS_System.Object)	<remarks>
Method	Kernel.Hardware.Tasks.PlayNotesTask.SysCall_StopNoteHandler(Kernel.FOS_System.Object)	"<param name=""objState""/>"
Field	Kernel.Hardware.Tasks.PlayNotesTask.Terminate	<summary>
Field	Kernel.Hardware.Tasks.PlayNotesTask.Terminate	<remarks>
Type	Kernel.Hardware.Tasks.PlayNotesTask.NoteRequest	<summary>
Type	Kernel.Hardware.Tasks.PlayNotesTask.NoteRequest	<remarks>
Method	Kernel.Hardware.Tasks.PlayNotesTask.NoteRequest.#ctor	<remarks>
Field	Kernel.Hardware.Tasks.PlayNotesTask.NoteRequest.bpm	<summary>
Field	Kernel.Hardware.Tasks.PlayNotesTask.NoteRequest.bpm	<remarks>
Field	Kernel.Hardware.Tasks.PlayNotesTask.NoteRequest.duration	<summary>
Field	Kernel.Hardware.Tasks.PlayNotesTask.NoteRequest.duration	<remarks>
Field	Kernel.Hardware.Tasks.PlayNotesTask.NoteRequest.note	<summary>
Field	Kernel.Hardware.Tasks.PlayNotesTask.NoteRequest.note	<remarks>
Type	Kernel.Hardware.Tasks.PlayNotesTask.NoteState	<summary>
Type	Kernel.Hardware.Tasks.PlayNotesTask.NoteState	<remarks>
Method	Kernel.Hardware.Tasks.PlayNotesTask.NoteState.#ctor	<remarks>
Field	Kernel.Hardware.Tasks.PlayNotesTask.NoteState.dur_ms	<summary>
Field	Kernel.Hardware.Tasks.PlayNotesTask.NoteState.dur_ms	<remarks>
Field	Kernel.Hardware.Tasks.PlayNotesTask.NoteState.handlerId	<summary>
Field	Kernel.Hardware.Tasks.PlayNotesTask.NoteState.handlerId	<remarks>
Type	Kernel.Hardware.Timers.PIT	<remarks>
Method	Kernel.Hardware.Timers.PIT.#ctor	<remarks>
Field	Kernel.Hardware.Timers.PIT._T0Reload	<remarks>
Field	Kernel.Hardware.Timers.PIT._T2Reload	<remarks>
Field	Kernel.Hardware.Timers.PIT.ActiveHandlers	<remarks>
Method	Kernel.Hardware.Timers.PIT.Clean	<remarks>
Field	Kernel.Hardware.Timers.PIT.Command	<remarks>
Field	Kernel.Hardware.Timers.PIT.Data0	<remarks>
Field	Kernel.Hardware.Timers.PIT.Data2	<remarks>
Method	Kernel.Hardware.Timers.PIT.Disable	<remarks>
Method	Kernel.Hardware.Timers.PIT.DisableSound	<remarks>
Method	Kernel.Hardware.Timers.PIT.Enable	<remarks>
Method	Kernel.Hardware.Timers.PIT.EnableSound	<remarks>
Method	Kernel.Hardware.Timers.PIT.Init	<remarks>
Method	Kernel.Hardware.Timers.PIT.InterruptHandler	<remarks>
Method	Kernel.Hardware.Timers.PIT.InterruptHandler(Kernel.FOS_System.Object)	<remarks>
Field	Kernel.Hardware.Timers.PIT.InterruptHandlerId	<remarks>
Method	Kernel.Hardware.Timers.PIT.MuteSound	<remarks>
Field	Kernel.Hardware.Timers.PIT.PITDelayNS	<remarks>
Field	Kernel.Hardware.Timers.PIT.PITFrequency	<remarks>
Method	"Kernel.Hardware.Timers.PIT.PlayNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	<summary>
Method	"Kernel.Hardware.Timers.PIT.PlayNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	<remarks>
Method	"Kernel.Hardware.Timers.PIT.PlayNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	"<param name=""note""/>"
Method	"Kernel.Hardware.Timers.PIT.PlayNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	"<param name=""duration""/>"
Method	"Kernel.Hardware.Timers.PIT.PlayNote(Kernel.Hardware.Timers.PIT.MusicalNote,Kernel.Hardware.Timers.PIT.MusicalNoteValue,System.UInt32)"	"<param name=""bpm""/>"
Method	Kernel.Hardware.Timers.PIT.PlaySound(System.Int32)	<remarks>
Method	"Kernel.Hardware.Timers.PIT.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	<summary>
Method	"Kernel.Hardware.Timers.PIT.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	<remarks>
Method	"Kernel.Hardware.Timers.PIT.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	<returns>
Method	"Kernel.Hardware.Timers.PIT.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	"<param name=""handler""/>"
Method	"Kernel.Hardware.Timers.PIT.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	"<param name=""TimeoutNS""/>"
Method	"Kernel.Hardware.Timers.PIT.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	"<param name=""Recurring""/>"
Method	"Kernel.Hardware.Timers.PIT.RegisterHandler(Kernel.Hardware.Devices.TimerHandler,System.Int64,System.Boolean,Kernel.FOS_System.Object)"	"<param name=""state""/>"
Method	Kernel.Hardware.Timers.PIT.RegisterHandler(Kernel.Hardware.Timers.PITHandler)	<remarks>
Method	Kernel.Hardware.Timers.PIT.SignalWait	<remarks>
Method	Kernel.Hardware.Timers.PIT.SignalWait(Kernel.FOS_System.Object)	<remarks>
Field	Kernel.Hardware.Timers.PIT.SpeakerPort	<remarks>
Property	Kernel.Hardware.Timers.PIT.T0DelyNS	<remarks>
Property	Kernel.Hardware.Timers.PIT.T0DelyNS	<value>
Property	Kernel.Hardware.Timers.PIT.T0Frequency	<remarks>
Property	Kernel.Hardware.Timers.PIT.T0Frequency	<value>
Field	Kernel.Hardware.Timers.PIT.T0RateGen	<remarks>
Property	Kernel.Hardware.Timers.PIT.T0Reload	<remarks>
Property	Kernel.Hardware.Timers.PIT.T0Reload	<value>
Property	Kernel.Hardware.Timers.PIT.T2DelyNS	<remarks>
Property	Kernel.Hardware.Timers.PIT.T2DelyNS	<value>
Property	Kernel.Hardware.Timers.PIT.T2Frequency	<remarks>
Property	Kernel.Hardware.Timers.PIT.T2Frequency	<value>
Property	Kernel.Hardware.Timers.PIT.T2Reload	<remarks>
Property	Kernel.Hardware.Timers.PIT.T2Reload	<value>
Field	Kernel.Hardware.Timers.PIT.ThePIT	<remarks>
Field	Kernel.Hardware.Timers.PIT.TimerIdGenerator	<remarks>
Method	Kernel.Hardware.Timers.PIT.UnregisterHandler(System.Int32)	<remarks>
Method	Kernel.Hardware.Timers.PIT.Wait(System.UInt32)	<remarks>
Method	Kernel.Hardware.Timers.PIT.WaitNS(System.Int64)	<remarks>
Field	Kernel.Hardware.Timers.PIT.WaitSignaled	<remarks>
Type	Kernel.Hardware.Timers.PIT.MusicalNote	<summary>
Type	Kernel.Hardware.Timers.PIT.MusicalNote	<remarks>
Type	Kernel.Hardware.Timers.PIT.MusicalNoteValue	<summary>
Type	Kernel.Hardware.Timers.PIT.MusicalNoteValue	<remarks>
Type	Kernel.Hardware.Timers.PITHandler	<remarks>
Method	"Kernel.Hardware.Timers.PITHandler.#ctor(Kernel.Hardware.Devices.TimerHandler,Kernel.FOS_System.Object,System.Int64,System.Boolean)"	<remarks>
Method	"Kernel.Hardware.Timers.PITHandler.#ctor(Kernel.Hardware.Devices.TimerHandler,Kernel.FOS_System.Object,System.Int64,System.UInt32)"	<remarks>
Field	Kernel.Hardware.Timers.PITHandler.HandleTrigger	<remarks>
Field	Kernel.Hardware.Timers.PITHandler.id	<remarks>
Property	Kernel.Hardware.Timers.PITHandler.Id	<remarks>
Property	Kernel.Hardware.Timers.PITHandler.Id	<value>
Field	Kernel.Hardware.Timers.PITHandler.NanosecondsTimeout	<remarks>
Field	Kernel.Hardware.Timers.PITHandler.NSRemaining	<remarks>
Field	Kernel.Hardware.Timers.PITHandler.Recurring	<remarks>
Field	Kernel.Hardware.Timers.PITHandler.state	<remarks>
Type	Kernel.Hardware.USB.ConfigurationDescriptor	<remarks>
Field	Kernel.Hardware.USB.ConfigurationDescriptor.attributes	<remarks>
Field	Kernel.Hardware.USB.ConfigurationDescriptor.configuration	<remarks>
Field	Kernel.Hardware.USB.ConfigurationDescriptor.configurationValue	<remarks>
Field	Kernel.Hardware.USB.ConfigurationDescriptor.descriptorType	<remarks>
Field	Kernel.Hardware.USB.ConfigurationDescriptor.length	<remarks>
Field	Kernel.Hardware.USB.ConfigurationDescriptor.maxPower	<remarks>
Field	Kernel.Hardware.USB.ConfigurationDescriptor.numInterfaces	<remarks>
Field	Kernel.Hardware.USB.ConfigurationDescriptor.totalLength	<remarks>
Type	Kernel.Hardware.USB.DeviceDescriptor	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.bcdDevice	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.bcdUSB	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.descriptorType	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.deviceClass	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.deviceProtocol	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.deviceSubclass	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.length	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.manufacturer	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.MaxPacketSize	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.numConfigurations	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.product	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.ProductId	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.serialNumber	<remarks>
Field	Kernel.Hardware.USB.DeviceDescriptor.VendorId	<remarks>
Type	Kernel.Hardware.USB.Endpoint	<remarks>
Method	Kernel.Hardware.USB.Endpoint.#ctor	<remarks>
Field	Kernel.Hardware.USB.Endpoint.mps	<remarks>
Field	Kernel.Hardware.USB.Endpoint.toggle	<remarks>
Field	Kernel.Hardware.USB.Endpoint.type	<remarks>
Type	Kernel.Hardware.USB.EndpointDescriptor	<remarks>
Field	Kernel.Hardware.USB.EndpointDescriptor.descriptorType	<remarks>
Field	Kernel.Hardware.USB.EndpointDescriptor.endpointAddress	<remarks>
Field	Kernel.Hardware.USB.EndpointDescriptor.length	<remarks>
Field	Kernel.Hardware.USB.EndpointDescriptor.maxPacketSize	<remarks>
Type	Kernel.Hardware.USB.EndpointType	<remarks>
Type	Kernel.Hardware.USB.InterfaceDescriptor	<remarks>
Field	Kernel.Hardware.USB.InterfaceDescriptor.alternateSetting	<remarks>
Field	Kernel.Hardware.USB.InterfaceDescriptor.descriptorType	<remarks>
Field	Kernel.Hardware.USB.InterfaceDescriptor.Interface	<remarks>
Field	Kernel.Hardware.USB.InterfaceDescriptor.interfaceClass	<remarks>
Field	Kernel.Hardware.USB.InterfaceDescriptor.interfaceNumber	<remarks>
Field	Kernel.Hardware.USB.InterfaceDescriptor.interfaceProtocol	<remarks>
Field	Kernel.Hardware.USB.InterfaceDescriptor.interfaceSubclass	<remarks>
Field	Kernel.Hardware.USB.InterfaceDescriptor.length	<remarks>
Field	Kernel.Hardware.USB.InterfaceDescriptor.numEndpoints	<remarks>
Type	Kernel.Hardware.USB.StringDescriptor	<remarks>
Field	Kernel.Hardware.USB.StringDescriptor.descriptorType	<remarks>
Field	Kernel.Hardware.USB.StringDescriptor.languageID	<remarks>
Field	Kernel.Hardware.USB.StringDescriptor.length	<remarks>
Type	Kernel.Hardware.USB.StringDescriptorUnicode	<remarks>
Field	Kernel.Hardware.USB.StringDescriptorUnicode.descriptorType	<remarks>
Field	Kernel.Hardware.USB.StringDescriptorUnicode.length	<remarks>
Field	Kernel.Hardware.USB.StringDescriptorUnicode.widechar	<remarks>
Type	Kernel.Hardware.USB.USBManager	<remarks>
Method	Kernel.Hardware.USB.USBManager.#cctor	<remarks>
Method	Kernel.Hardware.USB.USBManager.CheckDeviceForHCI(Kernel.Hardware.PCI.PCIDeviceNormal)	<summary>
Method	Kernel.Hardware.USB.USBManager.CheckDeviceForHCI(Kernel.Hardware.PCI.PCIDeviceNormal)	<remarks>
Method	Kernel.Hardware.USB.USBManager.CheckDeviceForHCI(Kernel.Hardware.PCI.PCIDeviceNormal)	"<param name=""aDevice""/>"
Method	"Kernel.Hardware.USB.USBManager.ClearFeatureHALT(Kernel.Hardware.USB.Devices.USBDeviceInfo,System.Byte)"	<remarks>
Method	"Kernel.Hardware.USB.USBManager.CreateDeviceInfo(Kernel.Hardware.USB.HCIs.HCI,Kernel.Hardware.USB.HCIs.HCPort)"	<remarks>
Field	Kernel.Hardware.USB.USBManager.Devices	<remarks>
Method	Kernel.Hardware.USB.USBManager.GetConfigDescriptor(Kernel.Hardware.USB.Devices.USBDeviceInfo)	<remarks>
Method	Kernel.Hardware.USB.USBManager.GetConfiguration(Kernel.Hardware.USB.Devices.USBDeviceInfo)	<remarks>
Method	"Kernel.Hardware.USB.USBManager.GetDeviceDescriptor(Kernel.Hardware.USB.Devices.USBDeviceInfo,System.Boolean)"	<remarks>
Method	"Kernel.Hardware.USB.USBManager.GetDeviceDescriptor(Kernel.Hardware.USB.Devices.USBDeviceInfo,System.Boolean)"	"<param name=""first8BytesOnly""/>"
Method	Kernel.Hardware.USB.USBManager.GetDeviceStringDescriptor(Kernel.Hardware.USB.Devices.USBDeviceInfo)	<remarks>
Method	"Kernel.Hardware.USB.USBManager.GetStatus(Kernel.Hardware.USB.Devices.USBDeviceInfo,System.Byte)"	<remarks>
Method	"Kernel.Hardware.USB.USBManager.GetUnicodeStringDescriptor(Kernel.Hardware.USB.Devices.USBDeviceInfo,System.Byte)"	<remarks>
Field	Kernel.Hardware.USB.USBManager.HCIDevices	<remarks>
Field	Kernel.Hardware.USB.USBManager.IgnoreUSB10and11Devices	<summary>
Field	Kernel.Hardware.USB.USBManager.IgnoreUSB10and11Devices	<remarks>
Method	Kernel.Hardware.USB.USBManager.Init	<remarks>
Method	Kernel.Hardware.USB.USBManager.NotifyDevicesNeedUpdate	<summary>
Method	Kernel.Hardware.USB.USBManager.NotifyDevicesNeedUpdate	<remarks>
Property	Kernel.Hardware.USB.USBManager.NumEHCIDevices	<remarks>
Property	Kernel.Hardware.USB.USBManager.NumEHCIDevices	<value>
Property	Kernel.Hardware.USB.USBManager.NumOHCIDevices	<remarks>
Property	Kernel.Hardware.USB.USBManager.NumOHCIDevices	<value>
Property	Kernel.Hardware.USB.USBManager.NumUHCIDevices	<remarks>
Property	Kernel.Hardware.USB.USBManager.NumUHCIDevices	<value>
Property	Kernel.Hardware.USB.USBManager.NumxHCIDevices	<remarks>
Property	Kernel.Hardware.USB.USBManager.NumxHCIDevices	<value>
Method	"Kernel.Hardware.USB.USBManager.ParseDeviceDescriptor(Kernel.Hardware.USB.DeviceDescriptor*,Kernel.Hardware.USB.Devices.USBDeviceInfo)"	<remarks>
Method	"Kernel.Hardware.USB.USBManager.SetConfiguration(Kernel.Hardware.USB.Devices.USBDeviceInfo,System.Byte)"	<remarks>
Method	"Kernel.Hardware.USB.USBManager.SetDeviceAddress(Kernel.Hardware.USB.Devices.USBDeviceInfo,System.Byte)"	<remarks>
Method	"Kernel.Hardware.USB.USBManager.SetFeatureHALT(Kernel.Hardware.USB.Devices.USBDeviceInfo,System.Byte)"	<remarks>
Method	"Kernel.Hardware.USB.USBManager.SetupDevice(Kernel.Hardware.USB.Devices.USBDeviceInfo,System.Byte)"	<remarks>
Method	Kernel.Hardware.USB.USBManager.Update	<remarks>
Type	Kernel.Hardware.USB.USBRequest	<remarks>
Field	Kernel.Hardware.USB.USBRequest.index	<remarks>
Field	Kernel.Hardware.USB.USBRequest.length	<remarks>
Field	Kernel.Hardware.USB.USBRequest.request	<remarks>
Field	Kernel.Hardware.USB.USBRequest.type	<remarks>
Field	Kernel.Hardware.USB.USBRequest.valueHi	<remarks>
Field	Kernel.Hardware.USB.USBRequest.valueLo	<remarks>
Type	Kernel.Hardware.USB.USBTransaction	<remarks>
Method	Kernel.Hardware.USB.USBTransaction.#ctor	<remarks>
Field	Kernel.Hardware.USB.USBTransaction.type	<remarks>
Field	Kernel.Hardware.USB.USBTransaction.underlyingTz	<remarks>
Type	Kernel.Hardware.USB.USBTransactionType	<remarks>
Type	Kernel.Hardware.USB.USBTransfer	<remarks>
Method	Kernel.Hardware.USB.USBTransfer.#ctor	<remarks>
Field	Kernel.Hardware.USB.USBTransfer.device	<remarks>
Field	Kernel.Hardware.USB.USBTransfer.endpoint	<remarks>
Field	Kernel.Hardware.USB.USBTransfer.packetSize	<remarks>
Field	Kernel.Hardware.USB.USBTransfer.success	<remarks>
Field	Kernel.Hardware.USB.USBTransfer.transactions	<remarks>
Field	Kernel.Hardware.USB.USBTransfer.type	<remarks>
Field	Kernel.Hardware.USB.USBTransfer.underlyingTransferData	<remarks>
Type	Kernel.Hardware.USB.USBTransferType	<remarks>
Type	Kernel.Hardware.USB.Devices.CommandBlockWrapper	<remarks>
Field	Kernel.Hardware.USB.Devices.CommandBlockWrapper.CBWCBLength	<remarks>
Field	Kernel.Hardware.USB.Devices.CommandBlockWrapper.CBWDataTransferLength	<remarks>
Field	Kernel.Hardware.USB.Devices.CommandBlockWrapper.CBWFlags	<remarks>
Field	Kernel.Hardware.USB.Devices.CommandBlockWrapper.CBWLUN	<remarks>
Field	Kernel.Hardware.USB.Devices.CommandBlockWrapper.CBWSignature	<remarks>
Field	Kernel.Hardware.USB.Devices.CommandBlockWrapper.CBWTag	<remarks>
Field	Kernel.Hardware.USB.Devices.CommandBlockWrapper.commandByte	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.#ctor(Kernel.Hardware.USB.Devices.USBDeviceInfo)	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.#cctor	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.Activate	<remarks>
Property	Kernel.Hardware.USB.Devices.MassStorageDevice.Active	<remarks>
Property	Kernel.Hardware.USB.Devices.MassStorageDevice.Active	<value>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.AnalyseInquiry(System.Byte*)	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.BulkReset	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.BulkReset(System.Byte)	<remarks>
Method	"Kernel.Hardware.USB.Devices.MassStorageDevice.CheckSCSICommand(System.Void*,System.Byte)"	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.CleanCaches	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.Destroy	<remarks>
Property	Kernel.Hardware.USB.Devices.MassStorageDevice.diskDevice	<remarks>
Property	Kernel.Hardware.USB.Devices.MassStorageDevice.diskDevice	<value>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.Eject	<remarks>
Property	Kernel.Hardware.USB.Devices.MassStorageDevice.Ejected	<remarks>
Property	Kernel.Hardware.USB.Devices.MassStorageDevice.Ejected	<value>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.GetRequestSense(System.Byte*)	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.Idle(System.Boolean)	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.Load	<remarks>
Field	Kernel.Hardware.USB.Devices.MassStorageDevice.MaxReadyTests	<remarks>
Method	"Kernel.Hardware.USB.Devices.MassStorageDevice.Read(System.UInt32,System.Void*)"	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.ResetRecoveryMSD(System.Byte)	<remarks>
Method	"Kernel.Hardware.USB.Devices.MassStorageDevice.SendSCSI_StartStopUnitCommand(System.Boolean,Kernel.Hardware.USB.Devices.MSD_PowerStates,System.Boolean,System.Boolean,System.Void*)"	<remarks>
Method	"Kernel.Hardware.USB.Devices.MassStorageDevice.SendSCSI_SyncCacheCommand(System.Boolean,System.Boolean,System.UInt32,System.UInt16,System.Void*)"	<remarks>
Method	"Kernel.Hardware.USB.Devices.MassStorageDevice.SendSCSI_SyncCacheCommand(System.Boolean,System.Boolean,System.Void*)"	<remarks>
Method	"Kernel.Hardware.USB.Devices.MassStorageDevice.SendSCSICommand_IN(System.Byte,System.UInt32,System.UInt16,System.Void*,System.Void*)"	<remarks>
Method	"Kernel.Hardware.USB.Devices.MassStorageDevice.SendSCSICommand_OUT(System.Byte,System.UInt32,System.UInt16,System.Void*,System.Void*)"	<remarks>
Field	Kernel.Hardware.USB.Devices.MassStorageDevice.SenseDescriptions	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.Setup	<remarks>
Method	"Kernel.Hardware.USB.Devices.MassStorageDevice.SetupSCSICommand(System.Byte,Kernel.Hardware.USB.Devices.CommandBlockWrapper*,System.UInt32,System.UInt16)"	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.Standby	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice.TestDeviceReady	<remarks>
Method	"Kernel.Hardware.USB.Devices.MassStorageDevice.Write(System.UInt32,System.Void*)"	<remarks>
Type	Kernel.Hardware.USB.Devices.MassStorageDevice_Consts	<remarks>
Field	Kernel.Hardware.USB.Devices.MassStorageDevice_Consts.CBWMagic	<remarks>
Field	Kernel.Hardware.USB.Devices.MassStorageDevice_Consts.CSWMagicNotOK	<remarks>
Field	Kernel.Hardware.USB.Devices.MassStorageDevice_Consts.CSWMagicOK	<remarks>
Type	Kernel.Hardware.USB.Devices.MassStorageDevice_DiskDevice	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice_DiskDevice.#ctor(Kernel.Hardware.USB.Devices.MassStorageDevice)	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice_DiskDevice.CleanCaches	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice_DiskDevice.Destroy	<remarks>
Field	Kernel.Hardware.USB.Devices.MassStorageDevice_DiskDevice.msd	<remarks>
Method	"Kernel.Hardware.USB.Devices.MassStorageDevice_DiskDevice.ReadBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Method	Kernel.Hardware.USB.Devices.MassStorageDevice_DiskDevice.Test	<remarks>
Method	"Kernel.Hardware.USB.Devices.MassStorageDevice_DiskDevice.WriteBlock(System.UInt64,System.UInt32,System.Byte[])"	<remarks>
Type	Kernel.Hardware.USB.Devices.MSD_PowerStates	<remarks>
Type	Kernel.Hardware.USB.Devices.USBDevice	<remarks>
Method	Kernel.Hardware.USB.Devices.USBDevice.#ctor(Kernel.Hardware.USB.Devices.USBDeviceInfo)	<remarks>
Method	Kernel.Hardware.USB.Devices.USBDevice.Destroy	<remarks>
Property	Kernel.Hardware.USB.Devices.USBDevice.DeviceInfo	<remarks>
Property	Kernel.Hardware.USB.Devices.USBDevice.DeviceInfo	<value>
Type	Kernel.Hardware.USB.Devices.USBDeviceInfo	<remarks>
Method	"Kernel.Hardware.USB.Devices.USBDeviceInfo.#ctor(System.Byte,Kernel.Hardware.USB.HCIs.HCI)"	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.address	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.Endpoints	<remarks>
Method	Kernel.Hardware.USB.Devices.USBDeviceInfo.FreePort	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.hc	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.InterfaceClass	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.InterfaceSubclass	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.manufacturerStringID	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.MSD_INEndpointID	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.MSD_InterfaceNum	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.MSD_OUTEndpointID	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.numConfigurations	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.portNum	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.product	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.productStringID	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.releaseNumber	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.SerialNumber	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.serNumberStringID	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.usbClass	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.usbProtocol	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.usbSpec	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.usbSubclass	<remarks>
Field	Kernel.Hardware.USB.Devices.USBDeviceInfo.vendor	<remarks>
Type	Kernel.Hardware.USB.HCIs.EHCI	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.#ctor(Kernel.Hardware.PCI.PCIDeviceNormal)	<remarks>
Method	"Kernel.Hardware.USB.HCIs.EHCI._INTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI._IssueTransfer(Kernel.Hardware.USB.USBTransfer)	<remarks>
Method	"Kernel.Hardware.USB.HCIs.EHCI._OUTTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.EHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI._SetupTransfer(Kernel.Hardware.USB.USBTransfer)	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.AddToAsyncSchedule(Kernel.Hardware.USB.USBTransfer)	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.AllocAndInitQTD(Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct*)	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.AllocQTDbuffer(Kernel.Hardware.USB.HCIs.EHCI_qTD)	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI.anyPortsChanged	<summary>
Field	Kernel.Hardware.USB.HCIs.EHCI.anyPortsChanged	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.AnyPortsChanged	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.AnyPortsChanged	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI.AsynchronousScheduleEnabled	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.AsynchronousScheduleEnabled	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI.AsynchronousScheduleStatus	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.AsynchronousScheduleStatus	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI.ASYNCLISTADDR	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.ASYNCLISTADDR	<value>
Field	Kernel.Hardware.USB.HCIs.EHCI.CapabilitiesRegAddr	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI.CapabilitiesRegsLength	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.CheckPortLineStatus(System.Byte)	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.CONFIGFLAG	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.CONFIGFLAG	<value>
Method	"Kernel.Hardware.USB.HCIs.EHCI.CreateQTD_IO(Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct*,System.Byte,System.Boolean,System.UInt16,System.UInt32)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.EHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.CTRLDSSEGMENT	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.CTRLDSSEGMENT	<value>
Method	Kernel.Hardware.USB.HCIs.EHCI.DeactivateLegacySupport	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.DetectDevice(System.Byte)	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.EECP	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.EECP	<value>
Method	Kernel.Hardware.USB.HCIs.EHCI.EnableAsyncSchedule	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI.EnabledPorts	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.EnablePorts	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.FLADJ	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.FLADJ	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI.FRINDEX	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.FRINDEX	<value>
Field	Kernel.Hardware.USB.HCIs.EHCI.HCCParams	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.HCHalted	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.HCHalted	<value>
Field	Kernel.Hardware.USB.HCIs.EHCI.HCIVersion	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI.HCSParams	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI.HostSystemError	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI.IdleQueueHead	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.InitHC	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.InitializeAsyncSchedule	<remarks>
Method	"Kernel.Hardware.USB.HCIs.EHCI.InitQH(Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct*,Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct*,Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct*,System.Boolean,System.Byte,System.Byte,System.UInt16)"	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.InterruptHandler	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.InterruptHandler(Kernel.FOS_System.Object)	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.InterruptOnAsyncAdvance	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.InterruptOnAsyncAdvance	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI.InterruptOnAsyncAdvanceDoorbell	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.InterruptOnAsyncAdvanceDoorbell	<value>
Field	Kernel.Hardware.USB.HCIs.EHCI.IrrecoverableError	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI.OpRegAddr	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.PERIODICLISTBASE	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.PERIODICLISTBASE	<value>
Method	Kernel.Hardware.USB.HCIs.EHCI.PortCheck	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.PORTSC	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.PORTSC	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI.PortWakeCap	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.PortWakeCap	<value>
Method	Kernel.Hardware.USB.HCIs.EHCI.ResetHC	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.ResetPort(System.Byte)	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI.SBRN	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.Start	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.StartHC	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI.TailQueueHead	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI.Update	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI.usbBaseAddress	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.USBCMD	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.USBCMD	<value>
Field	Kernel.Hardware.USB.HCIs.EHCI.USBIntCount	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.USBINTR	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.USBINTR	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI.USBSTS	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI.USBSTS	<value>
Type	Kernel.Hardware.USB.HCIs.EHCI_Consts	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI_Consts.#ctor	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI_Consts.#cctor	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.ALB_Alignment	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.CF	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.CMD_AsyncInterruptDoorbellMask	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.CMD_AsyncScheduleEnableMask	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.CMD_FrameListSizeMask	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.CMD_HCResetMask	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.CMD_InterruptThresholdMask	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.CMD_LightResetMask	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.CMD_ParkCountMask	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.CMD_ParkModeMask	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.CMD_PeriodicScheduleEnableMask	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.CMD_RunStopMask	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.FRI_Mask	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.NumAsyncListRetries	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.NumPorts	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PLB_Alignment	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PortRoutingMask	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PSTS_CompanionHCOwned	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PSTS_Connected	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PSTS_ConnectedChange	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PSTS_Enabled	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PSTS_EnabledChange	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PSTS_OverCurrent	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PSTS_OverCurrentChange	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PSTS_PortReset	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PSTS_PortResume	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PSTS_PortSuspend	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.PSTS_PowerOn	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.STS_AllInterrupts	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.STS_AsyncEnabled	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.STS_AsyncInterrupt	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.STS_FrameListRollover	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.STS_HCHalted	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.STS_HostSystemError	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.STS_PeriodicEnabled	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.STS_PortChange	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.STS_ReclamationFlag	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.STS_USBErrorInterrupt	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_Consts.STS_USBInterrupt	<remarks>
Type	Kernel.Hardware.USB.HCIs.EHCI_FrameListSizes	<remarks>
Type	Kernel.Hardware.USB.HCIs.EHCI_InterruptThresholdControls	<remarks>
Type	Kernel.Hardware.USB.HCIs.EHCI_qTD	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI_qTD.#ctor	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI_qTD.#ctor(Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct*)	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.AlternateNextqTDPointerTerminate	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.AlternateNextqTDPointerTerminate	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.Buffer0	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.Buffer0	<value>
Field	Kernel.Hardware.USB.HCIs.EHCI_qTD.Buffer0VirtAddr	<summary>
Field	Kernel.Hardware.USB.HCIs.EHCI_qTD.Buffer0VirtAddr	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.Buffer1	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.Buffer1	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.Buffer2	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.Buffer2	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.Buffer3	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.Buffer3	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.Buffer4	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.Buffer4	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.CurrentOffset	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.CurrentOffset	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.CurrentPage	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.CurrentPage	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.DataToggle	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.DataToggle	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.ErrorCounter	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.ErrorCounter	<value>
Method	Kernel.Hardware.USB.HCIs.EHCI_qTD.Free	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.InterruptOnComplete	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.InterruptOnComplete	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.NextqTDPointer	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.NextqTDPointer	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.NextqTDPointerTerminate	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.NextqTDPointerTerminate	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.PIDCode	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.PIDCode	<value>
Field	Kernel.Hardware.USB.HCIs.EHCI_qTD.qtd	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.Status	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.Status	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.TotalBytesToTransfer	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_qTD.TotalBytesToTransfer	<value>
Type	Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct.u1	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct.u2	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct.u3	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct.u4	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct.u5	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct.u6	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct.u7	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_qTD_Struct.u8	<remarks>
Type	Kernel.Hardware.USB.HCIs.EHCI_qTDTypes	<remarks>
Type	Kernel.Hardware.USB.HCIs.EHCI_QueueHead	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.#ctor	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.#ctor(Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct*)	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.Active	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.Active	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.ControlEndpointFlag	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.ControlEndpointFlag	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.CurrentqTDPointer	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.CurrentqTDPointer	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.DataToggleControl	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.DataToggleControl	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.DeviceAddress	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.DeviceAddress	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.EndpointNumber	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.EndpointNumber	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.EndpointSpeed	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.EndpointSpeed	<value>
Method	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.Free	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.HeadOfReclamationList	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.HeadOfReclamationList	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.HighBandwidthPipeMultiplier	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.HighBandwidthPipeMultiplier	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.HorizontalLinkPointer	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.HorizontalLinkPointer	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.HubAddr	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.HubAddr	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.InactiveOnNextTransaction	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.InactiveOnNextTransaction	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.InterruptScheduleMask	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.InterruptScheduleMask	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.MaximumPacketLength	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.MaximumPacketLength	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.NakCountReload	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.NakCountReload	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.NextqTDPointer	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.NextqTDPointer	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.NextqTDPointerTerminate	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.NextqTDPointerTerminate	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.PortNumber	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.PortNumber	<value>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.queueHead	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.SplitCompletionMask	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.SplitCompletionMask	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.Terminate	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.Terminate	<value>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.Type	<remarks>
Property	Kernel.Hardware.USB.HCIs.EHCI_QueueHead.Type	<value>
Type	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct.u1	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct.u10	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct.u11	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct.u12	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct.u2	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct.u3	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct.u4	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct.u5	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct.u6	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct.u7	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct.u8	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCI_QueueHead_Struct.u9	<remarks>
Type	Kernel.Hardware.USB.HCIs.EHCITransaction	<remarks>
Method	Kernel.Hardware.USB.HCIs.EHCITransaction.#ctor	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCITransaction.inBuffer	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCITransaction.inLength	<remarks>
Field	Kernel.Hardware.USB.HCIs.EHCITransaction.qTD	<remarks>
Type	Kernel.Hardware.USB.HCIs.HCI	<remarks>
Method	Kernel.Hardware.USB.HCIs.HCI.#ctor(Kernel.Hardware.PCI.PCIDeviceNormal)	<remarks>
Method	"Kernel.Hardware.USB.HCIs.HCI._INTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	<remarks>
Method	Kernel.Hardware.USB.HCIs.HCI._IssueTransfer(Kernel.Hardware.USB.USBTransfer)	<remarks>
Method	"Kernel.Hardware.USB.HCIs.HCI._OUTTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.HCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	<remarks>
Method	Kernel.Hardware.USB.HCIs.HCI._SetupTransfer(Kernel.Hardware.USB.USBTransfer)	<remarks>
Method	Kernel.Hardware.USB.HCIs.HCI.GetPort(System.Byte)	<remarks>
Method	"Kernel.Hardware.USB.HCIs.HCI.INTransaction(Kernel.Hardware.USB.USBTransfer,System.Boolean,System.Void*,System.UInt16)"	<remarks>
Method	Kernel.Hardware.USB.HCIs.HCI.IssueTransfer(Kernel.Hardware.USB.USBTransfer)	<remarks>
Field	Kernel.Hardware.USB.HCIs.HCI.OtherPorts	<remarks>
Method	"Kernel.Hardware.USB.HCIs.HCI.OUTTransaction(Kernel.Hardware.USB.USBTransfer,System.Boolean,System.Void*,System.UInt16)"	<remarks>
Field	Kernel.Hardware.USB.HCIs.HCI.pciDevice	<remarks>
Method	Kernel.Hardware.USB.HCIs.HCI.ResetPort(System.Byte)	<summary>
Method	Kernel.Hardware.USB.HCIs.HCI.ResetPort(System.Byte)	<remarks>
Method	Kernel.Hardware.USB.HCIs.HCI.ResetPort(System.Byte)	"<param name=""port""/>"
Field	Kernel.Hardware.USB.HCIs.HCI.RootPortCount	<remarks>
Field	Kernel.Hardware.USB.HCIs.HCI.RootPorts	<remarks>
Method	"Kernel.Hardware.USB.HCIs.HCI.SETUPTransaction(Kernel.Hardware.USB.USBTransfer,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.HCI.SetupTransfer(Kernel.Hardware.USB.Devices.USBDeviceInfo,Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransferType,System.Byte,System.UInt16)"	<remarks>
Method	Kernel.Hardware.USB.HCIs.HCI.SetupUSBDevice(System.Byte)	<remarks>
Method	Kernel.Hardware.USB.HCIs.HCI.Update	<remarks>
Type	Kernel.Hardware.USB.HCIs.HCPort	<remarks>
Method	Kernel.Hardware.USB.HCIs.HCPort.#ctor	<remarks>
Field	Kernel.Hardware.USB.HCIs.HCPort.connected	<remarks>
Field	Kernel.Hardware.USB.HCIs.HCPort.device	<remarks>
Field	Kernel.Hardware.USB.HCIs.HCPort.deviceInfo	<remarks>
Field	Kernel.Hardware.USB.HCIs.HCPort.portNum	<remarks>
Method	Kernel.Hardware.USB.HCIs.HCPort.Reset	<summary>
Method	Kernel.Hardware.USB.HCIs.HCPort.Reset	<remarks>
Field	Kernel.Hardware.USB.HCIs.HCPort.speed	<remarks>
Type	Kernel.Hardware.USB.HCIs.HCTransaction	<remarks>
Method	Kernel.Hardware.USB.HCIs.HCTransaction.#ctor	<remarks>
Type	Kernel.Hardware.USB.HCIs.UHCI	<summary>
Type	Kernel.Hardware.USB.HCIs.UHCI	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.#ctor(Kernel.Hardware.PCI.PCIDeviceNormal)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.#ctor(Kernel.Hardware.PCI.PCIDeviceNormal)	"<param name=""aPCIDevice""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._INTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI._INTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI._INTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	"<param name=""transfer""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._INTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	"<param name=""uTransaction""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._INTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	"<param name=""toggle""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._INTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	"<param name=""buffer""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._INTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	"<param name=""length""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI._IssueTransfer(Kernel.Hardware.USB.USBTransfer)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI._IssueTransfer(Kernel.Hardware.USB.USBTransfer)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI._IssueTransfer(Kernel.Hardware.USB.USBTransfer)	"<param name=""transfer""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._OUTTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI._OUTTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI._OUTTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	"<param name=""transfer""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._OUTTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	"<param name=""uTransaction""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._OUTTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	"<param name=""toggle""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._OUTTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	"<param name=""buffer""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._OUTTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.Void*,System.UInt16)"	"<param name=""length""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	"<param name=""transfer""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	"<param name=""uTransaction""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	"<param name=""toggle""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	"<param name=""tokenBytes""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	"<param name=""type""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	"<param name=""req""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	"<param name=""hiVal""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	"<param name=""loVal""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	"<param name=""index""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI._SETUPTransaction(Kernel.Hardware.USB.USBTransfer,Kernel.Hardware.USB.USBTransaction,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16)"	"<param name=""length""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI._SetupTransfer(Kernel.Hardware.USB.USBTransfer)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI._SetupTransfer(Kernel.Hardware.USB.USBTransfer)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI._SetupTransfer(Kernel.Hardware.USB.USBTransfer)	"<param name=""transfer""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI.AllocQTD(System.UInt32*)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.AllocQTD(System.UInt32*)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.AllocQTD(System.UInt32*)	<returns>
Method	Kernel.Hardware.USB.HCIs.UHCI.AllocQTD(System.UInt32*)	"<param name=""next""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI.AllocQTDbuffer(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.AllocQTDbuffer(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.AllocQTDbuffer(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<returns>
Method	Kernel.Hardware.USB.HCIs.UHCI.AllocQTDbuffer(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	"<param name=""td""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.AnalysePortStatus(System.Byte,System.UInt16)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI.AnalysePortStatus(System.Byte,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI.AnalysePortStatus(System.Byte,System.UInt16)"	"<param name=""j""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.AnalysePortStatus(System.Byte,System.UInt16)"	"<param name=""val""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQH(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32,Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQH(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32,Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQH(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32,Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)"	"<param name=""head""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQH(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32,Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)"	"<param name=""horizPtr""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQH(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32,Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)"	"<param name=""firstTD""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_IO(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Byte,System.Boolean,System.UInt16,System.Byte,System.Byte,System.UInt32)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_IO(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Byte,System.Boolean,System.UInt16,System.Byte,System.Byte,System.UInt32)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_IO(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Byte,System.Boolean,System.UInt16,System.Byte,System.Byte,System.UInt32)"	<returns>
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_IO(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Byte,System.Boolean,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""uQH""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_IO(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Byte,System.Boolean,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""next""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_IO(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Byte,System.Boolean,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""direction""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_IO(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Byte,System.Boolean,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""toggle""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_IO(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Byte,System.Boolean,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""tokenBytes""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_IO(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Byte,System.Boolean,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""device""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_IO(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Byte,System.Boolean,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""endpoint""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_IO(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Byte,System.Boolean,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""packetSize""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	<returns>
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""uQH""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""next""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""toggle""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""tokenBytes""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""type""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""req""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""hiVal""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""loVal""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""i""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""length""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""device""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""endpoint""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI.CreateQTD_SETUP(Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct*,System.UInt32*,System.Boolean,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.UInt32)"	"<param name=""packetSize""/>"
Field	Kernel.Hardware.USB.HCIs.UHCI.EnabledPorts	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.EnabledPorts	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.EnablePorts	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.EnablePorts	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI.FrameList	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.FrameList	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI.FRBASEADD	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.FRBASEADD	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI.FRNUM	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.FRNUM	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.InitHC	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.InitHC	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.InterruptHandler	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.InterruptHandler	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.InterruptHandler(Kernel.FOS_System.Object)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.InterruptHandler(Kernel.FOS_System.Object)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.InterruptHandler(Kernel.FOS_System.Object)	"<param name=""data""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI.isTransactionSuccessful(Kernel.Hardware.USB.HCIs.UHCITransaction)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.isTransactionSuccessful(Kernel.Hardware.USB.HCIs.UHCITransaction)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.isTransactionSuccessful(Kernel.Hardware.USB.HCIs.UHCITransaction)	<returns>
Method	Kernel.Hardware.USB.HCIs.UHCI.isTransactionSuccessful(Kernel.Hardware.USB.HCIs.UHCITransaction)	"<param name=""uT""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI.MapPort(System.UInt32)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.MapPort(System.UInt32)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.MapPort(System.UInt32)	<returns>
Method	Kernel.Hardware.USB.HCIs.UHCI.MapPort(System.UInt32)	"<param name=""portOffset""/>"
Field	Kernel.Hardware.USB.HCIs.UHCI.PORTSC1	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.PORTSC1	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI.PORTSC2	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.PORTSC2	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI.qhPointer	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.qhPointer	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.ResetHC	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.ResetHC	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.ResetPort(System.Byte)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.ResetPort(System.Byte)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.ResetPort(System.Byte)	"<param name=""port""/>"
Field	Kernel.Hardware.USB.HCIs.UHCI.run	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.run	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.ShowPortState(System.UInt16)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.ShowPortState(System.UInt16)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.ShowPortState(System.UInt16)	"<param name=""val""/>"
Field	Kernel.Hardware.USB.HCIs.UHCI.SOFMOD	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.SOFMOD	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.Start	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.Start	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI.TransactionsCompleted	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.TransactionsCompleted	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI.Update	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI.Update	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI.usbBaseAddress	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.usbBaseAddress	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI.USBCMD	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.USBCMD	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI.USBINTR	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.USBINTR	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI.USBSTS	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI.USBSTS	<remarks>
Type	Kernel.Hardware.USB.HCIs.UHCI_Consts	<summary>
Type	Kernel.Hardware.USB.HCIs.UHCI_Consts	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI_Consts.#ctor	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI_Consts.#cctor	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.BIT_QH	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.BIT_QH	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.BIT_T	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.BIT_T	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.BIT_Vf	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.BIT_Vf	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_CF	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_CF	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_EGSM	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_EGSM	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_FGR	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_FGR	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_GRESET	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_GRESET	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_HCRESET	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_HCRESET	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_MAXP	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_MAXP	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_RS	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_RS	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_SWDBG	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.CMD_SWDBG	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.FRBASEADD	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.FRBASEADD	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.FRNUM	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.FRNUM	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.INT_IOC_ENABLE	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.INT_IOC_ENABLE	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.INT_MASK	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.INT_MASK	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.INT_RESUME_ENABLE	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.INT_RESUME_ENABLE	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.INT_SHORT_PACKET_ENABLE	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.INT_SHORT_PACKET_ENABLE	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.INT_TIMEOUT_ENABLE	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.INT_TIMEOUT_ENABLE	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.NUMBER_OF_UHCI_RETRIES	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.NUMBER_OF_UHCI_RETRIES	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PCI_LEGACY_SUPPORT	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PCI_LEGACY_SUPPORT	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PCI_LEGACY_SUPPORT_NO_CHG	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PCI_LEGACY_SUPPORT_NO_CHG	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PCI_LEGACY_SUPPORT_PIRQ	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PCI_LEGACY_SUPPORT_PIRQ	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PCI_LEGACY_SUPPORT_STATUS	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PCI_LEGACY_SUPPORT_STATUS	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_CS	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_CS	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_CS_CHANGE	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_CS_CHANGE	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_ENABLE	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_ENABLE	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_ENABLE_CHANGE	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_ENABLE_CHANGE	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_LOWSPEED_DEVICE	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_LOWSPEED_DEVICE	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_RESET	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_RESET	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_RESUME_DETECT	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_RESUME_DETECT	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_VALID	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORT_VALID	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORTMAX	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORTMAX	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORTSC1	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORTSC1	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORTSC2	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.PORTSC2	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.SOFMOD	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.SOFMOD	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_HC_PROCESS_ERROR	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_HC_PROCESS_ERROR	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_HCHALTED	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_HCHALTED	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_HOST_SYSTEM_ERROR	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_HOST_SYSTEM_ERROR	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_MASK	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_MASK	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_RESUME_DETECT	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_RESUME_DETECT	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_USB_ERROR	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_USB_ERROR	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_USBINT	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.STS_USBINT	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.SUSPEND	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.SUSPEND	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.TD_IN	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.TD_IN	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.TD_OUT	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.TD_OUT	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.TD_SETUP	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.TD_SETUP	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.USBCMD	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.USBCMD	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.USBINTR	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.USBINTR	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.USBSTS	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_Consts.USBSTS	<remarks>
Type	Kernel.Hardware.USB.HCIs.UHCI_qTD	<summary>
Type	Kernel.Hardware.USB.HCIs.UHCI_qTD	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetActive(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetActive(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetActive(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<returns>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetActive(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	"<param name=""qTD""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetC_ERR(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetC_ERR(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetC_ERR(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<returns>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetC_ERR(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	"<param name=""qTD""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetDataToggle(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetDataToggle(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetDataToggle(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<returns>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetDataToggle(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	"<param name=""qTD""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetDeviceAddress(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetDeviceAddress(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetDeviceAddress(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<returns>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetDeviceAddress(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	"<param name=""qTD""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetEndpoint(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetEndpoint(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetEndpoint(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<returns>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetEndpoint(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	"<param name=""qTD""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetIntOnComplete(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetIntOnComplete(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetIntOnComplete(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<returns>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetIntOnComplete(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	"<param name=""qTD""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetMaxLength(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetMaxLength(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetMaxLength(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<returns>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetMaxLength(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	"<param name=""qTD""/>"
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetPacketID(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<summary>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetPacketID(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetPacketID(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	<returns>
Method	Kernel.Hardware.USB.HCIs.UHCI_qTD.GetPacketID(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*)	"<param name=""qTD""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetActive(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Boolean)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetActive(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Boolean)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetActive(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Boolean)"	"<param name=""qTD""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetActive(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Boolean)"	"<param name=""val""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetC_ERR(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetC_ERR(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetC_ERR(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	"<param name=""qTD""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetC_ERR(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	"<param name=""val""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetDataToggle(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Boolean)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetDataToggle(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Boolean)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetDataToggle(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Boolean)"	"<param name=""qTD""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetDataToggle(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Boolean)"	"<param name=""val""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetDeviceAddress(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetDeviceAddress(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetDeviceAddress(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	"<param name=""qTD""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetDeviceAddress(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	"<param name=""val""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetEndpoint(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetEndpoint(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetEndpoint(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	"<param name=""qTD""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetEndpoint(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	"<param name=""val""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetIntOnComplete(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Boolean)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetIntOnComplete(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Boolean)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetIntOnComplete(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Boolean)"	"<param name=""qTD""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetIntOnComplete(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Boolean)"	"<param name=""val""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetMaxLength(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.UInt16)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetMaxLength(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.UInt16)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetMaxLength(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.UInt16)"	"<param name=""qTD""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetMaxLength(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.UInt16)"	"<param name=""val""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetPacketID(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	<summary>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetPacketID(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	<remarks>
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetPacketID(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	"<param name=""qTD""/>"
Method	"Kernel.Hardware.USB.HCIs.UHCI_qTD.SetPacketID(Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct*,System.Byte)"	"<param name=""val""/>"
Type	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct	<summary>
Type	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.buffer	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.buffer	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.dWord6	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.dWord6	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.dWord7	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.dWord7	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.next	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.next	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.q_next	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.q_next	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.u1	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.u1	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.u2	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.u2	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.virtBuffer	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_qTD_Struct.virtBuffer	<remarks>
Type	Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct	<summary>
Type	Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct.next	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct.next	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct.q_first	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct.q_first	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct.q_last	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct.q_last	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct.transfer	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCI_QueueHead_Struct.transfer	<remarks>
Type	Kernel.Hardware.USB.HCIs.UHCITransaction	<remarks>
Method	Kernel.Hardware.USB.HCIs.UHCITransaction.#ctor	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCITransaction.inBuffer	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCITransaction.inLength	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCITransaction.qTD	<remarks>
Field	Kernel.Hardware.USB.HCIs.UHCITransaction.qTDBuffer	<summary>
Field	Kernel.Hardware.USB.HCIs.UHCITransaction.qTDBuffer	<remarks>
Type	Kernel.Hardware.USB.HCIs.USBPortSpeed	<remarks>
Type	Kernel.Hardware.VirtMem.MemoryLayout	<summary>
Type	Kernel.Hardware.VirtMem.MemoryLayout	<remarks>
Method	Kernel.Hardware.VirtMem.MemoryLayout.#ctor	<remarks>
Method	"Kernel.Hardware.VirtMem.MemoryLayout.AddCodePage(System.UInt32,System.UInt32)"	<summary>
Method	"Kernel.Hardware.VirtMem.MemoryLayout.AddCodePage(System.UInt32,System.UInt32)"	<remarks>
Method	"Kernel.Hardware.VirtMem.MemoryLayout.AddCodePage(System.UInt32,System.UInt32)"	"<param name=""pAddr""/>"
Method	"Kernel.Hardware.VirtMem.MemoryLayout.AddCodePage(System.UInt32,System.UInt32)"	"<param name=""vAddr""/>"
Method	"Kernel.Hardware.VirtMem.MemoryLayout.AddDataPage(System.UInt32,System.UInt32)"	<summary>
Method	"Kernel.Hardware.VirtMem.MemoryLayout.AddDataPage(System.UInt32,System.UInt32)"	<remarks>
Method	"Kernel.Hardware.VirtMem.MemoryLayout.AddDataPage(System.UInt32,System.UInt32)"	"<param name=""pAddr""/>"
Method	"Kernel.Hardware.VirtMem.MemoryLayout.AddDataPage(System.UInt32,System.UInt32)"	"<param name=""vAddr""/>"
Field	Kernel.Hardware.VirtMem.MemoryLayout.CodePages	<summary>
Field	Kernel.Hardware.VirtMem.MemoryLayout.CodePages	<remarks>
Field	Kernel.Hardware.VirtMem.MemoryLayout.DataPages	<summary>
Field	Kernel.Hardware.VirtMem.MemoryLayout.DataPages	<remarks>
Method	Kernel.Hardware.VirtMem.MemoryLayout.Load(System.Boolean)	<summary>
Method	Kernel.Hardware.VirtMem.MemoryLayout.Load(System.Boolean)	<remarks>
Method	Kernel.Hardware.VirtMem.MemoryLayout.Load(System.Boolean)	"<param name=""ProcessIsUM""/>"
Method	Kernel.Hardware.VirtMem.MemoryLayout.RemovePage(System.UInt32)	<summary>
Method	Kernel.Hardware.VirtMem.MemoryLayout.RemovePage(System.UInt32)	<remarks>
Method	Kernel.Hardware.VirtMem.MemoryLayout.RemovePage(System.UInt32)	"<param name=""vAddr""/>"
Method	Kernel.Hardware.VirtMem.MemoryLayout.Unload	<summary>
Method	Kernel.Hardware.VirtMem.MemoryLayout.Unload	<remarks>
Type	Kernel.Hardware.VirtMem.UpdateUsedPagesFlags	<summary>
Type	Kernel.Hardware.VirtMem.UpdateUsedPagesFlags	<remarks>
Type	Kernel.Hardware.VirtMem.VirtMemImpl	<remarks>
Method	Kernel.Hardware.VirtMem.VirtMemImpl.#ctor	<remarks>
Method	Kernel.Hardware.VirtMem.VirtMemImpl.FindFreePhysPageAddr	<summary>
Method	Kernel.Hardware.VirtMem.VirtMemImpl.FindFreePhysPageAddr	<remarks>
Method	Kernel.Hardware.VirtMem.VirtMemImpl.FindFreePhysPageAddr	<returns>
Method	Kernel.Hardware.VirtMem.VirtMemImpl.FindFreeVirtPageAddr	<summary>
Method	Kernel.Hardware.VirtMem.VirtMemImpl.FindFreeVirtPageAddr	<remarks>
Method	Kernel.Hardware.VirtMem.VirtMemImpl.FindFreeVirtPageAddr	<returns>
Method	"Kernel.Hardware.VirtMem.VirtMemImpl.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMem.VirtMemImpl.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""UpdateUsedPages""/>"
Method	"Kernel.Hardware.VirtMem.VirtMemImpl.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<summary>
Method	"Kernel.Hardware.VirtMem.VirtMemImpl.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMem.VirtMemImpl.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""pAddr""/>"
Method	"Kernel.Hardware.VirtMem.VirtMemImpl.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""vAddr""/>"
Method	"Kernel.Hardware.VirtMem.VirtMemImpl.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""flags""/>"
Method	"Kernel.Hardware.VirtMem.VirtMemImpl.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""UpdateUsedPages""/>"
Method	Kernel.Hardware.VirtMem.VirtMemImpl.MapKernel	<remarks>
Method	Kernel.Hardware.VirtMem.VirtMemImpl.PrintUsedPages	<remarks>
Method	Kernel.Hardware.VirtMem.VirtMemImpl.Test	<remarks>
Method	"Kernel.Hardware.VirtMem.VirtMemImpl.Unmap(System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<summary>
Method	"Kernel.Hardware.VirtMem.VirtMemImpl.Unmap(System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMem.VirtMemImpl.Unmap(System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""vAddr""/>"
Method	"Kernel.Hardware.VirtMem.VirtMemImpl.Unmap(System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""UpdateUsedPages""/>"
Type	Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags	<summary>
Type	Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags	<remarks>
Type	Kernel.Hardware.VirtMem.x86	<remarks>
Method	Kernel.Hardware.VirtMem.x86.#ctor	<remarks>
Method	Kernel.Hardware.VirtMem.x86.FindFreePhysPageAddr	<summary>
Method	Kernel.Hardware.VirtMem.x86.FindFreePhysPageAddr	<remarks>
Method	Kernel.Hardware.VirtMem.x86.FindFreePhysPageAddr	<returns>
Method	Kernel.Hardware.VirtMem.x86.FindFreeVirtPageAddr	<summary>
Method	Kernel.Hardware.VirtMem.x86.FindFreeVirtPageAddr	<remarks>
Method	Kernel.Hardware.VirtMem.x86.FindFreeVirtPageAddr	<returns>
Method	Kernel.Hardware.VirtMem.x86.GetCR3	<summary>
Method	Kernel.Hardware.VirtMem.x86.GetCR3	<remarks>
Method	Kernel.Hardware.VirtMem.x86.GetCR3	<returns>
Method	Kernel.Hardware.VirtMem.x86.GetFirstPageTablePtr	<remarks>
Method	Kernel.Hardware.VirtMem.x86.GetFixedPage(System.UInt32)	<remarks>
Method	Kernel.Hardware.VirtMem.x86.GetKernelMemEndPtr	<remarks>
Method	Kernel.Hardware.VirtMem.x86.GetKernelMemStartPtr	<remarks>
Method	Kernel.Hardware.VirtMem.x86.GetPageDirectoryPtr	<remarks>
Method	Kernel.Hardware.VirtMem.x86.InvalidatePTE(System.UInt32)	<remarks>
Method	"Kernel.Hardware.VirtMem.x86.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMem.x86.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""flags""/>"
Method	"Kernel.Hardware.VirtMem.x86.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.VirtMemImpl.PageFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""UpdateUsedPages""/>"
Method	"Kernel.Hardware.VirtMem.x86.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.x86.PTEFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<summary>
Method	"Kernel.Hardware.VirtMem.x86.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.x86.PTEFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMem.x86.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.x86.PTEFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""pAddr""/>"
Method	"Kernel.Hardware.VirtMem.x86.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.x86.PTEFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""vAddr""/>"
Method	"Kernel.Hardware.VirtMem.x86.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.x86.PTEFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""flags""/>"
Method	"Kernel.Hardware.VirtMem.x86.Map(System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.x86.PTEFlags,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""UpdateUsedPages""/>"
Method	Kernel.Hardware.VirtMem.x86.MapKernel	<remarks>
Method	Kernel.Hardware.VirtMem.x86.PrintUsedPages	<remarks>
Method	"Kernel.Hardware.VirtMem.x86.SetDirectoryEntry(System.UInt32,System.UInt32*)"	<remarks>
Method	"Kernel.Hardware.VirtMem.x86.SetPageEntry(System.UInt32*,System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.x86.PTEFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMem.x86.SetPageEntry(System.UInt32*,System.UInt32,System.UInt32,Kernel.Hardware.VirtMem.x86.PTEFlags)"	"<param name=""flags""/>"
Method	Kernel.Hardware.VirtMem.x86.Test	<remarks>
Method	"Kernel.Hardware.VirtMem.x86.Unmap(System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<summary>
Method	"Kernel.Hardware.VirtMem.x86.Unmap(System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	<remarks>
Method	"Kernel.Hardware.VirtMem.x86.Unmap(System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""vAddr""/>"
Method	"Kernel.Hardware.VirtMem.x86.Unmap(System.UInt32,Kernel.Hardware.VirtMem.UpdateUsedPagesFlags)"	"<param name=""UpdateUsedPages""/>"
Field	Kernel.Hardware.VirtMem.x86.UsedPhysPages	<remarks>
Field	Kernel.Hardware.VirtMem.x86.UsedVirtPages	<remarks>
Type	Kernel.Hardware.VirtMem.x86.PTEFlags	<summary>
Type	Kernel.Hardware.VirtMem.x86.PTEFlags	<remarks>
Type	Kernel.Utilities.ConstantsUtils	<remarks>
Method	Kernel.Utilities.ConstantsUtils.BIT(System.Int32)	<remarks>
Type	Kernel.Utilities.MemoryUtils	<remarks>
Method	"Kernel.Utilities.MemoryUtils.GetField(System.Byte*,System.Byte,System.Byte,System.Byte)"	<remarks>
Method	Kernel.Utilities.MemoryUtils.htonl(System.UInt32)	<remarks>
Method	"Kernel.Utilities.MemoryUtils.MemCpy(System.Byte*,System.Byte*,System.UInt64)"	<remarks>
Method	"Kernel.Utilities.MemoryUtils.MemCpy_32(System.Byte*,System.Byte*,System.UInt32)"	<remarks>
Method	"Kernel.Utilities.MemoryUtils.ZeroMem(System.Void*,System.UInt32)"	<remarks>
Type	Kernel.Utilities.ObjectUtilities	<remarks>
Namespace	KernelABI	<summary>
Type	KernelABI.SystemCalls	<summary>
Type	KernelABI.SystemCalls	<remarks>
Method	"KernelABI.SystemCalls.Call(KernelABI.SystemCalls.Calls,System.UInt32,System.UInt32,System.UInt32)"	<summary>
Method	"KernelABI.SystemCalls.Call(KernelABI.SystemCalls.Calls,System.UInt32,System.UInt32,System.UInt32)"	<remarks>
Method	"KernelABI.SystemCalls.Call(KernelABI.SystemCalls.Calls,System.UInt32,System.UInt32,System.UInt32)"	<returns>
Method	"KernelABI.SystemCalls.Call(KernelABI.SystemCalls.Calls,System.UInt32,System.UInt32,System.UInt32)"	"<param name=""callNumber""/>"
Method	"KernelABI.SystemCalls.Call(KernelABI.SystemCalls.Calls,System.UInt32,System.UInt32,System.UInt32)"	"<param name=""Param1""/>"
Method	"KernelABI.SystemCalls.Call(KernelABI.SystemCalls.Calls,System.UInt32,System.UInt32,System.UInt32)"	"<param name=""Param2""/>"
Method	"KernelABI.SystemCalls.Call(KernelABI.SystemCalls.Calls,System.UInt32,System.UInt32,System.UInt32)"	"<param name=""Param3""/>"
Method	KernelABI.SystemCalls.Sleep(System.UInt32)	<summary>
Method	KernelABI.SystemCalls.Sleep(System.UInt32)	<remarks>
Method	KernelABI.SystemCalls.Sleep(System.UInt32)	"<param name=""ms""/>"
Type	KernelABI.SystemCalls.Calls	<summary>
Type	KernelABI.SystemCalls.Calls	<remarks>
Namespace	MissingTagProcessor	<summary>
Type	MissingTagProcessor.Program	<summary>
Type	MissingTagProcessor.Program	<remarks>
Method	MissingTagProcessor.Program.#ctor	<remarks>
Method	MissingTagProcessor.Program.Main(System.String[])	<summary>
Method	MissingTagProcessor.Program.Main(System.String[])	<remarks>
Method	MissingTagProcessor.Program.Main(System.String[])	"<param name=""args""/>"
G	Kernel.Hardware.Processes	<summary>
G	Kernel.FOS_System.IO	<summary>
G	Drivers	<summary>
G	Drivers.Compiler	<summary>
G	Drivers.Compiler.Architectures	<summary>
